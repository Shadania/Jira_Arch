ID,Quotation Name,Document,Quotation Content,Comment,Codes,Reference,Density,Modified by
31:10,jbellis,CASSANDRA-3671,jbellis,,Comment,3:636 - 3:642,1,arjan
31:1,Would this be a good place to start using the Coda Metrics library?,CASSANDRA-3671,"Would this be a good place to start using the Coda Metrics library?
",,Architectural design configuration,3:645 - 3:713,1,arjan
31:11,scode,CASSANDRA-3671,scode,,Comment,3:717 - 3:721,1,arjan
31:2,"Yes, probably.",CASSANDRA-3671,"Yes, probably.
",,"Architectural solution benefits and drawbacks
Assumptions",3:724 - 3:739,2,arjan
31:3,"So here’s the deal: Other than running into CASSANDRA-3797, there is t…",CASSANDRA-3671,"So here’s the deal: Other than running into CASSANDRA-3797, there is the problem that  we cannot have both the Coda Metrics and our own MBean:s publish under the same class  name (StorageProxy in this case).",,Architectural solution benefits and drawbacks,3:740 - 3:946,1,arjan
31:4,"I considered various options, and decided to at least submit for consi…",CASSANDRA-3671,"I considered various options, and decided to at least submit for consideration something  that might be controversial:",,Architectural solution benefits and drawbacks,4:1 - 4:118,1,arjan
31:5,"I have created an org.apache.cassandra.metrics package, con-  taining…",CASSANDRA-3671,"I have created an org.apache.cassandra.metrics package, con-  taining a ClientRequestMetrics class which has these metrics. The idea is that if we are  going to need to adjust naming conventions anyway, let’s move to a naming convention  which makes sense to the user/system administrator, rather than the implementor (""Stor-  ageProxy"" means very little to most people who don’t know the code, I would suspect).
",,Architectural component behavior and structure,4:120 - 4:533,1,arjan
31:6,"It does create a split-world syndrome of ""new style"" vs. ""old style"" m…",CASSANDRA-3671,"It does create a split-world syndrome of ""new style"" vs. ""old style"" metrics though. I’d  love input.
",,Architectural solution benefits and drawbacks,4:534 - 4:636,1,arjan
31:12,scode,CASSANDRA-3671,scode,,Comment,4:879 - 4:883,1,arjan
31:7,We could also convert everything in StorageProxy to metrics and leave…,CASSANDRA-3671,"We could also convert everything in StorageProxy to metrics and leave naming  unaltered, assuming metrics can express everything we currently have in the MBean, which  I’m skeptical of. Haven’t checked, but other than data types like arrays, we provide methods  for invocation which is not a metric at all.
",,Architectural component behavior and structure,4:886 - 4:1193,1,arjan
31:13,brandon.williams,CASSANDRA-3671,brandon.williams,,Comment,4:1280 - 4:1295,1,arjan
31:8,"I’m +1 on this approach, because we need to keep things backwards-comp…",CASSANDRA-3671,"I’m +1 on this approach, because we need to keep things backwards-compatible for ex-  isting monitoring solutions, but ultimately I’m unhappy with the current state of JMX and  starting fresh like you have here is a good way to solve it. Fleshing out o.a.c.metrics looks  like the future to me.
",,Architectural solution benefits and drawbacks,4:1405 - 4:1700,1,arjan
31:14,urandom,CASSANDRA-3671,urandom,,Comment,4:2349 - 4:2355,1,arjan
31:9,"Otherwise, +1 from me.",CASSANDRA-3671,"Otherwise, +1 from me.
",,Architectural solution benefits and drawbacks,5:125 - 5:148,1,arjan
32:39,Selectively Disable hinted handof for a data center,CASSANDRA-6157,Selectively Disable hinted handof for a data center,,User requirement,3:52 - 3:102,1,arjan
32:1,Cassandra supports disabling the hints or reducing the window for hint…,CASSANDRA-6157,Cassandra supports disabling the hints or reducing the window for hints,,Existing system architecture description,3:122 - 3:192,1,arjan
32:2,It would be helpful to  have a switch which stops hints to a down data…,CASSANDRA-6157,"It would be helpful to  have a switch which stops hints to a down data center but continue hints to other DCs.
This is helpful during data center fail over as hints will put more unnecessary pressure on the DC  taking double trafc. Also since now Cassandra is under reduced reduncany, we don’t want to  disable hints within the DC.
",,"Motivation of design issue
User requirement",3:194 - 3:527,2,arjan
32:27,kohlisankalp,CASSANDRA-6157,kohlisankalp,,Comment,3:726 - 3:737,1,arjan
32:3,The reason to create new Map on modifcation is because  Yaml reader cr…,CASSANDRA-6157,"The reason to create new Map on modifcation is because  Yaml reader creates a HashMap by default which is not concurrent.
",,Architectural component behavior and structure,3:757 - 3:879,1,arjan
32:28,kohlisankalp,CASSANDRA-6157,kohlisankalp,,Comment,4:691 - 4:702,1,arjan
32:4,The reason I create a new map on changes is because snake yaml creates…,CASSANDRA-6157,"The reason I create a new map on changes is because snake yaml creates  a non concurrent hash map when loading the yaml. I could not fnd how to tell it to create  a concurrent map. So on future changes, I create a new concurrent map. If you have sug-  gestions then let me know.
",,Architectural component behavior and structure,4:708 - 4:987,1,arjan
32:29,jbellis,CASSANDRA-6157,jbellis,,Comment,4:1542 - 4:1548,1,arjan
32:5,Instead of boolean + override could we just have this? # may either be…,CASSANDRA-6157," Instead of boolean + override could we just have this?
# may either be ""true"" or ""false"" to enable globally, or a set of datacenters  to enable  # hinted_handoff_enabled: true  # hinted_handoff_enabled: {’dc1’, ’dc2’}",,Architectural component behavior and structure,4:1550 - 4:1768,1,arjan
32:6,"Requires some string parsing in Confg, but is backwards compatible wit…",CASSANDRA-6157,"Requires some string parsing in Confg, but is backwards compatible without adding a two-  layer approach of ""turn it on, but turn it back of sometimes.""",,Architectural solution benefits and drawbacks,4:1771 - 4:1922,1,arjan
32:30,lyubent,CASSANDRA-6157,lyubent,,Comment,5:5 - 5:11,1,arjan
32:7,Patch looks good except for a few nits,CASSANDRA-6157, Patch looks good except for a few nits,,Architectural solution benefits and drawbacks,5:13 - 5:51,1,arjan
32:41,kohlisankalp,CASSANDRA-6157,kohlisankalp,,Comment,5:564 - 5:575,1,arjan
32:40,Looks good except that I did not see this change in v3 patch,CASSANDRA-6157, Looks good except that I did not see this change in v3 patch,,Architectural solution benefits and drawbacks,5:577 - 5:637,1,arjan
32:31,jbellis,CASSANDRA-6157,jbellis,,Comment,5:836 - 5:842,1,arjan
32:8,Suggest just switching to CDL?,CASSANDRA-6157,"Suggest just switching to CDL?
",,Technology solution,5:1152 - 5:1183,1,arjan
32:9,"(I don’t think we can have a YAML construct that can be ""either a stri…",CASSANDRA-6157,"(I don’t think we can have a YAML construct that can be ""either a string, or a yaml list""  but I’m not an expert so I may be wrong on that point.)",,"Architectural solution benefits and drawbacks
Assumptions",5:1184 - 5:1329,2,arjan
32:10,"P.S. We typically just use Confg as a ""raw values"" dump and do extra p…",CASSANDRA-6157,"P.S. We typically just use Confg as a ""raw values"" dump and do extra parsing in DatabaseDescrip-  tor if necessary.
",,Existing system architecture description,6:1 - 6:117,1,arjan
32:32,jbellis,CASSANDRA-6157,jbellis,,Comment,6:122 - 6:128,1,arjan
32:11,"FWIW this is a thing, but probably overkill here unless we are worried…",CASSANDRA-6157,"FWIW this is a thing, but probably overkill here unless we are worried about people  having commas or spaces in their datacenter names: https://github.com/FasterXML/jackson-  dataformat-csv",,"Architectural design configuration
Architectural solution benefits and drawbacks",6:131 - 6:319,2,arjan
32:33,kohlisankalp,CASSANDRA-6157,kohlisankalp,,Comment,6:326 - 6:337,1,arjan
32:12,"Here are the problems and why i chose what we have.{’dc1’, ’dc2’} and…",CASSANDRA-6157,"Here are the problems and why i chose what we have.{’dc1’, ’dc2’} and  [’dc1’, ’dc2’] - If you specify this, snake yaml does not accept it as a string. It needs to be  wrapped in """" like ""{’dc1’,’dc2’}""",,Architectural solution benefits and drawbacks,6:340 - 6:541,1,arjan
32:13,"""dc1,dc2"" or ""dc1""- This can be done. In Java, this will come as a str…",CASSANDRA-6157,"""dc1,dc2"" or ""dc1""- This can be done. In Java, this will come as a string dc1,dc2 or  dc1(without quotes"") .
One of the problems with this is that if someone has a typo in true or false, it will treat is  as a data center name. I have to do something like  if (hinted_handof_enabled.toLowerCase().equals(""true"") || hinted_handof_enabled.toLowerCase().equals(""false""))  {  hinted_handof_enabled_default = Boolean.parseBoolean(hinted_handof_enabled);  } else {  split it by , and get the dc names.
}  So if someone types it as true1, we will treat it as a data center name.If this is fne, I  can do the changes.
",,Architectural solution benefits and drawbacks,6:544 - 6:1156,1,arjan
32:34,lyubent,CASSANDRA-6157,lyubent,,Comment,6:1161 - 6:1167,1,arjan
32:14,"+1 on the python set literals {’dc1’, ’dc2’},",CASSANDRA-6157,"+1 on the python set literals {’dc1’, ’dc2’},",,Architectural solution benefits and drawbacks,6:1170 - 6:1214,1,arjan
32:15,we will however have to wrap them  in quotes to keep snake yaml happy…,CASSANDRA-6157,"we will however have to wrap them  in quotes to keep snake yaml happy and so end up with ""{’dc1’, ’dc2’}"".",,Architectural component behavior and structure,6:1216 - 6:1321,1,arjan
32:16,This will require  some extra parsing on our end to strip the *’* howe…,CASSANDRA-6157,"This will require  some extra parsing on our end to strip the *’* however it will allow for spaces in DC names.
",,Architectural solution benefits and drawbacks,6:1323 - 6:1435,1,arjan
32:17,"As for DCs with comma names, where we split the parameter supplied we…",CASSANDRA-6157,"As for DCs with comma names, where we split the parameter supplied we can use regular  expressions to only split on commas that are outside of the single quotation marks above,  eg:  // in cassandra.yaml we have = hinted_handoff_enabled: ""{’DC1’,’DC,2’}""  final String [] dcs = hinted_handoff_enabled.substring(1, hinted_handoff_enabled.len  - 1).split("",(?=([^’]*’[^’]*’)*[^’]*$)"");  for(final String dc : dcs)  {  System.out.println("" DC => "" + dc);  hinted_handoff_enabled_by_dc.add(dc.trim());  }  // Output  // DC => ’DC1’  // DC => ’DC,2’",,Architectural component behavior and structure,6:1436 - 6:1979,1,arjan
32:35,jbellis,CASSANDRA-6157,jbellis,,Comment,6:1986 - 6:1992,1,arjan
32:18,I’m okay with that downside. I think this makes the most sense of the…,CASSANDRA-6157,"I’m okay with that downside. I think this makes the most sense of the alternatives.
",,Architectural solution benefits and drawbacks,6:2228 - 6:2312,1,arjan
32:19,"Brandon says we do support spaces in DC names, so we would need to all…",CASSANDRA-6157,"Brandon says we do support spaces in DC names, so we would need to allow escaping  those. At that point it probably makes more sense to use a ""real"" csv library rather than  hand-rolling it.
",,"Architectural design configuration
Architectural solution benefits and drawbacks",7:1 - 7:192,2,arjan
32:36,kohlisankalp,CASSANDRA-6157,kohlisankalp,,Comment,7:332 - 7:343,1,arjan
32:20,I am using Super  CSV library(http://supercsv.sourceforge.net).,CASSANDRA-6157,I am using Super  CSV library(http://supercsv.sourceforge.net).,,Architectural design configuration,7:398 - 7:460,1,arjan
32:37,aleksey,CASSANDRA-6157,aleksey,,Comment,7:1561 - 7:1567,1,arjan
32:21,Why exactly do we have csv in our yaml when yaml has perfectly good bu…,CASSANDRA-6157,"Why exactly do we have csv in our yaml when yaml has perfectly good built-in  support for lists?
",,"Architectural solution benefits and drawbacks
Assumptions",7:1570 - 7:1667,2,arjan
32:22,And there is zero reasons to collate the two confg options (enabled/di…,CASSANDRA-6157,And there is zero reasons to collate the two confg options (enabled/disabled + list of DCs) in  one yaml param. This should’ve been a boolean global {{hinted_handof_enabled}} param  plus a separate yaml list for the HH DC blacklist - {{hinted_handof_disabled_datacenters}},,Architectural solution benefits and drawbacks,7:1668 - 7:1939,1,arjan
32:38,aleksey,CASSANDRA-6157,aleksey,,Comment,7:2294 - 7:2300,1,arjan
32:23,and  I agree that having an override map is a bit of an overkill.,CASSANDRA-6157,and  I agree that having an override map is a bit of an overkill.,,Architectural solution benefits and drawbacks,7:2468 - 7:2532,1,arjan
32:24,One global on/of switch plus a  list of blacklist DCs to consider when…,CASSANDRA-6157,"One global on/of switch plus a  list of blacklist DCs to consider when the global switch is on should be more than enough.
",,"Architectural component behavior and structure
Architectural solution benefits and drawbacks",7:2534 - 7:2657,2,arjan
32:25,"Putting CSV in YAML is conceptually ugly, and so is mixing types here",CASSANDRA-6157,"Putting CSV in YAML is conceptually ugly, and so is mixing types here",,Architectural solution benefits and drawbacks,7:2658 - 7:2726,1,arjan
32:26,"Plus, the solution  as it is stands now supports selective enablement…",CASSANDRA-6157,"Plus, the solution  as it is stands now supports selective enablement vs. selective disablement (a blacklist),  contrary to the goal of the ticket.
",,Architectural solution benefits and drawbacks,7:2729 - 7:2877,1,arjan
33:1,There’s still an issue if multiple clients are connected to the same h…,CASSANDRA-10786,"There’s still an issue if multiple clients are connected to the same host. The frst client to execute  the query after the cache was invalidated will receive an UNPREPARED response, re-prepare,  and update its local metadata. But other clients might miss it entirely (the MD5 hasn’t changed),  and they will keep using their old metadata. For example:  # {{SELECT * ...}} statement is prepared in Cassandra with md5 abc123, clientA and clientB  both have a cache of the metadata (columns b and c) locally  # column a gets added to the table, C* invalidates its cache entry  # clientA sends an EXECUTE request for md5 abc123, gets UNPREPARED response, re-prepares  on the fy and updates its local metadata to (a, b, c)  # prepared statement is now in C*âĂŹs cache again, with the same md5 abc123  # clientB sends an EXECUTE request for id abc123. Because the cache has been populated  again, the query succeeds. But clientB still has not updated its metadata, itâĂŹs still (b,c)",,Run-time quality issues,3:427 - 3:1403,1,arjan
33:2,One solution that was suggested is to include a hash of the result set…,CASSANDRA-10786,"One solution that was suggested is to include a hash of the result set metadata in the md5.
This way the md5 would change at step 3, and any client using the old md5 would get an UN-  PREPARED, regardless of whether another client already reprepared.
",,Architectural design configuration,3:1406 - 3:1657,1,arjan
33:3,The following changes were made to native protocol v5:  - the PREPARED…,CASSANDRA-10786,"The following changes were made to native protocol v5:  - the PREPARED response includes {{result_metadata_id}}, a hash of the result set metadata.
- every EXECUTE message must provide {{result_metadata_id}} in addition to the prepared  statement id. If it doesn’t match the current one on the server, it means the client is operating  on a stale schema.
- to notify the client, the server returns a ROWS response with a new {{Metadata_changed}} fag,  2
the new {{result_metadata_id}} and the updated result metadata (this overrides the {{No_metadata}}  fag, even if the client had requested it)  - the client updates its copy of the result metadata before it decodes the results.
So the scenario above would now look like:  # {{SELECT * ...}} statement is prepared in Cassandra with md5 abc123, and result set (b, c)  that hashes to cde456  # column a gets added to the table, C* does not invalidate its cache entry, but only updates the  result set to (a, b, c) which hashes to ff789  # client sends an EXECUTE request for (statementId=abc123, resultId=cde456) and skip_metadata  fag  # cde456!=ff789, so C* responds with ROWS(..., no_metadata=false, metadata_changed=true,  new_metadata_id=ff789,col specs for (a,b,c))  # client updates its column specifcations, and will send the next execute queries with (statemen-  tId=abc123, resultId=ff789)  This works the same with multiple clients.
",,Architectural design configuration,3:1696 - 4:942,1,arjan
33:88,ifesdjeen,CASSANDRA-10786,ifesdjeen,,Comment,4:1026 - 4:1034,1,arjan
33:4,"After adding result metadata to md5, as the message metadata on the cl…",CASSANDRA-10786,"After adding result metadata to md5, as the message metadata on the client is never updated  and new client ID of the re-prepared message is not saved anywhere, client would fall into  the infnite re-prepare loop: * (1) try running the query  * fail with {{UNPREPARED}}  * re-prepare (although without saving the new ID)  * go to (1)",,"Architectural design configuration
Architectural solution benefits and drawbacks",4:1209 - 4:1541,2,arjan
33:5,I frst tried to transparently swap the request when getting {{UNPREPAR…,CASSANDRA-10786,"I frst tried to transparently swap the request when getting {{UNPREPARED}}, although  that would mean that the original ""outdated"" prepared query would re-prepare no matter  how many times it runs (even though results it returns would be correct).",,"Architectural design configuration
Architectural solution benefits and drawbacks",4:1544 - 4:1790,2,arjan
33:6,"On the other  hand, making changes in the {{BoundStatement}} itself (o…",CASSANDRA-10786,"On the other  hand, making changes in the {{BoundStatement}} itself (or in it’s {{PreparedStatement}})  might lead to undesired behaviour on the client-side or even be prone to races (when request  is sent assuming one id and metadata and came back after it got swapped).
",,"Architectural component behavior and structure
Architectural solution benefits and drawbacks",4:1792 - 4:2064,2,arjan
33:89,andrew.tolbert,CASSANDRA-10786,andrew.tolbert,,Comment,5:243 - 5:256,1,arjan
33:7,# this will be an issue in the case where a user has an older client i…,CASSANDRA-10786,"# this will be an issue in the case where a user has an older client install with a newer  C* install and they have this case where altering a table causes the prepared statement hash  to change, causing the repeating prepare as described.
",,Run-time quality issues,5:361 - 5:601,1,arjan
33:8,# this could also be a problem for cases of a cluster with mixed versi…,CASSANDRA-10786,"# this could also be a problem for cases of a cluster with mixed versions. If you have some  nodes at a newer version using this calculation, and others using the previous calculation you  will get diferent prepared ids depending on which node you hit. Depending on the driver  implementation this could be an issue.
",,Run-time quality issues,5:602 - 5:919,1,arjan
33:9,What do you think about the possibility of tying prepared statement id…,CASSANDRA-10786,"What do you think about the possibility of tying prepared statement id calculation to pro-  tocol versions? This way older clients that don’t know to handle such a case where the  prepared id can change will continue to work, and newer clients can be updated to support  these scenarios as part of also supporting a new protocol version (as [~ifesdjeen] is doing for  the java driver). This also would solve #2. The downside of tying this change to a protocol  version bump is that I imagine it defers this change quite a bit, and this fx would be really  nice to have as it will fx a problem a lot of users have run into.
",,Architectural design configuration,5:920 - 5:1543,1,arjan
33:10,This way older clients that don’t know to handle such a case where the…,CASSANDRA-10786,"This way older clients that don’t know to handle such a case where the  prepared id can change will continue to work, and newer clients can be updated to support  these scenarios as part of also supporting a new protocol version (as [~ifesdjeen] is doing for  the java driver). This also would solve #2. The downside of tying this change to a protocol  version bump is that I imagine it defers this change quite a bit, and this fx would be really  nice to have as it will fx a problem a lot of users have run into.",,Architectural solution benefits and drawbacks,5:1028 - 5:1541,1,arjan
33:90,ifesdjeen,CASSANDRA-10786,ifesdjeen,,Comment,5:1547 - 5:1555,1,arjan
33:11,[~adutra] has also proposed to make a toggle switch for this feature (…,CASSANDRA-10786,[~adutra] has also proposed to make a toggle switch for this feature (something  like {{invalidate_prepare_statements_on_schema_changes}}).,,Architectural component behavior and structure,5:1558 - 5:1696,1,arjan
33:12,Or wait for a protocol ver-  sion bump.,CASSANDRA-10786,Or wait for a protocol ver-  sion bump.,,Architectural design configuration,5:1698 - 5:1736,1,arjan
33:91,snazy,CASSANDRA-10786,snazy,,Comment,5:1742 - 5:1746,1,arjan
33:13,I’m +1 on this with a new protocol version (or option) for the mention…,CASSANDRA-10786," I’m +1 on this with a new protocol version (or option) for the mentioned reasons  plus it’s hard to explain to people. Happy if this goes in.
",,Architectural solution benefits and drawbacks,5:1748 - 5:1891,1,arjan
33:14,But I’m strongly (non-binding) -1 to change it in the current or previ…,CASSANDRA-10786,"But I’m strongly (non-binding) -1 to change it in the current or previous protocol versions.
",,Architectural solution benefits and drawbacks,5:1892 - 5:1985,1,arjan
33:92,thobbs,CASSANDRA-10786,thobbs,,Comment,5:1989 - 5:1994,1,arjan
33:15,I agree that it’s best to change this behavior as part of the v5 proto…,CASSANDRA-10786,"I agree that it’s best to change this behavior as part of the v5 protocol.
",,Architectural solution benefits and drawbacks,5:1997 - 5:2072,1,arjan
33:93,snazy,CASSANDRA-10786,snazy,,Comment,5:2436 - 5:2440,1,arjan
33:16,A v5 is fne IMO,CASSANDRA-10786,A v5 is fne IMO,,Architectural solution benefits and drawbacks,5:2443 - 5:2457,1,arjan
33:17,But I’d suggest to include the v4-hash plus a hash over the  reference…,CASSANDRA-10786,But I’d suggest to include the v4-hash plus a hash over the  references schema objects.,,Architectural design configuration,5:2460 - 5:2546,1,arjan
33:18,This would make rolling upgrades more robust.,CASSANDRA-10786,"This would make rolling upgrades more robust.
",,Architectural solution benefits and drawbacks,5:2548 - 5:2594,1,arjan
33:20,The thing is that a statement can potentially reference UDFs which req…,CASSANDRA-10786,"The thing is that a statement can potentially reference UDFs which requires UDTs, which  makes it difcult. OTOH the schema version would invalidate all pstsmts - even those that  are not afected.
",,Motivation of design issue,5:2595 - 5:2791,1,arjan
33:19,Probably it’s ok to just include the hash of the table instead of all…,CASSANDRA-10786,"Probably it’s ok to just include the hash of the table instead of all referenced objects. Not  sure on this.
",,"Architectural design configuration
Assumptions",5:2792 - 5:2900,2,arjan
33:94,ifesdjeen,CASSANDRA-10786,ifesdjeen,,Comment,5:2905 - 5:2913,1,arjan
33:21,"we actually already do store both the ""short"" md5 hash (one with only…",CASSANDRA-10786,"we actually already do store both the ""short"" md5 hash (one with only  the query string and keyspace) and ""long"" one (QS, KS and resultset metadata), since we  would like to avoid parsing query string on every prepare",,Existing system architecture description,5:2925 - 5:3141,1,arjan
33:22,"In case of hash, we’re mostly  interested to have a distinction for th…",CASSANDRA-10786,"In case of hash, we’re mostly  interested to have a distinction for the client.We have to walk through each instance of  statement that’s being invalidated anyways, so I’m not sure why having a hash of schema  objects should help (also, with the rolling updates). Statement may reference anything, but  in this case it will get invalidated and will fail on next re-prepair if/when UDF or UDT is  gone or changes.
",,Architectural solution benefits and drawbacks,5:3144 - 5:3557,1,arjan
33:95,adutra,CASSANDRA-10786,adutra,,Comment,6:4 - 6:9,1,arjan
33:23,It seems a bit artifcial to draw a relationship between the algorithm…,CASSANDRA-10786," It seems a bit artifcial to draw a relationship between the algorithm for computing  statement hashes and the protocol version.
Granted, it would prevent _existing_ drivers from deadlocking. But because the proto-  col specs are not afected directly, I fear that some driver implementors out there could add  support for protocol v5 and actually ""forget"" that with this version the algorithm changes,  and all of a sudden, all clients using such new drivers would deadlock just the same.
",,Architectural solution benefits and drawbacks,6:11 - 6:501,1,arjan
33:24,"That’s why the ""opt-in"" approach sounded better to me. It could be imp…",CASSANDRA-10786,"That’s why the ""opt-in"" approach sounded better to me. It could be implemented, as [~ifes-  djeen] stated, as a confg option; or alternatively, this could be negotiated between client  and server via the {{OPTIONS}}/{{SUPPORTED}} messages. [~ifesdjeen] correct me if  I’m wrong but as I understand your implementation, it is planned to keep both hashes (with  and without metadata) in memory, so this approach might be doable.
",,Architectural solution benefits and drawbacks,6:502 - 6:929,1,arjan
33:96,ifesdjeen,CASSANDRA-10786,ifesdjeen,,Comment,6:934 - 6:942,1,arjan
33:25,has a very good point about SHA changes and driver implementers. I’m…,CASSANDRA-10786," has a very good point about SHA changes and driver implementers. I’m  not sure if every driver would deadlock the same, it might depend on the implementation, al-  though the Python driver seems to have [same behaviour|https://github.com/ifesdjeen/cassandra-  dtest/tree/10786-trunk], just checked.
",,Architectural solution benefits and drawbacks,6:954 - 6:1254,1,arjan
33:26,I like the idea with {{OPTIONS}}/{{SUPPORTED}} over the rest so far.,CASSANDRA-10786,"I like the idea with {{OPTIONS}}/{{SUPPORTED}} over the rest so far.
",,Architectural solution benefits and drawbacks,6:1255 - 6:1324,1,arjan
33:97,snazy,CASSANDRA-10786,snazy,,Comment,6:1329 - 6:1333,1,arjan
33:27,Another possible way to solve the opt-in/long-hash problem would be to…,CASSANDRA-10786,"Another possible way to solve the opt-in/long-hash problem would be to just add another  identifer, which is the hash over the result set metadata. So, the current ID would stay as  it is and we add a _fngerprint_ to _Prepared_ response and _Execute_ request.
For native_protocol_v5.spec, section _4.2.5.4. Prepared_ would contain:  1 - <id> is [short bytes] representing the prepared query ID.
2 - <fingerprint> is [short bytes] representing the metadata hash.
3 - <metadata> is composed of:  And the body for _4.1.6 Execute_ would be {{<id><fngerprint><query_parameters>}}.
",,Architectural component behavior and structure,6:1441 - 6:2020,1,arjan
33:28,"# The coordinator could reply with a new error code (near to 0x2500, U…",CASSANDRA-10786,"# The coordinator could reply with a new error code (near to 0x2500, Unprepared) telling  the client that the result set metadata no longer matches and the statement needs to be  prepared again.
",,Architectural component behavior and structure,6:2131 - 6:2326,1,arjan
33:29,# We just send out the result set metadata with the _Rows_ response in…,CASSANDRA-10786,"# We just send out the result set metadata with the _Rows_ response in case the metadata  has changed / does not match the fngerprint.
",,Architectural component behavior and structure,6:2327 - 6:2462,1,arjan
33:30,The second option would also work around a race condition that could a…,CASSANDRA-10786,"The second option would also work around a race condition that could arise with a new  error code during schema changes. Means: some nodes may already use the new result set  metadata while others still use the old one. It would also save one roundtrip. It makes the  code on the client probably a bit more complex, but I think it’s worth to pay that price in  order to prevent this race condition (and _prepare storm_).
",,"Architectural solution benefits and drawbacks
Assumptions",6:2463 - 6:2884,2,arjan
33:98,ifesdjeen,CASSANDRA-10786,ifesdjeen,,Comment,6:2889 - 6:2897,1,arjan
33:31,"I mostly can not see how splitting the ""long hash"" to {{id}} and {{fng…",CASSANDRA-10786," I mostly can not see how splitting the ""long hash"" to {{id}} and {{fngerprint}}  improves anything. We still do use the ""short"" version internally, for reasons stated above.
5
""long"" hash is the only thing we communicate with client. It also bears no semantical  meaning, we may change it as we’re pleased, as long as we respect protocol. Also, client  would still have to come back with both {{id}} and {{fngerprint}} when executing the  prepared message. So I’m not sure how {{fngerprint}} is useful without the {{id}}.
",,Architectural solution benefits and drawbacks,6:2899 - 7:346,1,arjan
33:99,snazy,CASSANDRA-10786,snazy,,Comment,7:352 - 7:356,1,arjan
33:32,"Well, leaving the {{id}} (which is the {{MD5Digest}} for the pstmt) as…",CASSANDRA-10786,"Well, leaving the {{id}} (which is the {{MD5Digest}} for the pstmt) as is allows  backwards compatibility.
The purpose of a _fngerprint_ is to provide a hash over {{ResultSet.ResultMetadata}} -  something like a _prepared statement version_.
Imagine that a (reasonable) amount of time can elapse until all cluster nodes have pro-  cessed the schema change. Nodes can be down for whatever reason and get the schema  change late. Some nodes can be unreachable for other nodes but still be available for clients.
(Network partitions occur when you don’t need them.)  Additionally, a client probably talks to all nodes ""simultaneously"" and therefore gets difer-  ent results from nodes that have processed the schema change and those that did not have  processed it. Diferent results means: some nodes will say: ""i don’t know that pstmt ID -  please re-prepare"" while others respond as expected.
We should not make such situations worse (by causing a _prepare storm_) than it already  is (schema disagreement).
For example, say you have an application that runs 100,000 queries per second for a prepared  statement.
At time=0, an {{ALTER TABLE foo ADD bar text}} is run. The schema migration takes  for example 500ms (just a random number) until all nodes have ""switched"" their schema.
This means that 50,000 queries may hit a node that has the new schema and re-prepare but  hit another node during the next request that does not have the new schema.
Also, the information a driver gets via the _control connection_ is not ""just in time"" -  unlucky driver instances may get the schema change notifcation via the control connections  quite late.
",,Architectural solution benefits and drawbacks,7:359 - 7:2009,1,arjan
33:33,I’m not a fan of changing the way we compute the pstmt {{id}} as we’re…,CASSANDRA-10786,I’m not a fan of changing the way we compute the pstmt {{id}} as we’re pleased between  versions (either C* releases or protocol versions) for the same reasons.,,Architectural solution benefits and drawbacks,7:2010 - 7:2169,1,arjan
33:34,I agree that we should  probably not specify the algorithm to compute…,CASSANDRA-10786,I agree that we should  probably not specify the algorithm to compute such IDs into the native protocol specifcation,,Architectural solution benefits and drawbacks,7:2171 - 7:2286,1,arjan
33:35,but we should keep the algorithm to compute these IDs consistent.,CASSANDRA-10786,"but we should keep the algorithm to compute these IDs consistent.
",,Architectural component behavior and structure,7:2291 - 7:2357,1,arjan
33:100,thobbs,CASSANDRA-10786,thobbs,,Comment,7:2362 - 7:2367,1,arjan
33:36,I like the idea of using a separate hash/ID for the statement and the…,CASSANDRA-10786," I like the idea of using a separate hash/ID for the statement and the result set  metadata if we want to fx the ""prepare storm"" problem at the same time.
",,Architectural solution benefits and drawbacks,7:2369 - 7:2524,1,arjan
33:37,"Overall, it seems like it would work like this:  * In response to a PR…",CASSANDRA-10786,"Overall, it seems like it would work like this:  * In response to a PREPARE message, the server returns a statement ID and a result set  metadata ID.
* When performing an EXECUTE, the driver sends both IDs.
* If the prepared statement ID isn’t found, the server responds with an ""unprepared"" error,  and the driver needs to reprepare as usual.
* If the statement ID is found, but the metadata ID doesn’t match, the server executes the  query and responds with a special results message. This message contains the correct result  set metadata and its ID, the prepared statement ID, and a fag to indicate that it’s doing  this.
* When the driver receives this special response, it replaces its internal result set metadata  with the new one from the response.
",,Architectural design configuration,7:2525 - 7:3287,1,arjan
33:38,In the scenario Robert describes above (some nodes have seen a schema…,CASSANDRA-10786,"In the scenario Robert describes above (some nodes have seen a schema change, others  6
haven’t), this would avoid repreparation of statements. The driver might end up swap-  ping its internal result set metadata for the statement several times, but that’s relatively  inexpensive.
",,Architectural solution benefits and drawbacks,7:3288 - 8:194,1,arjan
33:101,omichallat,CASSANDRA-10786,omichallat,,Comment,8:200 - 8:209,1,arjan
33:39,"+1, it’s an elegant way to avoid an extra roundtrip when the schema ch…",CASSANDRA-10786,"+1, it’s an elegant way to avoid an extra roundtrip when the schema changed.
And since it does afect the format of protocol messages, there’s no risk of ""forgetting"" to  cover it when implementing protocol v5, like [~adutra] suggested above.
",,Architectural solution benefits and drawbacks,8:212 - 8:455,1,arjan
33:102,ifesdjeen,CASSANDRA-10786,ifesdjeen,,Comment,8:460 - 8:468,1,arjan
33:40,Looks like I have misunderstood the problem. I frst thought more about…,CASSANDRA-10786,"Looks like I have misunderstood the problem. I frst thought more about the  cluster upgrade. But this would certainly help with schema upgrade.
",,Architectural solution benefits and drawbacks,8:471 - 8:615,1,arjan
33:103,thobbs,CASSANDRA-10786,thobbs,,Comment,8:807 - 8:812,1,arjan
33:41,"That looks good to me so far,",CASSANDRA-10786,"That looks good to me so far,",,Architectural solution benefits and drawbacks,8:815 - 8:843,1,arjan
33:42,with one minor change: I think we do need the  (normal) prepared state…,CASSANDRA-10786,"with one minor change: I think we do need the  (normal) prepared statement ID in the new response as well to make it easy for drivers to  update their local metadata.
",,"Architectural component behavior and structure
Architectural solution benefits and drawbacks
Assumptions",8:845 - 8:1012,3,arjan
33:104,ifesdjeen,CASSANDRA-10786,ifesdjeen,,Comment,8:1017 - 8:1025,1,arjan
33:45,"It looks cleaner and should be closer  to what you described. Also, re…",CASSANDRA-10786,"It looks cleaner and should be closer  to what you described. Also, requires less changes both client and server side. ",,Architectural solution benefits and drawbacks,8:1162 - 8:1280,1,arjan
33:43,"In short, I reuse {{Rows}} and add a fag to indicate  that we ""force""…",CASSANDRA-10786,"In short, I reuse {{Rows}} and add a fag to indicate  that we ""force"" the metadata.",,Architectural component behavior and structure,8:1432 - 8:1514,1,arjan
33:44,At least in Java driver that makes the implementation signif-  icantly…,CASSANDRA-10786,"At least in Java driver that makes the implementation signif-  icantly simpler, as we can check fag, check presence of two felds and update metadata or  look it up otherwise, all in one block without having to change too much.",,Architectural solution benefits and drawbacks,8:1516 - 8:1741,1,arjan
33:105,ifesdjeen,CASSANDRA-10786,ifesdjeen,,Comment,8:1920 - 8:1928,1,arjan
33:46,This feature might actually be much more useful than it initially appe…,CASSANDRA-10786,"This feature might actually be much more useful than it initially appeared to  me, although it only occurred to me during the implementation. For example, when the  table gets altered and the statements get re-prepared under the hood, all unafected queries  will not need to go through the long re-prepare path, they’ll be able to submit their queries,  and if metadata doesn’t indicate any change, it’ll just get the results.
",,"Architectural solution benefits and drawbacks
Assumptions",8:1931 - 8:2358,2,arjan
33:47,One more thing: in the current implementation I have omitted the prepa…,CASSANDRA-10786,"One more thing: in the current implementation I have omitted the prepared statement id in  the {{Rows}} response. I’ve checked both Java and Python driver, and in both cases these  IDs are directly available there, since the metadata might get skipped and driver needs a  way to query it, so it’s more or less always around. I think we can safely skip it there.
",,"Architectural component behavior and structure
Assumptions",8:3067 - 8:3429,2,arjan
33:106,thobbs,CASSANDRA-10786,thobbs,,Comment,8:3434 - 8:3439,1,arjan
33:48,"That’s a good point. Unfortunately, server-side we invalidate all rela…",CASSANDRA-10786,"That’s a good point. Unfortunately, server-side we invalidate all related prepared statements  7
whenever a schema change occurs, so there will still be some amount of full repreparation  until the v5 protocol is the minimum supported protocol version and we can change this  server-side behavior. Of course, the primary motivation for this ticket was to handle clients  that use the prepared statement after it’s been re-prepared (if the statement ID hasn’t  changed), and in this case that should work out nicely. To summarize, the frst client to use  a prepared statement after a schema change will still have to reprepare, but later clients will  not.
",,Architectural solution benefits and drawbacks,8:3732 - 9:560,1,arjan
33:107,ifesdjeen,CASSANDRA-10786,ifesdjeen,,Comment,9:1791 - 9:1799,1,arjan
33:49,I’ve made a prototype that helps to avoid re-prepares on schema alteri…,CASSANDRA-10786,"I’ve made a prototype that helps to avoid re-prepares on schema altering by trying re-  preparing statements server side instead of invalidating them, which works quite well",,Architectural solution benefits and drawbacks,9:2082 - 9:2254,1,arjan
33:50,"Hav-  ing that said, we can certainly just invalidate and wait until t…",CASSANDRA-10786,"Hav-  ing that said, we can certainly just invalidate and wait until the frst client hits.",,Architectural design configuration,9:2257 - 9:2346,1,arjan
33:51,But we’d  still beneft from that on all other clients.,CASSANDRA-10786,"But we’d  still beneft from that on all other clients.
",,Architectural solution benefits and drawbacks,9:2348 - 9:2402,1,arjan
33:108,thobbs,CASSANDRA-10786,thobbs,,Comment,9:2408 - 9:2413,1,arjan
33:52,"I could be missing something, but it seems like auto server-side prepa…",CASSANDRA-10786," I could be missing something, but it seems like auto server-side preparation might  cause problems for v3/v4 clients",,Architectural solution benefits and drawbacks,9:2415 - 9:2531,1,arjan
33:53,Our current invalidation isn’t perfect (hence the reason  for this tic…,CASSANDRA-10786,"Our current invalidation isn’t perfect (hence the reason  for this ticket), but it does help in some cases.",,Existing system architecture description,9:2534 - 9:2640,1,arjan
33:54,"Perhaps if we could try to automatically  re-prepare server-side, but…",CASSANDRA-10786,"Perhaps if we could try to automatically  re-prepare server-side, but only if the result set metadata doesn’t change?",,"Architectural design configuration
Assumptions",9:2642 - 9:2758,2,arjan
33:55,We would also  need to make sure we handle errors during preparation g…,CASSANDRA-10786,"We would also  need to make sure we handle errors during preparation gracefully, which might happen if a  table, column, or index is dropped.
",,Architectural design configuration,9:2760 - 9:2902,1,arjan
33:109,ifesdjeen,CASSANDRA-10786,ifesdjeen,,Comment,9:2907 - 9:2915,1,arjan
33:56,What I’ve done was simply re-preparing and having try/catch around,CASSANDRA-10786,What I’ve done was simply re-preparing and having try/catch around,,Architectural design configuration,9:2918 - 9:2983,1,arjan
33:57,"But I  think you’re right, it might be too error-prone to do it that w…",CASSANDRA-10786,"But I  think you’re right, it might be too error-prone to do it that way. ",,Architectural solution benefits and drawbacks,9:2986 - 9:3059,1,arjan
33:58,It might be better to  let users re-prepare the very frst statement an…,CASSANDRA-10786,"It might be better to  let users re-prepare the very frst statement and let the rest be handled through the new  {{Rows}}.
",,"Architectural design configuration
Architectural solution benefits and drawbacks
Assumptions",9:3060 - 9:3183,3,arjan
33:110,thobbs,CASSANDRA-10786,thobbs,,Comment,10:515 - 10:520,1,arjan
33:59,"The Cassandra patch looks good to me, nicely done.",CASSANDRA-10786,"The Cassandra patch looks good to me, nicely done. ",,Architectural solution benefits and drawbacks,10:523 - 10:573,1,arjan
33:111,thobbs,CASSANDRA-10786,thobbs,,Comment,10:2386 - 10:2391,1,arjan
33:60,We probably want to wait for some of those other features before fnali…,CASSANDRA-10786,"We probably want to wait for some of those other features before fnalizing the v5 pro-  tocol. However, we can release with some of the v5 features implemented without actually  allowing v5 connections to be made. For testing, we can use a special fag to allow v5 con-  nections. With that in mind, I don’t necessarily think we should make v5 whatever ends up  in 3.8 -- we should get in the features we really care about and fnalize v5 in whatever C*  release that happens to be.
",,Architectural design configuration,11:162 - 11:642,1,arjan
33:112,jjordan,CASSANDRA-10786,jjordan,,Comment,11:793 - 11:799,1,arjan
33:61,"If we are going to put this in, I think it makes more sense to call th…",CASSANDRA-10786,"If we are going to put this in, I think it makes more sense to call this v5, and what ever the  next changes we make are v6. Drivers can still talk v4 and they could skip v5 to v6 if they  wanted to wait for more feature before implementing.
",,"Architectural design configuration
Architectural solution benefits and drawbacks",11:900 - 11:1142,2,arjan
33:113,thobbs,CASSANDRA-10786,thobbs,,Comment,11:1147 - 11:1152,1,arjan
33:62,"To clarify, I’m saying that we can have v5 in progress across multiple…",CASSANDRA-10786,"To clarify, I’m saying that we can have v5 in progress across multiple releases, and those v5  features simply won’t be accessible to users/drivers until it’s complete.
",,Architectural design configuration,11:1232 - 11:1401,1,arjan
33:114,jjordan,CASSANDRA-10786,jjordan,,Comment,11:1560 - 11:1566,1,arjan
33:63,In a tick tick world I don’t see the reason for putting stuf in that p…,CASSANDRA-10786,"In a tick tick world I don’t see the reason for putting stuf in that people can’t  use.
",,Architectural solution benefits and drawbacks,11:1569 - 11:1657,1,arjan
33:115,slebresne,CASSANDRA-10786,slebresne,,Comment,11:1999 - 11:2007,1,arjan
33:64,We do need to fnd some protocol for releasing new version of the nativ…,CASSANDRA-10786,We do need to fnd some protocol for releasing new version of the native protocol com-  patible with tick-tock.,,Motivation of design issue,11:2124 - 11:2233,1,arjan
33:65,"either we include features one by one but only ""fnalize"" the new versi…",CASSANDRA-10786,"either we include features one by one but only ""fnalize"" the new version when we’re ready,  making it ofcially available only then.
",,Architectural design configuration,11:2285 - 11:2417,1,arjan
33:66,or we just say every new feature released is a new protocol version an…,CASSANDRA-10786," or we just say every new feature released is a new protocol version and we bump it every  time (strictly speaking, we’d only bump once per-cassandra-release, but the window is small  enough that in practice it will be closeish to one feature per protocol version).
",,Architectural design configuration,11:2419 - 11:2685,1,arjan
33:67,"Personally, I happen to prefer some version of 1, because I think bump…",CASSANDRA-10786,"Personally, I happen to prefer some version of 1, because I think bumping the version too  often will just be more trouble than benefts as:  * a native protocol version change is not fully transparent for users. Typically, a driver  instance will connect to all nodes with the same version (for good reason: as drivers some-  what isolate the querying API from where it’ll go exactly (a good thing), and since diferent  10
protocol version may support diferent things, having all nodes on the same version is way  simpler/saner). And some protocol change have impact on what users can do. I fear that  those make it more painful for users if the version bumps too often. And granted, users can  also willingly skip versions if they so wish, but I still feel having versions less often and with  more changes every time is saner overall.
* it’ll make it more annoying to track when something was allowed, both for users and us,  devs. Currently, there is also a small amount of cruft with duplicating the spec everytime.
",,"Architectural solution benefits and drawbacks
Assumptions",11:2686 - 12:599,2,arjan
33:68,The other aspect is that I actually feel that we should be more willin…,CASSANDRA-10786,"The other aspect is that I actually feel that we should be more willing to call things ""beta""  initially. No matter how smart we are and how much testing we do, there is nothing better  than having users actually trying things to realize where it’s not great. It’s particularly true  with the native protocol where it’s hard to be sure something is right unless you have at  least 2-3 drivers implementing it, and that creates a natural lag that doesn’t fts well with  tick-tock. So I like the idea of building a new protocol version incrementally, calling it beta  all the while, and only marking it fnal after it has (hopefully) seen some real world testing.
",,"Architectural design configuration
Architectural solution benefits and drawbacks",12:600 - 12:1261,2,arjan
33:69,"Technically, I’d handle it this way:  * we’d initially call a new prot…",CASSANDRA-10786,"Technically, I’d handle it this way:  * we’d initially call a new protocol version beta and be clear that: 1) as long as it’s beta  things may change (even though we’ll try hard not too for no reason) and 2) things might  get happen.
* we’ll require a new fag (in the frame header, we have some room) for the client to indicate  it knows the version is beta. If the fag isn’t set, then the version is simply rejected if beta.
* we’ll obviously strongly advise drivers to not pick beta version by default, but to allow  user to test them assuming proper warning.
* we’ll promote a version GA when it’s ready: basically when we feel the changelog is big  enough to warrant ""releasing"" it *and* we feel drivers have had enough time to test it.
",,Architectural design configuration,12:1262 - 12:2006,1,arjan
33:116,ifesdjeen,CASSANDRA-10786,ifesdjeen,,Comment,12:2011 - 12:2019,1,arjan
33:70,I like the idea with beta. And generally agree that (1) way sounds lik…,CASSANDRA-10786,"I like the idea with beta. And generally agree that (1) way sounds like a better  way.
",,Architectural solution benefits and drawbacks,12:2022 - 12:2109,1,arjan
33:117,omichallat,CASSANDRA-10786,omichallat,,Comment,12:2114 - 12:2123,1,arjan
33:71,"From a driver maintainer’s point of view, I also agree that (1) sounds…",CASSANDRA-10786,"From a driver maintainer’s point of view, I also agree that (1) sounds better.
",,Architectural solution benefits and drawbacks,12:2126 - 12:2204,1,arjan
33:72,"I was wondering if we needed to version beta versions themselves, but…",CASSANDRA-10786,"I was wondering if we needed to version beta versions themselves, but I don’t think that’s  necessary: ""v5 beta"" will mean diferent things at diferent times, and there might be errors  when an older driver version (supporting ""v5 beta with new feature A"") connects to a newer  C* version (supporting ""v5 beta with new features A and B""). But with the provision that  ""bad things can happen when you’re in beta"" that’s acceptable, so we don’t need to make  things any more complicated.
",,Architectural solution benefits and drawbacks,12:2206 - 12:2691,1,arjan
33:73,"I was also wondering about protocol negotiation, but there shouldn’t b…",CASSANDRA-10786,"I was also wondering about protocol negotiation, but there shouldn’t be any issue provided  that:  * if the client doesn’t force a particular version, the driver should try with the latest *stable*  version.
* if the server doesn’t support the version requested by the driver, it should reply with the  latest *stable* version.
",,"Architectural solution benefits and drawbacks
Assumptions",12:2692 - 12:3021,2,arjan
33:118,thobbs,CASSANDRA-10786,thobbs,,Comment,12:3026 - 12:3031,1,arjan
33:74,"I also agree that 1) is the better option, and I think the ""beta"" fag…",CASSANDRA-10786," I also agree that 1) is the better option, and I think the ""beta"" fag is a good way  to expose in-progress protocol versions for driver testing and development.
",,Architectural solution benefits and drawbacks,12:3033 - 12:3195,1,arjan
33:119,snazy,CASSANDRA-10786,snazy,,Comment,13:1451 - 13:1455,1,arjan
33:75,"Looks mostly good to me, but the patch breaks LWTs and prepared {{LIST…",CASSANDRA-10786," Looks mostly good to me, but the patch breaks LWTs and prepared {{LIST}}  statements.
",,Architectural solution benefits and drawbacks,13:1457 - 13:1544,1,arjan
33:120,ifesdjeen,CASSANDRA-10786,ifesdjeen,,Comment,13:2193 - 13:2201,1,arjan
33:76,. I have left the  refactoring out of this issue and will submit it la…,CASSANDRA-10786,". I have left the  refactoring out of this issue and will submit it later in a separate patch as a proposal.
I did address the issue with preparing {{UPDATE}} statements with LWTs, {{BATCH}}  and {{LIST}} querues.",,Architectural solution benefits and drawbacks,13:2710 - 13:2923,1,arjan
33:121,snazy,CASSANDRA-10786,snazy,,Comment,14:5 - 14:9,1,arjan
33:77,I’d rather like not to have a {{-SNAPSHOT}} version of the driver in t…,CASSANDRA-10786,"I’d rather like not to have a {{-SNAPSHOT}} version of the driver in the tree, but can  live with it until release 4.0.",,Architectural solution benefits and drawbacks,14:39 - 14:157,1,arjan
33:78,Otherwise: +1 on the current branch including the latest changes and t…,CASSANDRA-10786,"Otherwise: +1 on the current branch including the latest changes and the dtest code, as-  suming CI (utest + dtest) passes.
",,Architectural solution benefits and drawbacks,14:305 - 14:429,1,arjan
33:122,ifesdjeen,CASSANDRA-10786,ifesdjeen,,Comment,14:434 - 14:442,1,arjan
33:79,I completely agree on the fact we should not have {{SNAPSHOT}} in tree…,CASSANDRA-10786,"I completely agree on the fact we should not have {{SNAPSHOT}} in tree, but it’s kind of  chicken-and-egg problem since the driver relies on Cassandra for tests and vice versa. I’ll  talk to the {{java-driver}} maintainers to make sure we fnd a proper solution, the last time  we talked we agreed that it makes sense to have more or less fnal version of the Cassandra  patch frstcc [~adutra] [~omichallat] (could you comment, what’d be the best way to pro-  ceed? the current patch is based of 3.4 driver iirc).
",,Architectural solution benefits and drawbacks,14:478 - 14:989,1,arjan
33:80,We might also want to wait until {{python}} driver implements this fea…,CASSANDRA-10786,We might also want to wait until {{python}} driver implements this feature,,Architectural design configuration,14:991 - 14:1064,1,arjan
33:81,since other-  wise {{dtests}} that rely on {{v5}} can’t passcc [~andre…,CASSANDRA-10786,"since other-  wise {{dtests}} that rely on {{v5}} can’t passcc [~andrew.tolbert] (could you comment as  well, is it somewhere on the radar for you? Might make sense to make sure python driver  has it before we can merge)",,Architectural solution benefits and drawbacks,14:1066 - 14:1285,1,arjan
33:123,omichallat,CASSANDRA-10786,omichallat,,Comment,14:1292 - 14:1301,1,arjan
33:82,"I like [~snazy]’s suggestion, we can release a beta version of the dri…",CASSANDRA-10786," I like [~snazy]’s suggestion, we can release a beta version of the driver close to  the 4.0 deadline.
",,Architectural solution benefits and drawbacks,14:1303 - 14:1405,1,arjan
33:124,jjirsa,CASSANDRA-10786,jjirsa,,Comment,14:1411 - 14:1416,1,arjan
33:83,We shouldn’t be committing anything into the database that relies on a…,CASSANDRA-10786,"We shouldn’t be committing anything into the database that relies on a {{-SNAPSHOT}}  of a third party library.
",,Architectural solution benefits and drawbacks,14:1419 - 14:1531,1,arjan
33:84,-I’m hard (binding)- -1- -on any patch that does so. It’s one thing to…,CASSANDRA-10786,"-I’m hard (binding)- -1- -on any patch that does so. It’s one thing to rely on third party  drivers, it’s quite a diferent thing to rely on a SNAPSHOT build.-",,Architectural solution benefits and drawbacks,14:1532 - 14:1689,1,arjan
33:125,jjirsa,CASSANDRA-10786,jjirsa,,Comment,14:2131 - 14:2136,1,arjan
33:85,"Yep, I already struck out my hard objection when [~iamaleksey] noted t…",CASSANDRA-10786," Yep, I already struck out my hard objection when [~iamaleksey] noted that there’s  precedent for it.",,Architectural solution benefits and drawbacks,14:2138 - 14:2238,1,arjan
33:86,"Let the snapshot go in, but we should make sure we get up to a hard re…",CASSANDRA-10786,"Let the snapshot go in, but we should make sure we get up to a hard release  version before we cut 4.0 proper.
",,Architectural design configuration,14:2240 - 14:2351,1,arjan
33:126,snazy,CASSANDRA-10786,snazy,,Comment,15:192 - 15:196,1,arjan
33:87,I’m ok with the approach to commit this patch as it is (and resolve th…,CASSANDRA-10786," I’m ok with the approach to commit this patch as it is (and resolve this ticket) and  create a follow-up blocker for 4.0 to pull in a release version of the driver.
",,Architectural solution benefits and drawbacks,15:198 - 15:364,1,arjan
34:1,Cassandra failed to run on Linux-aarch64,CASSANDRA-13072,Cassandra failed to run on Linux-aarch64,,Run-time quality issues,3:53 - 3:92,1,arjan
34:2,Steps to reproduce:  1. Download cassandra latest source  2. Build it…,CASSANDRA-13072,"Steps to reproduce:  1. Download cassandra latest source  2. Build it with ""ant""  3. Run with ""./bin/cassandra"". Daemon is crashed with following error message:  {quote}  INFO 05:30:21 Initializing system.schema_functions  INFO 05:30:21 Initializing system.schema_aggregates  ERROR 05:30:22 Exception in thread Thread[MemtableFlushWriter:1,5,main]  java.lang.NoClassDefFoundError: Could not initialize class com.sun.jna.Native  at org.apache.cassandra.utils.memory.MemoryUtil.allocate(MemoryUtil.java:97) ~[main/:na]  at org.apache.cassandra.io.util.Memory.<init>(Memory.java:74) ~[main/:na]  at org.apache.cassandra.io.util.SafeMemory.<init>(SafeMemory.java:32) ~[main/:na]  at org.apache.cassandra.io.compress.CompressionMetadata$Writer.<init>(CompressionMetadata.java:316)  ~[main/:na]  at org.apache.cassandra.io.compress.CompressionMetadata$Writer.open(CompressionMetadata.java:330)  ~[main/:na]  at org.apache.cassandra.io.compress.CompressedSequentialWriter.<init>(CompressedSequentialWriter.java:76)  ~[main/:na]  at org.apache.cassandra.io.util.SequentialWriter.open(SequentialWriter.java:163) ~[main/:na]  at org.apache.cassandra.io.sstable.format.big.BigTableWriter.<init>(BigTableWriter.java:73) ~[main/:na]  at org.apache.cassandra.io.sstable.format.big.BigFormat$WriterFactory.open(BigFormat.java:93) ~[main/:na]  at org.apache.cassandra.io.sstable.format.SSTableWriter.create(SSTableWriter.java:96) ~[main/:na]  at org.apache.cassandra.io.sstable.SimpleSSTableMultiWriter.create(SimpleSSTableMultiWriter.java:114)  ~[main/:na]  at org.apache.cassandra.db.compaction.AbstractCompactionStrategy.createSSTableMultiWriter(AbstractCompactionStra  ~[main/:na]  at org.apache.cassandra.db.compaction.CompactionStrategyManager.createSSTableMultiWriter(CompactionStrategyMa  ~[main/:na]  at org.apache.cassandra.db.ColumnFamilyStore.createSSTableMultiWriter(ColumnFamilyStore.java:480)  ~[main/:na]  at org.apache.cassandra.db.Memtable.createFlushWriter(Memtable.java:439) ~[main/:na]  at org.apache.cassandra.db.Memtable.writeSortedContents(Memtable.java:371) ~[main/:na]  2
at org.apache.cassandra.db.Memtable.fush(Memtable.java:332) ~[main/:na]  at org.apache.cassandra.db.ColumnFamilyStore$Flush.run(ColumnFamilyStore.java:1054) ~[main/:na]  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) ~[na:1.8.0_111]  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) ~[na:1.8.0_111]  at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_111]  {quote}",,User requirement,3:112 - 4:435,1,arjan
34:3,This issue is caused by bundled jna-4.0.0.jar which doesn’t come with…,CASSANDRA-13072,This issue is caused by bundled jna-4.0.0.jar which doesn’t come with aarch64 native support.,,Motivation of design issue,4:448 - 4:540,1,arjan
34:4,Re-  place lib/jna-4.0.0.jar with jna-4.2.0.jar from http://central.ma…,CASSANDRA-13072,"Re-  place lib/jna-4.0.0.jar with jna-4.2.0.jar from http://central.maven.org/maven2/net/java/dev/jna/jna/4.2.0/  can fx this problem.
",,Technology solution,4:542 - 4:677,1,arjan
34:5,Attached is the binary compatibility report of jna.jar between 4.0 and…,CASSANDRA-13072,Attached is the binary compatibility report of jna.jar between 4.0 and 4.2. The result is good  (97.4%). ,,Architectural solution benefits and drawbacks,4:678 - 4:782,1,arjan
34:38,gentlemon,CASSANDRA-13072,gentlemon,,Comment,4:1020 - 4:1028,1,arjan
34:6,problem still persists in 3.10,CASSANDRA-13072,problem still persists in 3.10,,Run-time quality issues,4:1031 - 4:1060,1,arjan
34:7,can also be resolved with jna 4.4.0 http://central.maven.org/maven2/n,CASSANDRA-13072,can also be resolved with jna 4.4.0 http://central.maven.org/maven2/n,,Technology solution,4:1066 - 4:1134,1,arjan
34:39,blerer,CASSANDRA-13072,blerer,,Comment,4:1140 - 4:1145,1,arjan
34:8,I pushed a patch for [2.2|https://github.com/apache/cassandra/compare/…,CASSANDRA-13072," I pushed a patch for [2.2|https://github.com/apache/cassandra/compare/trunk...blerer:13072-  2.2], [3.0|https://github.com/apache/cassandra/compare/trunk...blerer:13072-3.0] and [3.11|https://github.com/ap  3.11].
The 3 patches are the same. They just upgrade the JNA version to {{4.4.0}}.
",,Technology solution,4:1147 - 4:1439,1,arjan
34:9,I ran it on our internal CI and the results looks good.,CASSANDRA-13072,"I ran it on our internal CI and the results looks good.
",,Architectural solution benefits and drawbacks,4:1440 - 4:1496,1,arjan
34:40,jasobrown,CASSANDRA-13072,jasobrown,,Comment,4:1532 - 4:1540,1,arjan
34:10,"fwiw, we upgraded to jna 4.3 in CASSANDRA-13300.",CASSANDRA-13072,"fwiw, we upgraded to jna 4.3 in CASSANDRA-13300.
",,Existing system architecture description,4:1543 - 4:1592,1,arjan
34:11,"More importantly, I thought we didn’t upgrade the dependencies until m…",CASSANDRA-13072,"More importantly, I thought we didn’t upgrade the dependencies until major revs, which in  this case would be 3.11 and 4.0 (trunk). ",,Architectural solution benefits and drawbacks,4:1593 - 4:1724,1,arjan
34:41,blerer,CASSANDRA-13072,blerer,,Comment,4:1793 - 4:1798,1,arjan
34:12,In case of problem like this one where some people cannot even start C…,CASSANDRA-13072,"In case of problem like this one where some people cannot even start C*, I think it re-  ally makes sense to allow it.
",,"Architectural solution benefits and drawbacks
Assumptions",4:1938 - 4:2057,2,arjan
34:42,aleksey,CASSANDRA-13072,aleksey,,Comment,4:2061 - 4:2067,1,arjan
34:13,"It’s more of a guideline than a hard rule; I agree with Benjamin here,…",CASSANDRA-13072,"It’s more of a guideline than a hard rule; I agree with Benjamin here, it gotta be done  in this case.
",,Architectural solution benefits and drawbacks,4:2123 - 4:2226,1,arjan
34:43,aleksey,CASSANDRA-13072,aleksey,,Comment,4:2230 - 4:2236,1,arjan
34:14,"Also, +1.",CASSANDRA-13072,"Also, +1.
",,Architectural solution benefits and drawbacks,4:2239 - 4:2249,1,arjan
34:44,jjirsa,CASSANDRA-13072,jjirsa,,Comment,5:4 - 5:9,1,arjan
34:15,"FWIW, I don’t disagree we need to do this",CASSANDRA-13072,"FWIW, I don’t disagree we need to do this",,Architectural solution benefits and drawbacks,5:12 - 5:52,1,arjan
34:16,"but for ppc64le, we spent a lot of time  saying we shouldn’t make chan…",CASSANDRA-13072,"but for ppc64le, we spent a lot of time  saying we shouldn’t make changes for other platforms that didnt have public tests; we should  try to get public tests for platforms, especially if we’re going to bump JNA in a branch that  is almost 2 years old (2.2).
",,Architectural design configuration,5:55 - 5:314,1,arjan
34:45,blerer,CASSANDRA-13072,blerer,,Comment,5:318 - 5:323,1,arjan
34:17,I think we have to be a bit pragmatic. If upgrading JNA do not cause a…,CASSANDRA-13072," I think we have to be a bit pragmatic. If upgrading JNA do not cause any problem  in our test environment and that it allows some people to start C* on Linux-aarch64, without  having to change the jar manually themselves, I do not see a good reason of not doing it.
",,"Architectural solution benefits and drawbacks
Assumptions",5:325 - 5:592,2,arjan
34:46,jjirsa,CASSANDRA-13072,jjirsa,,Comment,5:799 - 5:804,1,arjan
34:18,The problem is that to enable a new platform you put at risk hundreds…,CASSANDRA-13072,"The problem is that to enable a new platform you put at risk hundreds or thousands  of existing users that may be running 2.2, if there’s some unreported bug or hidden incom-  patibility in jna. Even if there’s no bug, you’re causing users to re-validate their deployment  which is nontrivial (our testing isn’t good enough for users with thousands of nodes to be  sure that they won’t have issues we didn’t catch, this is a real step for most production  deployments).
",,Risks,5:807 - 5:1277,1,arjan
34:47,blerer,CASSANDRA-13072,blerer,,Comment,5:1412 - 5:1417,1,arjan
34:19,If your problem is about 2.2. I will not argue about that and revert m…,CASSANDRA-13072,"If your problem is about 2.2. I will not argue about that and revert my commit in that  branch.
",,Architectural solution benefits and drawbacks,5:1626 - 5:1722,1,arjan
34:48,jjirsa,CASSANDRA-13072,jjirsa,,Comment,5:1955 - 5:1960,1,arjan
34:20,2.2 and 3.0 are bug-fx-only. The only way this is a bug fx is if aarch…,CASSANDRA-13072,"2.2 and 3.0 are bug-fx-only. The only way this is a bug fx is if aarch64 is a supported  platform.
It’s not a supported platform because there are no tests for it.
Therefore, I don’t see how this qualifes for either 2.2 or 3.0.
",,Architectural solution benefits and drawbacks,5:2031 - 5:2261,1,arjan
34:21,"This belongs in 3.11 and trunk, unless someone can tell me why I’m wro…",CASSANDRA-13072,"This belongs in 3.11 and trunk, unless someone can tell me why I’m wrong.
",,Architectural design configuration,5:2262 - 5:2336,1,arjan
34:49,aleksey,CASSANDRA-13072,aleksey,,Comment,5:2341 - 5:2347,1,arjan
34:22,"I assumed from wording of the ticket that this was a regression, in wh…",CASSANDRA-13072," I assumed from wording of the ticket that this was a regression, in which case it  potentially warranted a JNA upgrade",,"Architectural design configuration
Assumptions",5:2349 - 5:2467,2,arjan
34:23,"Otherwise we should probably go for trunk only, as  3.11 is bugfx only…",CASSANDRA-13072,"Otherwise we should probably go for trunk only, as  3.11 is bugfx only at this point.
",,Architectural design configuration,5:2470 - 5:2556,1,arjan
34:50,sunsuk7tp,CASSANDRA-13072,sunsuk7tp,,Comment,6:292 - 6:300,1,arjan
34:24,"Since jna upgrade to 4.4.0, it causes working the latest Cassandra 3.1…",CASSANDRA-13072," Since jna upgrade to 4.4.0, it causes working the latest Cassandra 3.11 on  stable RHEL6 OS difcult because {{jna-4.4.0}} depends on glibc >= 2.14 but glibc version  is 2.12 there.In fact, we tried to upgrade from 3.9 to 3.11.0 on CentOS6.8 machine, it failed  on restarting as follows:  1 ERROR [main] 2017-07-05 10:13:54,219 NativeLibraryLinux.java:62 - Failed to link  the C library against JNA. Native methods will be unavailable.
2 java.lang.UnsatisfiedLinkError: /tmp/jna-118167/jna4905164479741635539.tmp: /lib64/  libc.so.6: version ‘GLIBC_2.14’ not found (required by /tmp/jna-118167/  jna4905164479741635539.tmp)",,Motivation of design issue,6:302 - 6:925,1,arjan
34:51,blerer,CASSANDRA-13072,blerer,,Comment,6:1061 - 6:1066,1,arjan
34:25,either go back to the original version: {{4.0.0}},CASSANDRA-13072,either go back to the original version: {{4.0.0}},,Technology solution,6:1172 - 6:1220,1,arjan
34:26,try to go to  {{4.2.0}}/{{4.3.0}} in the hope that it works for everyb…,CASSANDRA-13072," try to go to  {{4.2.0}}/{{4.3.0}} in the hope that it works for everybody.
",,Technology solution,6:1224 - 6:1300,1,arjan
34:52,sunsuk7tp,CASSANDRA-13072,sunsuk7tp,,Comment,6:1402 - 6:1410,1,arjan
34:27,I tried it worked well with {{jna-4.2.2}} even in CentOS6 + glibc 2.12,CASSANDRA-13072, I tried it worked well with {{jna-4.2.2}} even in CentOS6 + glibc 2.12,,Architectural solution benefits and drawbacks,6:1422 - 6:1492,1,arjan
34:28,but it didn’t with {{jna-4.3.0}}.,CASSANDRA-13072,"but it didn’t with {{jna-4.3.0}}.
",,Architectural solution benefits and drawbacks,6:1495 - 6:1529,1,arjan
34:53,blerer,CASSANDRA-13072,blerer,,Comment,6:1534 - 6:1539,1,arjan
34:29,I had a look at CASSANDRA-13300 which added support for {{jna-4.3.0}}…,CASSANDRA-13072," I had a look at CASSANDRA-13300 which added support for {{jna-4.3.0}} in trunk  and it seems, according to [~yukim] comment [here|https://issues.apache.org/jira/browse/CASSANDRA-  13300?focusedCommentId=15896870&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-  tabpanel#comment-15896870], that {{jna-4.2.2}} will work also fne with {{ppc64le}} ma-  chines.
",,Architectural solution benefits and drawbacks,6:1541 - 6:1913,1,arjan
34:30,I dig a bit and found out that {{jna-4.0.0}} has been bundled with C*…,CASSANDRA-13072,"I dig a bit and found out that {{jna-4.0.0}} has been bundled with C* since {{2.1 beta}}. So,  I should not have upgraded {{jna}} in {{3.0}} (I should have follow your advise [~jjirsa] :-( ).
",,Architectural solution benefits and drawbacks,6:1914 - 6:2106,1,arjan
34:32,"If I rollback the jar to {{4.0.0}},",CASSANDRA-13072,"If I rollback the jar to {{4.0.0}},",,Technology solution,6:2148 - 6:2182,1,arjan
34:31,I will intro-  duce a regression for {{Linux-aarch64}},CASSANDRA-13072,I will intro-  duce a regression for {{Linux-aarch64}},,Architectural solution benefits and drawbacks,6:2184 - 6:2237,1,arjan
34:33,"Due to that, it seems that my only safe option  would be to change the…",CASSANDRA-13072,"Due to that, it seems that my only safe option  would be to change the JNA version to {{4.2.2}} as it seems to work for everybody.
",,"Architectural solution benefits and drawbacks
Assumptions",6:2240 - 6:2371,2,arjan
34:34,change the JNA version to {{4.2.2}},CASSANDRA-13072,change the JNA version to {{4.2.2}} ,,Technology solution,6:2300 - 6:2335,1,arjan
34:54,jjirsa,CASSANDRA-13072,jjirsa,,Comment,6:2426 - 6:2431,1,arjan
34:35,Elasticsearch in the linked ticket just build their own JNA jar that l…,CASSANDRA-13072,"Elasticsearch in the linked ticket just build their own JNA jar that linked against an  older version of glibc. [~mshuler] any desire to set that up for an {{org.apache.cassandra.jna}}  lib so that we can decouple that depedency?
",,Other system architectural solutions,6:2434 - 6:2664,1,arjan
34:36,"Short of that (or until that’s setup), falling back to {{4.2.2}} seems…",CASSANDRA-13072,"Short of that (or until that’s setup), falling back to {{4.2.2}} seems like an ok option (not  a great option, but an OK option).
",,Architectural solution benefits and drawbacks,6:2665 - 6:2795,1,arjan
34:55,ifesdjeen,CASSANDRA-13072,ifesdjeen,,Comment,7:390 - 7:398,1,arjan
34:37,"LGTM, +1.",CASSANDRA-13072,"LGTM, +1.
",,Architectural solution benefits and drawbacks,7:767 - 7:777,1,arjan
35:1,Upgrade junit from 4.6 to 4.12,CASSANDRA-13360,Upgrade junit from 4.6 to 4.12,,Technology solution,3:53 - 3:82,1,arjan
35:2,Current stable release is 4.12: [released in 2014|https://github.com/j…,CASSANDRA-13360,"Current stable release is 4.12: [released in 2014|https://github.com/junit-team/junit4/releases].
We can levege more test features like Rule, TemporaryFolder, Parameterized Tests, Theories, etc.
Here are the release notes:  https://github.com/junit-team/junit4/tree/master/doc",,Technology solution,3:102 - 3:379,1,arjan
35:3,Junit-4.6 is a very old version [released in 2009|https://github.com/j…,CASSANDRA-13360,"Junit-4.6 is a very old version [released in 2009|https://github.com/junit-team/junit4/releases?after=r4.7].
",,Technical debt,3:382 - 3:491,1,arjan
35:13,jay.zhuang,CASSANDRA-13360,jay.zhuang,,Comment,3:597 - 3:606,1,arjan
35:4,utest is passed locally for 3.0 branch. Running tests on 3.11 and trun…,CASSANDRA-13360,"utest is passed locally for 3.0 branch. Running tests on 3.11 and trunk.
",,Architectural solution benefits and drawbacks,3:609 - 3:681,1,arjan
35:14,snazy,CASSANDRA-13360,snazy,,Comment,3:686 - 3:690,1,arjan
35:5,We usually do not update libraries unless there are bugs in stable bra…,CASSANDRA-13360,"We usually do not update libraries unless there are bugs in stable branches. Since  this is not a bug fx, updating fx version to 4.x.
",,Architectural design configuration,3:693 - 3:827,1,arjan
35:15,snazy,CASSANDRA-13360,snazy,,Comment,3:831 - 3:835,1,arjan
35:6,"Mean, we should be very careful with such changes.",CASSANDRA-13360,"Mean, we should be very careful with such changes.
",,Risks,3:838 - 3:889,1,arjan
35:16,jjirsa,CASSANDRA-13360,jjirsa,,Comment,3:893 - 3:898,1,arjan
35:7,"junit seems like one of the lowest risk pieces,",CASSANDRA-13360,"junit seems like one of the lowest risk pieces,",,Risks,3:901 - 3:947,1,arjan
35:8,but also agree that this should be  trunk/4.0 only.,CASSANDRA-13360,but also agree that this should be  trunk/4.0 only.,,Architectural solution benefits and drawbacks,3:949 - 3:999,1,arjan
35:17,dbrosius,CASSANDRA-13360,dbrosius,,Comment,3:1005 - 3:1012,1,arjan
35:9,Going to Junit 4.11 introduces hash code ordering of tests.,CASSANDRA-13360,Going to Junit 4.11 introduces hash code ordering of tests.,,Technology solution,3:1015 - 3:1073,1,arjan
35:10,"Certainly a good  idea, but one that can show dependency problems, tha…",CASSANDRA-13360,"Certainly a good  idea, but one that can show dependency problems, that you didn’t expect",,Architectural solution benefits and drawbacks,3:1075 - 3:1163,1,arjan
35:18,jay.zhuang,CASSANDRA-13360,jay.zhuang,,Comment,4:4 - 4:13,1,arjan
35:11,Passed the utest locally,CASSANDRA-13360,Passed the utest locally,,Architectural solution benefits and drawbacks,4:122 - 4:145,1,arjan
35:19,snazy,CASSANDRA-13360,snazy,,Comment,4:279 - 4:283,1,arjan
35:12,Alright - CI looks good so far. No unit test failures.,CASSANDRA-13360,"Alright - CI looks good so far. No unit test failures.
",,Architectural solution benefits and drawbacks,4:286 - 4:341,1,arjan
36:1,Update trunk’s netty to 4.1.28,CASSANDRA-14633,Update trunk’s netty to 4.1.28,,Technology solution,3:53 - 3:82,1,arjan
36:2,Upgrade the version of netty in trunk (4.0) to 4.1.28,CASSANDRA-14633,Upgrade the version of netty in trunk (4.0) to 4.1.28,,Technology solution,3:102 - 3:154,1,arjan
36:3,"We currently have 4.1.14,",CASSANDRA-14633,"We currently have 4.1.14,",,Existing system architecture description,3:157 - 3:181,1,arjan
36:4,and there’s been  lots of bug fxes since we last updated this for trun…,CASSANDRA-14633, and there’s been  lots of bug fxes since we last updated this for trunk.,,Architectural solution benefits and drawbacks,3:182 - 3:254,1,arjan
36:8,djoshi,CASSANDRA-14633,djoshi,,Comment,3:586 - 3:591,1,arjan
36:5,There was a dtest failure in nodetool test. I reran that test locally…,CASSANDRA-14633,"There was a dtest failure in nodetool test. I reran that test locally against your  branch and it passed so I am going to ignore the failure in the circleci.
",,Architectural solution benefits and drawbacks,3:594 - 3:752,1,arjan
36:9,djoshi,CASSANDRA-14633,djoshi,,Comment,5:443 - 5:448,1,arjan
36:6,+1,CASSANDRA-14633,+1,,Architectural solution benefits and drawbacks,5:451 - 5:452,1,arjan
36:7,I scanned through the release notes for Netty between version 4.1.15 a…,CASSANDRA-14633,I scanned through the release notes for Netty between version 4.1.15 and 4.1.28 and I did  not see anything obvious that would break us,,Architectural solution benefits and drawbacks,5:455 - 5:589,1,arjan
37:1,Replace ivy withmaven-ant-tasks,CASSANDRA-2017,Replace ivy withmaven-ant-tasks,,Technology solution,3:52 - 3:82,1,arjan
37:2,Replace ivy with maven-ant-tasks.,CASSANDRA-2017,"Replace ivy with maven-ant-tasks.
",,Technology solution,3:102 - 3:136,1,arjan
37:3,"1. In order to deploy cassandra to maven central, we will need to use…",CASSANDRA-2017,"1. In order to deploy cassandra to maven central, we will need to use maven-ant-tasks any-  way (as ivy does not generate correct poms)  2. In order to generate gpg signatures using ivy, we need to bootstrap a second ivy taskdef or use  multiple <get> tasks to download bouncycastle. Maven-ant-tasks does not require this.
3. Allows consolidating the dependency information in one place. Rather than having duplication  with the maven-ant-tasks for deploy to central",,Architectural solution benefits and drawbacks,3:158 - 3:624,1,arjan
37:11,tjake,CASSANDRA-2017,tjake,,Comment,4:4 - 4:8,1,arjan
37:4,"I like this approach because it doesn’t require maven to be installed,…",CASSANDRA-2017," I like this approach because it doesn’t require maven to be installed, it removed  ivy.xml and ivysettings.xml and it makes it easier to generate pom.xml for maven distribu-  tion.
",,Architectural solution benefits and drawbacks,4:10 - 4:192,1,arjan
37:12,jbellis,CASSANDRA-2017,jbellis,,Comment,4:196 - 4:202,1,arjan
37:5,Tested that ant release still works after realclean. On a standard bui…,CASSANDRA-2017,"Tested that ant release still works after realclean. On a standard build, dependency  checking is dramatically faster than ivy’s.
",,Architectural solution benefits and drawbacks,4:205 - 4:335,1,arjan
37:6,With my limited build expertise I am +0.,CASSANDRA-2017,With my limited build expertise I am +0.,,Architectural solution benefits and drawbacks,4:336 - 4:375,1,arjan
37:13,urandom,CASSANDRA-2017,urandom,,Comment,4:633 - 4:639,1,arjan
37:7,"Also, I wonder if it’s the best thing to be making this sort of change…",CASSANDRA-2017,"Also, I wonder if it’s the best thing to be making this sort of change in a stable release.
",,"Architectural solution benefits and drawbacks
Assumptions",4:745 - 4:837,2,arjan
37:8,+1 on the general approach though. I think.,CASSANDRA-2017,+1 on the general approach though. I think.,,"Architectural solution benefits and drawbacks
Assumptions",4:838 - 4:880,2,arjan
37:14,urandom,CASSANDRA-2017,urandom,,Comment,4:1410 - 4:1416,1,arjan
37:9,"LGTM, +1,",CASSANDRA-2017," LGTM, +1, ",,Architectural solution benefits and drawbacks,4:1418 - 4:1428,1,arjan
37:10,(and I think I’m sufciently convinced that it’s OK for 0.7.1 as well).,CASSANDRA-2017,"(and I think I’m sufciently convinced that it’s OK for 0.7.1 as well).
",,"Architectural solution benefits and drawbacks
Assumptions",4:1429 - 4:1499,2,arjan
38:1,optional pluggable o.a.c.metrics reporters,CASSANDRA-4430,optional pluggable o.a.c.metrics reporters,,Architectural design configuration,3:52 - 3:93,1,arjan
38:2,CASSANDRA-4009 expanded the use of the metrics library which has a set…,CASSANDRA-4430,"CASSANDRA-4009 expanded the use of the metrics library which has a set of reporter modules  http://metrics.codahale.com/manual/core/#reporters You can report to fat fles, ganglia, spit ev-  erything over http, etc",,Existing system architecture description,3:113 - 3:325,1,arjan
38:3,The next step is a mechanism for using those reporters with o.a.c.metr…,CASSANDRA-4430,"The next step is a mechanism for using those reporters with o.a.c.metrics.
",,Architectural design configuration,3:328 - 3:403,1,arjan
38:4,To avoid bundling everything,CASSANDRA-4430,To avoid bundling everything,,Architectural solution benefits and drawbacks,3:404 - 3:431,1,arjan
38:5,"I suggest following the mx4j approach of ""enable only if on classpath…",CASSANDRA-4430," I suggest following the mx4j approach of ""enable only if on classpath  coupled with a reporter confguration fle.",,Other system architectural solutions,3:432 - 3:544,1,arjan
38:33,cburroughs,CASSANDRA-4430,cburroughs,,Comment,4:347 - 4:356,1,arjan
38:6,It works!,CASSANDRA-4430," It works!
",,Architectural solution benefits and drawbacks,4:554 - 4:565,1,arjan
38:7,Requires newer snakeyaml ( CASSANDRA-5317 ),CASSANDRA-4430,Requires newer snakeyaml ( CASSANDRA-5317 ),,Architectural solution benefits and drawbacks,4:568 - 4:610,1,arjan
38:8,Not sure if the jboss logging transitive dep can be avoided yet,CASSANDRA-4430,Not sure if the jboss logging transitive dep can be avoided yet,,Architectural solution benefits and drawbacks,4:676 - 4:738,1,arjan
38:9,All of the transitives  dependencies could be avoided (I think) if we…,CASSANDRA-4430,"All of the transitives  dependencies could be avoided (I think) if we don’t care about validating confgs (ie get-  ting helpful messages along the lines of ""fortnight"" is not a valid timeunit, must match  ""ˆ(DAYS|HOURS|MICROSECONDS|MILLISECONDS|MINUTES|NANOSECONDS|SECONDS)$"")",,"Architectural component behavior and structure
Assumptions",4:741 - 4:1016,2,arjan
38:10,In theory the confg could be embedded in cassandra.yaml,CASSANDRA-4430, In theory the confg could be embedded in cassandra.yaml,,Architectural component behavior and structure,4:1020 - 4:1075,1,arjan
38:11,I went with a new fle since  jmx/log4j/mx4j etc are all done outside o…,CASSANDRA-4430,I went with a new fle since  jmx/log4j/mx4j etc are all done outside of cassandra.yaml. This is the design choice I was  least sure about.,,Architectural solution benefits and drawbacks,4:1078 - 4:1215,1,arjan
38:34,cburroughs,CASSANDRA-4430,cburroughs,,Comment,4:1564 - 4:1573,1,arjan
38:12,Also a cluster with the stress keyspaces seems to have on the order of…,CASSANDRA-4430,"Also a cluster with the stress keyspaces seems to have on the order of 1.5k  metric from o.a.c.metrics (yeah metrics!), but that can be a rather large amount for gangli-  a/graphite to deal with. I may need to think about how to approach that.
",,Motivation of design issue,4:1576 - 4:1820,1,arjan
38:35,cburroughs,CASSANDRA-4430,cburroughs,,Comment,4:1824 - 4:1833,1,arjan
38:13,Keeping per connection stats around is not tenable for larger clusters…,CASSANDRA-4430,"Keeping per connection stats around is not tenable for larger clusters,",,Motivation of design issue,4:2029 - 4:2099,1,arjan
38:14,I think we will need a default confg with an example blacklist,CASSANDRA-4430,I think we will need a default confg with an example blacklist,,"Architectural design configuration
Assumptions",4:2105 - 4:2166,2,arjan
38:15,what we do with internal  services is a convention like ending metric…,CASSANDRA-4430,"what we do with internal  services is a convention like ending metric names with JMX_ONLY, but that’s probably too  ugly and brittle for general use).
",,"Architectural design configuration
Architectural solution benefits and drawbacks",4:2169 - 4:2319,2,arjan
38:36,thobbs,CASSANDRA-4430,thobbs,,Comment,5:158 - 5:163,1,arjan
38:16,Overall I’m not opposed to the idea of making it easy to enable variou…,CASSANDRA-4430," Overall I’m not opposed to the idea of making it easy to enable various reporters,",,Architectural solution benefits and drawbacks,5:165 - 5:247,1,arjan
38:37,cburroughs,CASSANDRA-4430,cburroughs,,Comment,5:2434 - 5:2443,1,arjan
38:17,I just mean that as an example of something that generates too much no…,CASSANDRA-4430,"I just mean that as an example of something that generates too much noise to be a good  out of the box experience.
",,Architectural solution benefits and drawbacks,5:2774 - 5:2889,1,arjan
38:18,The csv reporter is probably not used in production much. I’m not exac…,CASSANDRA-4430,"The csv reporter is probably not used in production much. I’m not exactly sure what is  going on when trying to use it here, but I agree it’s producing a paucity of metrics.
",,Architectural solution benefits and drawbacks,6:1 - 6:175,1,arjan
38:19,"However, that’s a metric-reporter-confg limitation, not a Metrics one,",CASSANDRA-4430,"However, that’s a metric-reporter-confg limitation, not a Metrics one,",,Architectural solution benefits and drawbacks,6:447 - 6:516,1,arjan
38:38,thobbs,CASSANDRA-4430,thobbs,,Comment,6:647 - 6:652,1,arjan
38:20,I feel like this is probably the main problem that needs to be solved.…,CASSANDRA-4430,"I feel like this is probably the main problem that needs to be solved. Besides per-connection  metrics (thanks for pointing those out), there are many users with hundreds or thousands  of column families, each of which have quite a few metrics",,Motivation of design issue,6:1017 - 6:1259,1,arjan
38:21,It seems like the regex support should be sufcient for that if it’s ap…,CASSANDRA-4430,It seems like the regex support should be sufcient for that if it’s applied to the full metric  name (o.a.c.metrics.ColumnFamily.LiveSSTableCount.system.IndexInfo).,,"Architectural design configuration
Assumptions",6:1433 - 6:1596,2,arjan
38:39,cburroughs,CASSANDRA-4430,cburroughs,,Comment,6:1705 - 6:1714,1,arjan
38:22,Using the full metric name is reasonable and should not be too hard.,CASSANDRA-4430,Using the full metric name is reasonable and should not be too hard. ,,Architectural solution benefits and drawbacks,6:1717 - 6:1785,1,arjan
38:23,I’m going to  ignore that and concat the strings in normal (jmx) order,CASSANDRA-4430,I’m going to  ignore that and concat the strings in normal (jmx) order,,Architectural design configuration,6:2093 - 6:2162,1,arjan
38:40,thobbs,CASSANDRA-4430,thobbs,,Comment,6:2249 - 6:2254,1,arjan
38:24,"That sounds great, thanks.",CASSANDRA-4430,"That sounds great, thanks.
",,Architectural solution benefits and drawbacks,6:2257 - 6:2284,1,arjan
38:41,cburroughs,CASSANDRA-4430,cburroughs,,Comment,6:2564 - 6:2573,1,arjan
38:25,CSVReporter only works if the non-qualifed names are unique. The same…,CASSANDRA-4430,CSVReporter only works if the non-qualifed names are unique. The same uses the con-  sole reporter to dump everything to one big fle which is really only useful as a sample,,Architectural solution benefits and drawbacks,7:1 - 7:172,1,arjan
38:42,cburroughs,CASSANDRA-4430,cburroughs,,Comment,7:998 - 7:1007,1,arjan
38:26,"The jars are for validation of the confg, javax.validation.validation-…",CASSANDRA-4430,"The jars are for validation of the confg, javax.validation.validation-api the actual imple-  mentation of said api from the hibernate folks, and the logging jar that the hibernate folks  use. That’s admittedly a case study in somewhat excessive java modularity. ",,Architectural solution benefits and drawbacks,7:1129 - 7:1390,1,arjan
38:27,I *think* if  those deps are excluded the only consequence is less use…,CASSANDRA-4430,I *think* if  those deps are excluded the only consequence is less useful error messages.,,"Architectural design configuration
Architectural solution benefits and drawbacks
Assumptions",7:1391 - 7:1479,3,arjan
38:28,On the other  hand cassandra.yaml itself might beneft from the javax.v…,CASSANDRA-4430,"On the other  hand cassandra.yaml itself might beneft from the javax.validation stuf, but that’s a difer-  ent topic.
",,"Architectural design configuration
Architectural solution benefits and drawbacks",7:1481 - 7:1599,2,arjan
38:43,jbellis,CASSANDRA-4430,jbellis,,Comment,7:2077 - 7:2083,1,arjan
38:29,"Let’s verify that, because I really don’t want to increase our list of…",CASSANDRA-4430,"Let’s verify that, because I really don’t want to increase our list of hand-maintained jars and  licenses (which appear to be missing, btw) by > 10% for a very optional feature. Especially  when half of the four new ones are not fnal releases...
",,Architectural solution benefits and drawbacks,7:2179 - 7:2425,1,arjan
38:44,thobbs,CASSANDRA-4430,thobbs,,Comment,8:1000 - 8:1005,1,arjan
38:30,+1,CASSANDRA-4430,+1,,Architectural solution benefits and drawbacks,8:1008 - 8:1009,1,arjan
38:45,depend,CASSANDRA-4430,depend,,Comment,8:1558 - 8:1563,1,arjan
38:31,I am currently using jmxtrans to report metrics to graphite.,CASSANDRA-4430,I am currently using jmxtrans to report metrics to graphite. ,,Architectural design configuration,8:1588 - 8:1648,1,arjan
38:46,cburroughs,CASSANDRA-4430,cburroughs,,Comment,8:1712 - 8:1721,1,arjan
38:32,"Ease of use, fewer moving parts with polling intervals to reason about…",CASSANDRA-4430,"Ease of use, fewer moving parts with polling intervals to reason about  * Ease of confguration, you don’t have to confgure another thing to know all about your  cassandra clusters and all about ganglia.
",,Architectural solution benefits and drawbacks,8:1726 - 8:1929,1,arjan
39:1,RangeStreamer should be smarter when picking endpoints for streaming i…,CASSANDRA-4650,"RangeStreamer should be smarter when picking endpoints for streaming in case of N >=3 in each  DC.
",,Run-time quality issues,3:52 - 3:151,1,arjan
39:2,getRangeFetchMap method in RangeStreamer should pick unique nodes to s…,CASSANDRA-4650,"getRangeFetchMap method in RangeStreamer should pick unique nodes to stream data from when  number of replicas in each DC is three or more.When N>=3 in a DC, there are two options for  streaming a range. Consider an example of 4 nodes in one datacenter and replication factor of 3.If  a node goes down, it needs to recover 3 ranges of data. With current code, two nodes could get  selected as it orders the node by proximity.We ideally will want to select 3 nodes for streaming  the data.",,Run-time quality issues,3:169 - 3:656,1,arjan
39:3,We can do this by selecting unique nodes for each range.,CASSANDRA-4650,"We can do this by selecting unique nodes for each range.
",,Architectural component behavior and structure,3:658 - 3:715,1,arjan
39:4,This will increase the performance of bootstrapping a node,CASSANDRA-4650,This will increase the performance of bootstrapping a node,,Architectural tactics,3:729 - 3:786,1,arjan
39:5,will also put less pressure on nodes  serving the data.,CASSANDRA-4650,"will also put less pressure on nodes  serving the data.
",,Architectural solution benefits and drawbacks,3:792 - 3:848,1,arjan
39:18,kohlisankalp,CASSANDRA-4650,kohlisankalp,,Comment,3:1051 - 3:1062,1,arjan
39:6,We need more support from RangeStreamer to support N >=3.,CASSANDRA-4650,"We need more support from RangeStreamer to support N >=3.
",,Run-time quality issues,3:1065 - 3:1123,1,arjan
39:19,kohlisankalp,CASSANDRA-4650,kohlisankalp,,Comment,3:1127 - 3:1138,1,arjan
39:7,This will be very useful for vnodes as it will even out the load of bo…,CASSANDRA-4650," This will be very useful for vnodes as it will even out the load of bootstrap-  ping across the cluster. Also the bootstrap will be faster as it will spread the ranges evenly  across the nodes.
This problem is basically about mapping x ranges to y machines with constraints of repli-  cation",,Motivation of design issue,3:1140 - 3:1432,1,arjan
39:8,So it can be modeled as a max network fow problem.I am attaching a pic…,CASSANDRA-4650,"So it can be modeled as a max network fow problem.I am attaching a picture of a  2
graph. In the picture, R1 to R6 are 6 ranges being mapped to 4 machines(M1 to m4). Here  the replication is 2 as each range can be mapped to two machines. All the edges in this  graph have weight 1 except the edges between M1 to M4 and t.The edges between M1 to M4  and t will be ceil(No of ranges/No of machines) initially(2 in the picture). If we cannot push  a fow of 6(i.e no of ranges) from s to t, then we will increase the weight on edges between  M1 to M4 and t by 1(in our example to 3).
We will continue to increase the weight by 1 till we have a fow of 6 from s to t.
We also need to take care of the multi-DC deployment as we dont want to stream from across  DC to optimize the load.
",,Architectural design configuration,3:1435 - 4:699,1,arjan
39:20,jbellis,CASSANDRA-4650,jbellis,,Comment,4:811 - 4:817,1,arjan
39:9,"Hmm, but we’re also working on CASSANDRA-2434 which will force it to p…",CASSANDRA-4650,"Hmm, but we’re also working on CASSANDRA-2434 which will force it to pick  the ""replaced"" [v]node/node as the one to stream from. The good news is that should force  spreading the load around the replicas as well.
",,Architectural solution benefits and drawbacks,4:820 - 4:1034,1,arjan
39:21,kohlisankalp,CASSANDRA-4650,kohlisankalp,,Comment,4:1038 - 4:1049,1,arjan
39:10,I don’t think CASSANDRA-2434 solves this. If you are replacing a dead…,CASSANDRA-4650," I don’t think CASSANDRA-2434 solves this. If you are replacing a dead  machine with replace args, it could stream from 2 places in some cases when the ideal will  be 3.
",,"Architectural solution benefits and drawbacks
Assumptions",4:1051 - 4:1221,2,arjan
39:22,kohlisankalp,CASSANDRA-4650,kohlisankalp,,Comment,4:1225 - 4:1236,1,arjan
39:11,It requireshttps://mvnrepository.com/artifact/org.psjava/psjava/0.1.19,CASSANDRA-4650,It requireshttps://mvnrepository.com/artifact/org.psjava/psjava/0.1.19,,Architectural design configuration,4:1239 - 4:1308,1,arjan
39:23,tjake,CASSANDRA-4650,tjake,,Comment,4:1357 - 4:1361,1,arjan
39:12,I looked over the patch and I like the idea.,CASSANDRA-4650," I looked over the patch and I like the idea.
",,Architectural solution benefits and drawbacks,4:1363 - 4:1409,1,arjan
39:24,kohlisankalp,CASSANDRA-4650,kohlisankalp,,Comment,4:2090 - 4:2101,1,arjan
39:13,Capacity b/w rangeVertex and connected endpointVertex is always infnit…,CASSANDRA-4650,"Capacity b/w rangeVertex and connected endpointVertex is always infnite  (Integer.MAX_VALUE)  Capacity b/w sourceVertex and Rangevertex is always 1  Capacity b/w endpointVertex and destinationVertex is what gets calculated by getDestina-  tionLinkCapacity which is(int) Math.ceil(Number of rangeVertices / Number of endpointVer-  tices)  If we are not able to fnd a fow, we increment the capacity by 1 b/w endpointVertex and  destinationVertex",,Architectural design configuration,4:2104 - 4:2546,1,arjan
39:25,marcuse,CASSANDRA-4650,marcuse,,Comment,5:2107 - 5:2113,1,arjan
39:14,I ran the dtests locally and they look good,CASSANDRA-4650,I ran the dtests locally and they look good,,Architectural solution benefits and drawbacks,5:2302 - 5:2344,1,arjan
39:26,kohlisankalp,CASSANDRA-4650,kohlisankalp,,Comment,5:2351 - 5:2362,1,arjan
39:15,+1,CASSANDRA-4650,+1,,Architectural solution benefits and drawbacks,5:2365 - 5:2366,1,arjan
39:27,marcuse,CASSANDRA-4650,marcuse,,Comment,5:2373 - 5:2379,1,arjan
39:16,"+1, committed",CASSANDRA-4650,"+1, committed",,Architectural solution benefits and drawbacks,5:2382 - 5:2394,1,arjan
39:17,"psjava seems to be the frst MIT-licensed library we use (ie, there are…",CASSANDRA-4650,"psjava seems to be the frst MIT-licensed library we use (ie, there are at least no MIT-licenses  in lib/licenses/*), but it seems it is OK according to this: http://apache.org/legal/resolved.html#category-  a",,"Architectural solution benefits and drawbacks
Technology solution",5:2397 - 5:2604,2,arjan
40:1,I’ve been working on an implementation for both IAuthority2 and IAuthe…,CASSANDRA-4898,"I’ve been working on an implementation for both IAuthority2 and IAuthenticator that uses Cas-  sandra itself to store the necessary credentials. I’m planning on open sourcing this shortly.
",,Technology solution,3:114 - 3:303,1,arjan
40:2,"It tries to provide reasonable security, for example using PBKDF2  to…",CASSANDRA-4898,"It tries to provide reasonable security, for example using PBKDF2  to store passwords with a confgurable confguration cycle and managing all the rights available  in IAuthority2.
",,Technology solution,3:335 - 3:513,1,arjan
40:3,"My main use goal isn’t security / confdentiality of the data, but more…",CASSANDRA-4898,"My main use goal isn’t security / confdentiality of the data, but more that I don’t want multiple  consumers of the cluster to accidentally screw stuf up. Only certain users can write data, others  can read it out again and further process it.
",,Architectural solution benefits and drawbacks,3:515 - 3:759,1,arjan
40:5,Is there a deliberate reason that validateConfguration() is executed b…,CASSANDRA-4898,"Is there a deliberate reason that validateConfguration() is executed before all information about  keyspaces, column families etc. is available?",,Existing system architecture description,3:1356 - 3:1499,1,arjan
40:6,In the current form I therefore can’t validate whether  column familie…,CASSANDRA-4898,"In the current form I therefore can’t validate whether  column families etc. are available for authentication since they aren’t loaded yet.
",,Technical debt,3:1501 - 3:1641,1,arjan
40:4,I’ve wanted to use this to make relatively easy bootstrapping possible,CASSANDRA-4898,I’ve wanted to use this to make relatively easy bootstrapping possible,,Architectural solution benefits and drawbacks,3:1642 - 3:1711,1,arjan
40:7,My approach here would  be to only enable authentication if the needed…,CASSANDRA-4898,My approach here would  be to only enable authentication if the needed keyspace is available.,,Architectural design configuration,3:1714 - 3:1806,1,arjan
40:8,"This allows for confguring  the cluster, then import the necessary aut…",CASSANDRA-4898,"This allows for confguring  the cluster, then import the necessary authentication data for an admin user to bootstrap further  and then restart every node in the cluster.
",,Architectural solution benefits and drawbacks,3:1808 - 3:1979,1,arjan
40:9,I’ve added a strategy that basically says that data should be availabl…,CASSANDRA-4898,I’ve added a strategy that basically says that data should be available on all nodes. The amount  of data use for authentication is very limited.,,Architectural design configuration,4:81 - 4:225,1,arjan
40:10,Replicating it to every node is there for not very  problematic and al…,CASSANDRA-4898,"Replicating it to every node is there for not very  problematic and allows for every node to have all data locally available for verifying requests.
",,Architectural solution benefits and drawbacks,4:227 - 4:376,1,arjan
40:27,jbellis,CASSANDRA-4898,jbellis,,Comment,4:923 - 4:929,1,arjan
40:11,IMO this would be a good candidate for a new reference implementation.,CASSANDRA-4898," IMO this would be a good candidate for a new reference implementation.
",,Architectural solution benefits and drawbacks,4:931 - 4:1003,1,arjan
40:12,Note that IAuth2 is kind of broken (oops) and we’ll be redoing that in…,CASSANDRA-4898,Note that IAuth2 is kind of broken (oops) and we’ll be redoing that in CASSANDRA-  4874 and CASSANDRA-4875.,,Run-time quality issues,4:1004 - 4:1110,1,arjan
40:13,I would suggest using QueryProcessor.processInternal,CASSANDRA-4898,I would suggest using QueryProcessor.processInternal,,Architectural component behavior and structure,4:1175 - 4:1226,1,arjan
40:14,to keep the pain level down,CASSANDRA-4898, to keep the pain level down,,Architectural solution benefits and drawbacks,4:1227 - 4:1254,1,arjan
40:15,This is overkill.,CASSANDRA-4898,"This is overkill.
",,Architectural solution benefits and drawbacks,4:1387 - 4:1405,1,arjan
40:16,"Suggest instead creating a system_auth keyspace, default to SimpleStra…",CASSANDRA-4898,"Suggest instead creating a system_auth keyspace, default to SimpleStrategy/RF=1. Users  can then change this using normal tools.
",,Architectural component behavior and structure,4:1406 - 4:1535,1,arjan
40:28,dbussink,CASSANDRA-4898,dbussink,,Comment,4:1832 - 4:1839,1,arjan
40:17,I could imagine it being a relatively big overhead if the permission c…,CASSANDRA-4898," I could imagine it being a relatively big overhead if the permission check  needs to be made for example for each single write over the same connection with the same  credentials.
",,Architectural solution benefits and drawbacks,5:18 - 5:199,1,arjan
40:18,Currently I’m using StorageProxy.read (reading password and permission…,CASSANDRA-4898,Currently I’m using StorageProxy.read (reading password and permissions) and Storage-  Proxy.mutate (handling grants) and I’m not going crazy because of that :). These are btw  the column families I’m using atm (using the custom strategy but of course not necessary):  https://gist.github.com/7231bc6d23331ecfb07b,,Architectural design configuration,5:200 - 5:512,1,arjan
40:19,The only thing that needs some explanation there is probably the seria…,CASSANDRA-4898,"The only thing that needs some explanation there is probably the serialization format. The  password is a combination of PBKDF2 iterations, key length, salt and hash. The permis-  sions is a long which is composed of two 32 bit masks, one for the grant rights and one for  the access rights. Since Permission explicitly states the ordinal values can be used, I chose  to do that.
",,Architectural design configuration,5:515 - 5:895,1,arjan
40:29,jbellis,CASSANDRA-4898,jbellis,,Comment,5:899 - 5:905,1,arjan
40:20,I’d rather add hooks to dropping keyspaces so we can clear things out…,CASSANDRA-4898,"I’d rather add hooks to dropping keyspaces so we can clear things out then.
",,"Architectural design configuration
Architectural solution benefits and drawbacks",5:1063 - 5:1139,2,arjan
40:21,Should really update this to CQL3 (see http://www.datastax.com/dev/blo…,CASSANDRA-4898,Should really update this to CQL3 (see http://www.datastax.com/dev/blog/cql3-for-cassandra-  experts and http://www.datastax.com/dev/blog/thrift-to-cql3). ,,Architectural design configuration,5:1385 - 5:1539,1,arjan
40:22,Then you can use Map or  Set collections for the permissions instead o…,CASSANDRA-4898,"Then you can use Map or  Set collections for the permissions instead of a custom serializer.
",,Architectural solution benefits and drawbacks,5:1540 - 5:1632,1,arjan
40:30,dbussink,CASSANDRA-4898,dbussink,,Comment,5:1637 - 5:1644,1,arjan
40:23,The biggest issue with switching to CQL3 internally at the moment is t…,CASSANDRA-4898,"The biggest issue with switching to CQL3 internally at the moment is that the process-  Internal API is diferent in 1.1.x and 1.2.x / trunk it seems. I haven’t switched this over to  CQL3 for that reason, since our current cluster that we run is running 1.1.5 at the moment.
The same goes for moving it to using Map or Set collections.",,Motivation of design issue,5:1727 - 5:2062,1,arjan
40:24,I don’t think it would be much work for this,CASSANDRA-4898,I don’t think it would be much work for this,,"Architectural solution benefits and drawbacks
Assumptions",5:2065 - 5:2108,2,arjan
40:25,I’ll probably update it anyway when we  switch to 1.2.x which probably…,CASSANDRA-4898,"I’ll probably update it anyway when we  switch to 1.2.x which probably isn’t long after the release.
",,"Architectural design configuration
Assumptions",5:2111 - 5:2211,2,arjan
40:31,jbellis,CASSANDRA-4898,jbellis,,Comment,6:926 - 6:932,1,arjan
40:26,LGTM.,CASSANDRA-4898,LGTM.,,Architectural solution benefits and drawbacks,6:935 - 6:939,1,arjan
41:1,LZ4Compressor,CASSANDRA-5038,LZ4Compressor,,Technology solution,3:52 - 3:64,1,arjan
41:2,LZ4 is a new compression algo,CASSANDRA-5038,LZ4 is a new compression algo,,Technology solution,3:84 - 3:112,1,arjan
41:3,that’s ~2x faster than Snappy.,CASSANDRA-5038," that’s ~2x faster than Snappy.
",,Architectural tactics,3:113 - 3:144,1,arjan
41:4,has written a nice java port which includes a misc.Unsafe version that…,CASSANDRA-5038," has written a nice java port which includes a misc.Unsafe version that performs >=  than our java snappy version.
Details at http://blog.jpountz.net/post/28092106032/wow-lz4-is-fast",,Technology solution,3:156 - 3:338,1,arjan
41:5,The nice thing is this should work with java7 and be more portable. We…,CASSANDRA-5038,"The nice thing is this should work with java7 and be more portable.
We can also fallback the pure java impl",,Architectural solution benefits and drawbacks,3:341 - 3:448,1,arjan
41:24,jpountz,CASSANDRA-5038,jpountz,,Comment,4:110 - 4:116,1,arjan
41:6,Hi Jake! I’m very happy that you are considering adding LZ4 support to…,CASSANDRA-5038,"Hi Jake! I’m very happy that you are considering adding LZ4 support to Cassan-  dra!
",,Architectural solution benefits and drawbacks,4:119 - 4:203,1,arjan
41:7,"The native impl is indeed very very fast, and the unsafe java impl is…",CASSANDRA-5038,"The native impl is indeed very very fast, and the unsafe java impl is ~48% faster at compress-  ing data and ~1% slower at decompressing data than the Snappy impl you use according to  my last benchmarks on the calgary corpus. If you run your own benchmarks, I’d be very  interested in knowing the results.
",,"Architectural solution benefits and drawbacks
Architectural tactics",4:205 - 4:512,2,arjan
41:8,I think the fallback to pure Java can be a plus:,CASSANDRA-5038,I think the fallback to pure Java can be a plus:,,"Architectural solution benefits and drawbacks
Assumptions",4:513 - 4:560,2,arjan
41:9,ideally Cassandra should frst try to load  the native impl (if the JAR…,CASSANDRA-5038,"ideally Cassandra should frst try to load  the native impl (if the JAR includes bindings for the host architecture), then the unsafe java  impl (if the JVM supports sun.misc.Unsafe) and then the pure Java impl",,Architectural design configuration,4:562 - 4:770,1,arjan
41:10,(which is unfortu-  nately ~40% slower at compressing and ~30% slower…,CASSANDRA-5038," (which is unfortu-  nately ~40% slower at compressing and ~30% slower at decompressing than the unsafe impl).
",,Architectural solution benefits and drawbacks,4:771 - 4:882,1,arjan
41:11,"I noticed in your patch that you are using the ""unknown size"" version…",CASSANDRA-5038,"I noticed in your patch that you are using the ""unknown size"" version of the decompres-  sor. It can unfortunately be slightly slower than the normal decompressor.",,Architectural solution benefits and drawbacks,4:883 - 4:1045,1,arjan
41:12,"On large blocks,  it can be faster to write the original length at the…",CASSANDRA-5038,"On large blocks,  it can be faster to write the original length at the beginning of the compressed streams to  be able to use the normal decompressor to decompress data.
",,"Architectural design configuration
Architectural tactics",4:1047 - 4:1217,2,arjan
41:25,tjake,CASSANDRA-5038,tjake,,Comment,4:1329 - 4:1333,1,arjan
41:13,"Cool, yeah",CASSANDRA-5038,"Cool, yeah",,Architectural solution benefits and drawbacks,4:1348 - 4:1357,1,arjan
41:14,I’d suggest you add a  simple way for us to pick the best compressor f…,CASSANDRA-5038,"I’d suggest you add a  simple way for us to pick the best compressor for our node.
",,User requirement,4:1590 - 4:1673,1,arjan
41:26,jpountz,CASSANDRA-5038,jpountz,,Comment,4:1677 - 4:1683,1,arjan
41:15,"It needs to be exact, or decompression will fail. An option to be able…",CASSANDRA-5038,"It needs to be exact, or decompression will fail. An option to be able to use it is to write  the original length as an int (or better as a variable-length int) before the compressed bytes.
Upon decompression, frst read the original length and then use this original length to call  the ""known size"" decompressor.
",,Architectural design configuration,4:1870 - 4:2185,1,arjan
41:16,Another feature of these compressors you might be interested in is tha…,CASSANDRA-5038,"Another feature of these compressors you might be interested in is that you can provide  them with an output bufer of any length and they will succeed only if they managed to gen-  erate an output which is small enough (and they will fail as soon as they know they won’t  make it). So for example, you could decide to write the raw bytes instead of the compressed  bytes if LZ4 didn’t manage to compress your data by more than 10%:  3
1 final int maxAcceptableCompressedLength = originalLength * 90 / 100;  2 try {  3 dest[0] = 0; // means compressed  4 final int compressedLength = compressor.compress(src, 0, originalLength, dest,  1, maxAcceptableCompressedLength);  5 return 1 + compressedLength;  6 } catch (LZ4Exception e) {  7 dest[0] = 1; // means not compressed  8 System.arraycopy(src, 0, dest, 1, originalLength);  9 return 1 + originalLength;  10 }  (Only the native LZ4 HC impl doesn’t support this feature.)",,Architectural solution benefits and drawbacks,4:2481 - 5:486,1,arjan
41:27,tjake,CASSANDRA-5038,tjake,,Comment,5:492 - 5:496,1,arjan
41:17,New version that encodes the length of each chunk in frst 4 bytes (did…,CASSANDRA-5038,New version that encodes the length of each chunk in frst 4 bytes (didn’t use vints),,Architectural component behavior and structure,5:499 - 5:582,1,arjan
41:28,tjake,CASSANDRA-5038,tjake,,Comment,6:553 - 6:557,1,arjan
41:18,The current version as submitted is good.,CASSANDRA-5038,"The current version as submitted is good.
",,Architectural solution benefits and drawbacks,6:676 - 6:718,1,arjan
41:29,jpountz,CASSANDRA-5038,jpountz,,Comment,6:810 - 6:816,1,arjan
41:19,I fnally managed to deploy an artifact with pre-built JNI bindings for…,CASSANDRA-5038," I fnally managed to deploy an artifact with pre-built JNI bindings for some ma-  jor platforms (win32/amd64, linux/i386, linux/amd64 and darwin/x86_64) to Maven Cen-  tral (http://repo1.maven.org/maven2/net/jpountz/lz4/lz4/1.1.0/).",,Architectural design configuration,6:818 - 6:1049,1,arjan
41:20,This should help pro-  vide better performance on these platforms (see…,CASSANDRA-5038,"This should help pro-  vide better performance on these platforms (see compression and decompression benchmarks:  http://jpountz.github.com/lz4-java/1.1.0/lz4-compression-benchmark/ http://jpountz.github.com/lz4-  java/1.1.0/lz4-decompression-benchmark/).
",,Architectural tactics,6:1051 - 6:1307,1,arjan
41:30,tjake,CASSANDRA-5038,tjake,,Comment,6:1873 - 6:1877,1,arjan
41:21,I believe Snappy has slightly higher compression but I don’t see a rea…,CASSANDRA-5038,"I believe Snappy has slightly higher compression but I don’t see a reason to use it. I  don’t really feel strongly about it either way.
",,Architectural solution benefits and drawbacks,6:1880 - 6:2016,1,arjan
41:31,carlyeks,CASSANDRA-5038,carlyeks,,Comment,6:2021 - 6:2028,1,arjan
41:22,One beneft to LZ4 is that the unsafe implementation isn’t much slower…,CASSANDRA-5038,"One beneft to LZ4 is that the unsafe implementation isn’t much slower than the  native version; if we end up going to an incompatible version (or people run on some platform  that Snappy/LZ4 native hasn’t been created for), they won’t have nearly the slowdown that  Snappy has (or at least had, not sure if they’ve addressed that).
",,Architectural solution benefits and drawbacks,6:2031 - 6:2363,1,arjan
41:32,jpountz,CASSANDRA-5038,jpountz,,Comment,6:2390 - 6:2396,1,arjan
41:23,For your information [~cowtowncoder] ran his JVM compressor benchmark…,CASSANDRA-5038,"For your information [~cowtowncoder] ran his JVM compressor benchmark again recently,  and indeed, it shows good performance numbers for both the native and the Java impl of  LZ4: https://twitter.com/cowtowncoder/status/343881969697951744",,Architectural solution benefits and drawbacks,6:2738 - 6:2975,1,arjan
42:1,Cassandra/Hadoop does not support current Hadoop releases,CASSANDRA-5201,Cassandra/Hadoop does not support current Hadoop releases,,Run-time quality issues,3:52 - 3:108,1,arjan
42:2,Using Hadoop 0.22.0 with Cassandra results in the stack trace below. I…,CASSANDRA-5201,"Using Hadoop 0.22.0 with Cassandra results in the stack trace below.
It appears that version 0.21+ changed org.apache.hadoop.mapreduce.JobContext  from a class to an interface.
Exception in thread ""main"" java.lang.IncompatibleClassChangeError: Found interface org.apache.hadoop.mapreduce.JobC  but class was expected  at org.apache.cassandra.hadoop.ColumnFamilyInputFormat.getSplits(ColumnFamilyInputFormat.java:103)  at org.apache.hadoop.mapreduce.JobSubmitter.writeNewSplits(JobSubmitter.java:445)  at org.apache.hadoop.mapreduce.JobSubmitter.writeSplits(JobSubmitter.java:462)  at org.apache.hadoop.mapreduce.JobSubmitter.submitJobInternal(JobSubmitter.java:357)  at org.apache.hadoop.mapreduce.Job$2.run(Job.java:1045)  at org.apache.hadoop.mapreduce.Job$2.run(Job.java:1042)  at java.security.AccessController.doPrivileged(Native Method)  at javax.security.auth.Subject.doAs(Subject.java:415)  at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1153)  at org.apache.hadoop.mapreduce.Job.submit(Job.java:1042)  at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:1062)  at MyHadoopApp.run(MyHadoopApp.java:163)  at org.apache.hadoop.util.ToolRunner.run(ToolRunner.java:69)  at MyHadoopApp.main(MyHadoopApp.java:82)  at sun.refect.NativeMethodAccessorImpl.invoke0(Native Method)  at sun.refect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)  at sun.refect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)  at java.lang.refect.Method.invoke(Method.java:601)  at org.apache.hadoop.util.RunJar.main(RunJar.java:192)",,Run-time quality issues,3:128 - 3:1729,1,arjan
42:51,jeromatron,CASSANDRA-5201,jeromatron,,Comment,4:194 - 4:203,1,arjan
42:3,The current stable hadoop version is still the 1.0.x line according to…,CASSANDRA-5201,"The current stable hadoop version is still the 1.0.x line according to http://hadoop.apache.org/releases  As long as the 1.0.x support isn’t adversely afected, I would think a patch to provide support  for all hadoop versions would be welcome.
",,"Architectural solution benefits and drawbacks
Assumptions",4:206 - 4:450,2,arjan
42:52,brandon.williams,CASSANDRA-5201,brandon.williams,,Comment,4:454 - 4:469,1,arjan
42:4,I think the last time I looked into this I couldn’t fnd a way to suppo…,CASSANDRA-5201," I think the last time I looked into this I couldn’t fnd a way to support  both versions, so we’re either stuck with 0.21+ being broken, or breaking it for everyone  that’s on a lower version already.
",,"Assumptions
Motivation of design issue",4:471 - 4:672,2,arjan
42:53,dbrosius,CASSANDRA-5201,dbrosius,,Comment,4:710 - 4:717,1,arjan
42:5,what if the hadoop directory was split out into two separate sub-proje…,CASSANDRA-5201,"what if the hadoop directory was split out into two separate sub-projects which  produced two separate jars, thus a jar for old hadoop support and one for new hadoop. then  folks could choose which jar to add to the cassandra classpath?
",,Architectural design configuration,4:720 - 4:957,1,arjan
42:54,brandon.williams,CASSANDRA-5201,brandon.williams,,Comment,4:961 - 4:976,1,arjan
42:6,"That’s not a bad idea,",CASSANDRA-5201,"That’s not a bad idea, ",,Architectural solution benefits and drawbacks,4:979 - 4:1001,1,arjan
42:55,genx7up,CASSANDRA-5201,genx7up,,Comment,4:1284 - 4:1290,1,arjan
42:7,We are using the newer 0.23.x & are facing this integration issue.,CASSANDRA-5201,We are using the newer 0.23.x & are facing this integration issue.,,Run-time quality issues,4:1293 - 4:1358,1,arjan
42:56,dbrosius,CASSANDRA-5201,dbrosius,,Comment,4:1483 - 4:1490,1,arjan
42:8,initial patch against 1.2  - pulls hadoop code into src/hadoop/hadoop-…,CASSANDRA-5201,"initial patch against 1.2  - pulls hadoop code into src/hadoop/hadoop-legacy  - replicates that into src/hadoop/hadoop-new with changes for api changes.
pulls new hadoop dependencies and builds separate jars for each.
which jar you run against is still manual... command line switch?
posted version a so i didn’t lose stuf.
3
This uses 0.23.6 versions of jars,",,Architectural design configuration,4:1493 - 5:34,1,arjan
42:9,which i assume is compatible with the 2.0a versions of  the api.,CASSANDRA-5201,"which i assume is compatible with the 2.0a versions of  the api.
",,Architectural solution benefits and drawbacks,5:36 - 5:101,1,arjan
42:57,jeromatron,CASSANDRA-5201,jeromatron,,Comment,5:106 - 5:115,1,arjan
42:11,I wonder if it would be preferable,CASSANDRA-5201,I wonder if it would be preferable,,"Architectural solution benefits and drawbacks
Assumptions",5:118 - 5:151,2,arjan
42:10,"have all of the code in tree in the same  jar still, but have diferent…",CASSANDRA-5201,"have all of the code in tree in the same  jar still, but have diferent package paths, like org.apache.cassandra.hadoop (for backwards  compatibility) and org.apache.cassandra.hadoop2. ",,Architectural design configuration,5:156 - 5:339,1,arjan
42:58,dbrosius,CASSANDRA-5201,dbrosius,,Comment,5:570 - 5:577,1,arjan
42:12,probably could be done. here’s some ’issues’ with that approach. 1) ex…,CASSANDRA-5201,"probably could be done. here’s some ’issues’ with that approach.
1) external code won’t work against both versions with the same code base. Obviously  the modifcations are insignifcant, (packages) but still.
2) Makes the build.xml fle marginally more complicated as you have to use <exclude> ele-  ments in the build  3) Building in IDEs is complicated as you need to add resource excludes, since these packages  need to be built as a separate project (at least one of them does).
4) If you have two IDE projects targetting the same classes dir, cleaning one project cleans  the other.
",,Architectural solution benefits and drawbacks,5:833 - 5:1422,1,arjan
42:59,mck,CASSANDRA-5201,mck,,Comment,5:1479 - 5:1481,1,arjan
42:13,What about simply putting the hadoop2 package into a github project?,CASSANDRA-5201,What about simply putting the hadoop2 package into a github project?,,Architectural design configuration,5:1484 - 5:1551,1,arjan
42:14,"it would become available for others to use, and c* can switch to it w…",CASSANDRA-5201,"it would become available for others to use, and c* can switch to it when they feel ready to  drop support for hadoop-0.20",,Architectural solution benefits and drawbacks,5:1554 - 5:1675,1,arjan
42:15,otherwise i’m in favour of separate jar fles (apache-cassandra-hadoop-…,CASSANDRA-5201,"otherwise i’m in favour of separate jar fles (apache-cassandra-hadoop-legacy-XXX.jar and  apache-cassandra-hadoop-XXX.jar). c* already bundles too much into the one jar fle IMHO.
",,Architectural solution benefits and drawbacks,5:1678 - 5:1857,1,arjan
42:60,mck,CASSANDRA-5201,mck,,Comment,5:1862 - 5:1864,1,arjan
42:16,Done,CASSANDRA-5201,Done,,Architectural solution benefits and drawbacks,5:1951 - 5:1954,1,arjan
42:61,jbellis,CASSANDRA-5201,jbellis,,Comment,5:2412 - 5:2418,1,arjan
42:17,How common is hadoop2 usage now? Can we drop hadoop1 for 2.1?,CASSANDRA-5201,How common is hadoop2 usage now? Can we drop hadoop1 for 2.1?,,Architectural design configuration,5:2421 - 5:2481,1,arjan
42:62,kkrugler,CASSANDRA-5201,kkrugler,,Comment,6:5 - 6:12,1,arjan
42:18,Re Hadoop 1.x vs. Hadoop 2.x - most companies I see are using a 1.x ve…,CASSANDRA-5201,"Re Hadoop 1.x vs. Hadoop 2.x - most companies I see are using a 1.x version  of Hadoop. Usage of Hadoop 2.x is ramping up fast, but I’m guessing it will be at least  another year (probably more) before you’d want to start thinking about phasing out support  for Hadoop 1.x",,Architectural solution benefits and drawbacks,6:15 - 6:286,1,arjan
42:63,nyo,CASSANDRA-5201,nyo,,Comment,6:363 - 6:365,1,arjan
42:19,Why dropping support for old hadoop versions while you can just use a…,CASSANDRA-5201,Why dropping support for old hadoop versions while you can just use a diferent pack-  age name (e.g org.apache.cassandra.hadoop2.<SomeClass>)?,,"Architectural design configuration
Architectural solution benefits and drawbacks",6:368 - 6:509,2,arjan
42:20,"Imo, the code in here:  https://github.com/michaelsembwever/cassandra-…",CASSANDRA-5201," Imo, the code in here:  https://github.com/michaelsembwever/cassandra-hadoop/ should just be merged with main-  stream implementation",,Architectural design configuration,6:510 - 6:643,1,arjan
42:21,so both 1.x and 2.x users can be happy,CASSANDRA-5201,so both 1.x and 2.x users can be happy,,Architectural solution benefits and drawbacks,6:646 - 6:683,1,arjan
42:22,Or you can indeed make it a lot more complex,CASSANDRA-5201,Or you can indeed make it a lot more complex,,Architectural solution benefits and drawbacks,6:687 - 6:730,1,arjan
42:23,by merging the 1.x and 2.x compatible  implementations and deciding wh…,CASSANDRA-5201,by merging the 1.x and 2.x compatible  implementations and deciding which one to use based on metadata obtained by polling the  cluster,,Architectural design configuration,6:732 - 6:866,1,arjan
42:24,but that is a bit too sophisticated,CASSANDRA-5201,but that is a bit too sophisticated,,Architectural solution benefits and drawbacks,6:869 - 6:903,1,arjan
42:25,"For most people the frst option, where they can  choose which package…",CASSANDRA-5201,"For most people the frst option, where they can  choose which package to use, would be sufcient.
",,Architectural solution benefits and drawbacks,6:906 - 6:1003,1,arjan
42:64,bcoverston,CASSANDRA-5201,bcoverston,,Comment,6:1907 - 6:1916,1,arjan
42:26,Ship two versions of their Hadoop integrations (one compiled for the o…,CASSANDRA-5201,"Ship two versions of their Hadoop integrations (one compiled for the old, and one compiled  for the new)",,Architectural design configuration,6:1999 - 6:2102,1,arjan
42:27,use a little refection to make things work across the board.,CASSANDRA-5201,"use a little refection to make things work across the board.
",,Architectural design configuration,6:2108 - 6:2169,1,arjan
42:28,I’m attaching a patch that uses the hadoopCompat subproject of elephan…,CASSANDRA-5201,I’m attaching a patch that uses the hadoopCompat subproject of elephantbird.,,"Architectural design configuration
Technology solution",6:2170 - 6:2245,2,arjan
42:29,This will  allow us to compile a single binary and run with the new an…,CASSANDRA-5201,"This will  allow us to compile a single binary and run with the new and old context objects.
",,Architectural solution benefits and drawbacks,6:2247 - 6:2340,1,arjan
42:65,dvryaboy,CASSANDRA-5201,dvryaboy,,Comment,7:110 - 7:117,1,arjan
42:30,"The EB HadoopCompat is what we use in production at Twitter, and plan…",CASSANDRA-5201,"The EB HadoopCompat is what we use in production at Twitter, and plan to  keep up to date in the foreseeable future.",,Other system architectural solutions,7:120 - 7:235,1,arjan
42:31,Glad you are fnding it useful.,CASSANDRA-5201,"Glad you are fnding it useful.
",,Architectural solution benefits and drawbacks,7:237 - 7:268,1,arjan
42:32,Seems generally applicable.,CASSANDRA-5201,"Seems generally applicable.
",,Architectural solution benefits and drawbacks,7:355 - 7:383,1,arjan
42:33,Also note that Tom White has a handy fndbugs plugin to look for Hadoop…,CASSANDRA-5201,Also note that Tom White has a handy fndbugs plugin to look for Hadoop incompati-  bility problems: https://github.com/tomwhite/hadoop-incompatibility-fndbugs-detector  Here’s how you’d use it: https://github.com/Parquet/parquet-mr/pull/77/fles,,"Architectural solution benefits and drawbacks
Technology solution",7:605 - 7:848,2,arjan
42:66,jeromatron,CASSANDRA-5201,jeromatron,,Comment,7:855 - 7:864,1,arjan
42:34,"As for me, it sounds like the EB (or if it makes more sense Parquet) d…",CASSANDRA-5201,"As for me, it sounds like the EB (or if it makes more sense Parquet) dependency makes  sense. ",,Architectural solution benefits and drawbacks,7:1035 - 7:1128,1,arjan
42:35,The hadoop incompatibility fndbugs detector also sounds great to inclu…,CASSANDRA-5201,The hadoop incompatibility fndbugs detector also sounds great to include to catch  anything before it is committed,,Architectural solution benefits and drawbacks,7:1129 - 7:1242,1,arjan
42:36,So I’m +1 on this approach.,CASSANDRA-5201,"So I’m +1 on this approach.
",,Architectural solution benefits and drawbacks,7:1245 - 7:1273,1,arjan
42:67,hkropp,CASSANDRA-5201,hkropp,,Comment,8:1640 - 8:1645,1,arjan
42:37,Use maven classifers for deployment,CASSANDRA-5201, Use maven classifers for deployment,,Technology solution,8:1784 - 8:1819,1,arjan
42:38,If this is used in a hadoop2 project you don’t want  hadoop1 dependenc…,CASSANDRA-5201,If this is used in a hadoop2 project you don’t want  hadoop1 dependencies and vice versa,,Architectural solution benefits and drawbacks,8:1822 - 8:1909,1,arjan
42:39,"This approach is used by Parquet, Avro and EB",CASSANDRA-5201,"This approach is used by Parquet, Avro and EB",,Other system architectural solutions,8:1912 - 8:1956,1,arjan
42:68,bcoverston,CASSANDRA-5201,bcoverston,,Comment,8:2334 - 8:2343,1,arjan
42:40,I agree that we need to do the second change,CASSANDRA-5201, I agree that we need to do the second change,,Architectural solution benefits and drawbacks,8:2355 - 8:2399,1,arjan
42:41,but I don’t see a  need to add deployment classifers. Because we’re us…,CASSANDRA-5201,"but I don’t see a  need to add deployment classifers. Because we’re using Hadoop-Compat (from EB) a single  binary will work for both.
",,Architectural solution benefits and drawbacks,8:2402 - 8:2537,1,arjan
42:42,but a single binary will  work for new and legacy deployments.,CASSANDRA-5201,"but a single binary will  work for new and legacy deployments.
",,Architectural design configuration,8:2604 - 8:2667,1,arjan
42:69,hkropp,CASSANDRA-5201,hkropp,,Comment,8:2672 - 8:2677,1,arjan
42:43,"I might be missing an important point, but Hadoop-Compat is nothing ot…",CASSANDRA-5201,"I might be missing an important point, but Hadoop-Compat is nothing other than  ContextUtil of hadoop2? It uses refection to test what’s on the classpath to decide how or  better what to return. I made it work with just using ContextUtil before I found this patch  here.
",,Architectural design configuration,8:2680 - 8:2951,1,arjan
42:44,Therefor the binary works fne for both (btw I would not consider it le…,CASSANDRA-5201,"Therefor the binary works fne for both (btw I would not consider it legacy!), if you manage  the dependencies on your own.
",,Architectural solution benefits and drawbacks,8:2952 - 8:3075,1,arjan
42:70,bcoverston,CASSANDRA-5201,bcoverston,,Comment,9:481 - 9:490,1,arjan
42:45,"Take a look at the code, it works for Hadoop1 and Hadoop2 without reco…",CASSANDRA-5201," Take a look at the code, it works for Hadoop1 and Hadoop2 without recompli-  ation, and without shipping two sets of dependencies. Basically it detects the current version  of Hadoop that you’re running and dynamically determines which TaskAttemptContext to  use, the Class, or the Interface",,Architectural design configuration,9:492 - 9:783,1,arjan
42:46,There’s no need to use deployment classifers to solve this  particular…,CASSANDRA-5201,"There’s no need to use deployment classifers to solve this  particular problem.
",,Architectural solution benefits and drawbacks,9:786 - 9:866,1,arjan
42:71,bcoverston,CASSANDRA-5201,bcoverston,,Comment,9:871 - 9:880,1,arjan
42:47,"Attaching a patch that brings in hadoop-compat, and adds the progressa…",CASSANDRA-5201,"Attaching a patch that brings in hadoop-compat, and adds the progressable  wrapper to it. I’m going to submit this upstream to the elephant bird project",,Architectural design configuration,9:883 - 9:1034,1,arjan
42:48,so we should  be able to remove this code and add the dependency in th…,CASSANDRA-5201, so we should  be able to remove this code and add the dependency in the future.,,Architectural solution benefits and drawbacks,9:1036 - 9:1115,1,arjan
42:72,bcoverston,CASSANDRA-5201,bcoverston,,Comment,9:1208 - 9:1217,1,arjan
42:49,"I removed the hadoop-compat dependency, as maven couldn’t resolve the…",CASSANDRA-5201,"I removed the hadoop-compat dependency, as maven couldn’t resolve the  dependencies, reverted to the old version.",,Architectural design configuration,9:1220 - 9:1332,1,arjan
42:50,This won’t stop our input/output formats from  being compatible with p…,CASSANDRA-5201,"This won’t stop our input/output formats from  being compatible with past and future releases.
",,Architectural solution benefits and drawbacks,9:1334 - 9:1429,1,arjan
43:5,Replace CustomHsHaServer with better optimized solution based on LMAX…,CASSANDRA-5582,Replace CustomHsHaServer with better optimized solution based on LMAX Disruptor,,Technology solution,3:52 - 3:130,1,arjan
43:1,I have been working on https://github.com/xedin/disruptor_thrift_serve…,CASSANDRA-5582,I have been working on https://github.com/xedin/disruptor_thrift_server,,Technology solution,3:150 - 3:220,1,arjan
43:2,consider it as sta-  ble and performant enough for integration with Ca…,CASSANDRA-5582,"consider it as sta-  ble and performant enough for integration with Cassandra.
",,Architectural solution benefits and drawbacks,3:226 - 3:305,1,arjan
43:3,Proposed replacement can work in both on/of Heap modes (depending if J…,CASSANDRA-5582,"Proposed replacement can work in both on/of Heap modes (depending if JNA is available) and  doesn’t blindly reallocate things,",,Technology solution,3:306 - 3:431,1,arjan
43:4,"which allows to resolve CASSANDRA-4265 as ""Won’t Fix"".",CASSANDRA-5582,"which allows to resolve CASSANDRA-4265 as ""Won’t Fix"".
",,Architectural solution benefits and drawbacks,3:433 - 3:488,1,arjan
43:27,vijay2win@yahoo.com,CASSANDRA-5582,vijay2win@yahoo.com,,Comment,3:828 - 3:846,1,arjan
43:6,I should say this patch is Awesome!,CASSANDRA-5582,"I should say this patch is Awesome!
",,Architectural solution benefits and drawbacks,3:868 - 3:904,1,arjan
43:7,"Overall i saw ""> 30%"" improvement at-least for most cases. The tests w…",CASSANDRA-5582,"Overall i saw ""> 30%"" improvement at-least for most cases. The tests where done with  32 Core Intel 128GB and SSD Drives",,Architectural tactics,3:905 - 3:1024,1,arjan
43:8,But i have to say it exposes other issues in the Storage Proxy layer..…,CASSANDRA-5582,"But i have to say it exposes other issues in the Storage Proxy layer...For example i was  noticing write failing silently without hints been stored etc, I did some digging and it was  not due to this patch though.
",,Run-time quality issues,4:12 - 4:226,1,arjan
43:28,jbellis,CASSANDRA-5582,jbellis,,Comment,4:230 - 4:236,1,arjan
43:9,what are your thoughts on integrating disruptor at the StorageProxy  a…,CASSANDRA-5582,what are your thoughts on integrating disruptor at the StorageProxy  and MessagingService layer as well? https://issues.apache.org/jira/browse/CASSANDRA-  4718?focusedCommentId=13629447&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-  tabpanel#comment-13629447,,Architectural design configuration,4:249 - 4:522,1,arjan
43:29,tjake,CASSANDRA-5582,tjake,,Comment,4:528 - 4:532,1,arjan
43:10,I tried this and was surprised to see the trunk hsha was faster than t…,CASSANDRA-5582," I tried this and was surprised to see the trunk hsha was faster than this patch...
",,Architectural solution benefits and drawbacks,4:534 - 4:618,1,arjan
43:30,xedin,CASSANDRA-5582,xedin,,Comment,7:607 - 7:611,1,arjan
43:11,TTreadedSelectorServer could be better in dispatching new connections…,CASSANDRA-5582, TTreadedSelectorServer could be better in dispatching new connections comparing  to standard HsHa,,Architectural solution benefits and drawbacks,7:613 - 7:710,1,arjan
43:12,but not handling r/w as it has a lot of synchronization which TDistrup…,CASSANDRA-5582,"but not handling r/w as it has a lot of synchronization which TDistruptor  one doesn’t, that’s why it shows better latency/throughput results. ",,Architectural solution benefits and drawbacks,7:712 - 7:854,1,arjan
43:31,aleksey,CASSANDRA-5582,aleksey,,Comment,7:1202 - 7:1208,1,arjan
43:13,"Still sure it (disruptor-bases server) is gonna be faster,",CASSANDRA-5582,"Still sure it (disruptor-bases server) is gonna be faster,",,Architectural tactics,7:1329 - 7:1386,1,arjan
43:32,xedin,CASSANDRA-5582,xedin,,Comment,7:1496 - 7:1500,1,arjan
43:14,"That’s the idea about destiny of my server, I wasn’t sure that Thrift…",CASSANDRA-5582,"That’s the idea about destiny of my server, I wasn’t sure that Thrift will  accept it with that dependency right away so I made it a separate project.
",,Architectural design configuration,7:1512 - 7:1663,1,arjan
43:15,The only improvement I see (ques-  tionable under considerable load) i…,CASSANDRA-5582,"The only improvement I see (ques-  tionable under considerable load) is that server would be able to ""accept"" connections faster  but ""dispatch"" part (when channel is actually registered with selector) still adds fair amount  of contention.",,Architectural solution benefits and drawbacks,7:1933 - 7:2172,1,arjan
43:33,xedin,CASSANDRA-5582,xedin,,Comment,7:2324 - 7:2328,1,arjan
43:16,modifed my patch to use custom ExecutorService,CASSANDRA-5582,modifed my patch to use custom ExecutorService,,Architectural design configuration,7:2331 - 7:2376,1,arjan
43:17,which is faster then just fxed side  one.,CASSANDRA-5582,which is faster then just fxed side  one.,,Architectural tactics,7:2378 - 7:2418,1,arjan
43:34,jbellis,CASSANDRA-5582,jbellis,,Comment,7:2827 - 7:2833,1,arjan
43:19,My understanding was that Disruptor really wants to manage the whole l…,CASSANDRA-5582," My understanding was that Disruptor really wants to manage the whole lifecycle,  e.g. Thrift -> SP -> MS in one Disruptor.",,Architectural design configuration,7:2835 - 7:2957,1,arjan
43:35,vijay2win@yahoo.com,CASSANDRA-5582,vijay2win@yahoo.com,,Comment,8:5 - 8:23,1,arjan
43:20,"I think that will happen after we commit CASSANDRA-5239, Since we can…",CASSANDRA-5582,"I think that will happen after we commit CASSANDRA-5239, Since we can have a Listen-  ableFuture which will change the intrest in thrift/netty etc.
",,Architectural design configuration,8:150 - 8:298,1,arjan
43:18,"What i noticed is that, Disruptor in Stages will be a bad idea since i…",CASSANDRA-5582,"What i noticed is that, Disruptor in Stages will be a bad idea since it spins through the  Bufers and takes a lot of CPU cycles without any big advantage",,Architectural solution benefits and drawbacks,8:299 - 8:451,1,arjan
43:36,xedin,CASSANDRA-5582,xedin,,Comment,8:575 - 8:579,1,arjan
43:21,here is the patch to fx the problem with current trunk implemen-  tati…,CASSANDRA-5582," here is the patch to fx the problem with current trunk implemen-  tation of HsHa server, it actually makes use of invoker queue. ",,Architectural design configuration,8:599 - 8:728,1,arjan
43:22,With that patch stress gives  ~22K reads on my machine where proposed…,CASSANDRA-5582,"With that patch stress gives  ~22K reads on my machine where proposed disruptor based solution gives ~42K.
",,Architectural solution benefits and drawbacks,8:729 - 8:836,1,arjan
43:37,tjake,CASSANDRA-5582,tjake,,Comment,9:486 - 9:490,1,arjan
43:23,this looks really good,CASSANDRA-5582, this looks really good,,Architectural solution benefits and drawbacks,9:492 - 9:514,1,arjan
43:38,xedin,CASSANDRA-5582,xedin,,Comment,9:834 - 9:838,1,arjan
43:24,"so the numbers I have posted are produced using of-heap frame  bufers,…",CASSANDRA-5582,"so the numbers I have posted are produced using of-heap frame  bufers, they actually give around 2,000-3,000 more operations per second and stabler p999  latencies.
",,Architectural tactics,9:856 - 9:1021,1,arjan
43:39,xedin,CASSANDRA-5582,xedin,,Comment,9:1556 - 9:1560,1,arjan
43:25,"disruptor itself is publicly hosted but I was wonder, can’t we just in…",CASSANDRA-5582,"disruptor itself is publicly hosted but I was wonder, can’t we just include my thing  into lib/ the same way as jamm?
",,Architectural design configuration,9:1563 - 9:1681,1,arjan
43:40,aleksey,CASSANDRA-5582,aleksey,,Comment,9:2064 - 9:2070,1,arjan
43:26,+1,CASSANDRA-5582,+1,,Architectural solution benefits and drawbacks,9:2073 - 9:2074,1,arjan
44:5,Convert pig smoke tests into real PigUnit tests,CASSANDRA-5695,Convert pig smoke tests into real PigUnit tests,,Technology solution,3:52 - 3:98,1,arjan
44:2,"Currently, we have some ghetto pig tests in examples/pig/test, but the…",CASSANDRA-5695,"Currently, we have some ghetto pig tests in examples/pig/test, but there’s currently no way to  continuously integrate these since a human needs to check that the output isn’t wrong, not just  that the tests ran successfully",,Technical debt,3:118 - 3:341,1,arjan
44:4,"We’ve had garbled output problems in the past, so it would be  nice to…",CASSANDRA-5695,"We’ve had garbled output problems in the past, so it would be  nice to formalize our tests to catch this. ",,Motivation of design issue,3:344 - 3:449,1,arjan
44:3,PigUnit appears to be a good choice for this.,CASSANDRA-5695,"PigUnit appears to be a good choice for this.
",,Technology solution,3:450 - 3:496,1,arjan
45:1,Upgrade metrics-core library,CASSANDRA-5838,Upgrade metrics-core library,,Technology solution,3:52 - 3:79,1,arjan
45:2,Cassandra is now using [metrics|https://github.com/codahale/metrics] a…,CASSANDRA-5838,Cassandra is now using [metrics|https://github.com/codahale/metrics] and is depending on metrics-  core 2.0.3,,Existing system architecture description,3:99 - 3:207,1,arjan
45:3,It would be great,CASSANDRA-5838,It would be great,,Architectural solution benefits and drawbacks,3:209 - 3:225,1,arjan
45:4,to make the jump to the latest version of the library which is 3.x - […,CASSANDRA-5838," to make the jump to the latest version of the library which is 3.x - [latest  is 3.0.1|http://search.maven.org/#search|gav|1|g%3A%22com.codahale.metrics%22%20AND%20a%3A%22metrics-  core%22].
",,Technology solution,3:226 - 3:418,1,arjan
45:28,jbellis,CASSANDRA-5838,jbellis,,Comment,3:574 - 3:580,1,arjan
45:5,Not opposed in principle,CASSANDRA-5838,Not opposed in principle,,Architectural solution benefits and drawbacks,3:583 - 3:606,1,arjan
45:27,eugenparaschiv,CASSANDRA-5838,eugenparaschiv,,Comment,3:637 - 3:650,1,arjan
45:6,Lots of upgrades in both the library itself as well as its dependencie…,CASSANDRA-5838,"Lots of upgrades in both the library itself as well as its dependencies  ([metrics full release notes|http://metrics.codahale.com/about/release-notes/]). Besides all  of that, one of the main advantages with the latest Cassandra using the latest Metrics - is  that basically it makes it easier to have Cassandra as a dependency while also having Metrics  3 on the classpath (otherwise both Metrics 2 and 3 will be on the classpath - which is not  ideal)",,Architectural solution benefits and drawbacks,3:653 - 3:1105,1,arjan
45:26,dbrosius,CASSANDRA-5838,dbrosius,,Comment,4:4 - 4:11,1,arjan
45:7,"Major changes are  1) MetricsRegistry is no longer static, so i added…",CASSANDRA-5838,"Major changes are  1) MetricsRegistry is no longer static, so i added static c* class that holds the instance  2) No more MetricName class, just strings... adjusted accordingly  3) simple api renamings value() now getValue() etc.
4) Removal of the clear() method from Histogram and ExponentialDecayingSample now  ExponentialDecayingReservoir... Not sure how to handle this. In the one place that mat-  tered, i just unregistered, and then reregistered new EDRs. The other case was from a test,  that seems to pass even w/o the clears, so removed.
",,Technology solution,4:14 - 4:562,1,arjan
45:25,jbellis,CASSANDRA-5838,jbellis,,Comment,4:1274 - 4:1280,1,arjan
45:8,+1,CASSANDRA-5838,+1,,Architectural solution benefits and drawbacks,4:1283 - 4:1284,1,arjan
45:24,yukim,CASSANDRA-5838,yukim,,Comment,4:1394 - 4:1398,1,arjan
45:9,Looks like metrics-core 3.0.x no longer exports metrics to JMX by de-…,CASSANDRA-5838, Looks like metrics-core 3.0.x no longer exports metrics to JMX by de-  fault. ,,Technology solution,4:1412 - 4:1490,1,arjan
45:10,I think you have to [register JMXReporter explicitly|http://metrics.co…,CASSANDRA-5838,"I think you have to [register JMXReporter explicitly|http://metrics.codahale.com/manual/core/#man-  core-reporters-jmx].
",,"Architectural design configuration
Assumptions",4:1491 - 4:1612,2,arjan
45:23,cburroughs,CASSANDRA-5838,cburroughs,,Comment,5:66 - 5:75,1,arjan
45:11,"Not sure if this ticket is the right place, but could we upgrade to th…",CASSANDRA-5838," Not sure if this ticket is the right place, but could we upgrade to the latest  metrics v2 in cassandra 2.0.x?
",,Technology solution,5:77 - 5:189,1,arjan
45:22,xorlev,CASSANDRA-5838,xorlev,,Comment,5:239 - 5:244,1,arjan
45:12,It would be advantageous to wait for Metrics 3.1. https://groups.googl…,CASSANDRA-5838,"It would be advantageous to wait for Metrics 3.1. https://groups.google.com/forum/#!topic/metrics-  user/Mr3H7rXOvtA According to Coda, 3.1 will include the ability to provide a custom  naming strategy to the JMXReporter. Otherwise every monitoring tool built around JMX  will break.
",,Architectural solution benefits and drawbacks,5:247 - 5:531,1,arjan
45:13,Metrics 3.1.,CASSANDRA-5838,Metrics 3.1.,,Technology solution,5:284 - 5:295,1,arjan
45:21,nickmbailey,CASSANDRA-5838,nickmbailey,,Comment,5:536 - 5:546,1,arjan
45:14,So this changes moves all the mbeans into a single domain due to how 3…,CASSANDRA-5838,"So this changes moves all the mbeans into a single domain due to how 3.0  does things (see attached picture).
",,Architectural design configuration,5:549 - 5:659,1,arjan
45:15,This will break all existing clients for the new metrics mbeans (did w…,CASSANDRA-5838,This will break all existing clients for the new metrics mbeans (did we update nodetool and  such or are they using the old mbeans?). I’m not really a huge fan of this change for that  reason.,,Architectural solution benefits and drawbacks,5:660 - 5:851,1,arjan
45:16,From discussion on IRC it looks like we’d need to have multiple jmx re…,CASSANDRA-5838,From discussion on IRC it looks like we’d need to have multiple jmx reporters defned  to match the old behavior.,,Architectural design configuration,5:853 - 5:964,1,arjan
45:17,Or there is some speculation that this might be fxed/easier in  metric…,CASSANDRA-5838," Or there is some speculation that this might be fxed/easier in  metrics 3.1.
",,Architectural solution benefits and drawbacks,5:965 - 5:1043,1,arjan
45:18,I’d be in favor of reverting this until we can fgure out how to match…,CASSANDRA-5838,"I’d be in favor of reverting this until we can fgure out how to match the old format or  confrm the current behavior (breaking) is absolutely what we want going forward.
",,Architectural solution benefits and drawbacks,5:1044 - 5:1214,1,arjan
45:20,cburroughs,CASSANDRA-5838,cburroughs,,Comment,5:1219 - 5:1228,1,arjan
45:19,"CASSANDRA-5947, java 7 VirtualMachineMetrics, and various other things…",CASSANDRA-5838,"CASSANDRA-5947, java 7 VirtualMachineMetrics, and various other things https://github.com/codahale/metrics/b  notes.rst",,Architectural solution benefits and drawbacks,5:1265 - 5:1383,1,arjan
46:1,Warn user when OS settings are poor,CASSANDRA-7838,Warn user when OS settings are poor,,User requirement,3:52 - 3:86,1,arjan
46:2,integrate sigar,CASSANDRA-7838,integrate sigar,,Technology solution,3:90 - 3:104,1,arjan
46:3,The Sigar project let’s you probe os/cpu/flesystems across the major p…,CASSANDRA-7838,"The Sigar project let’s you probe os/cpu/flesystems across the major platforms.
https://github.com/hyperic/sigar  It would be nice on start-up to use this to warn users if they are running with settings that  will make them sad, like Network drive or EBS on Ec2.
",,Technology solution,3:124 - 3:388,1,arjan
46:29,carlyeks,CASSANDRA-7838,carlyeks,,Comment,4:715 - 4:722,1,arjan
46:4,It looks like the SIGAR library isn’t rich enough to provide whether o…,CASSANDRA-7838," It looks like the SIGAR library isn’t rich enough to provide whether or not the  storage is some SAN or EBS. SIGAR only provides the storage type based on how the disk is  formatted; an EBS or SAN volume will be formatted as a normal drive would be, so we will  incorrectly label it as LOCAL_DISK. It will only catch cases such as an NFS or CIFS mount.
",,Architectural solution benefits and drawbacks,4:724 - 4:1078,1,arjan
46:5,"I don’t think  we should include this for the network check, though.",CASSANDRA-7838," I don’t think  we should include this for the network check, though.
",,"Architectural solution benefits and drawbacks
Assumptions",4:1150 - 4:1220,2,arjan
46:28,kumaramit01,CASSANDRA-7838,kumaramit01,,Comment,4:1224 - 4:1234,1,arjan
46:6,You are right -it checks the fle system type to determine if the fle s…,CASSANDRA-7838,"You are right -it checks the fle system type to determine if the fle system is networked or  not, so it will not fnd SAN or EBS, the log info is of limited value, but it will emit a warning  about NFS/SMB etc. -that does seem to provide some value but not address this ticket’s  intention.
",,Architectural solution benefits and drawbacks,4:1359 - 4:1649,1,arjan
46:7,We had talked about other things that could be done with SIGAR -like g…,CASSANDRA-7838,"We had talked about other things that could be done with SIGAR -like getting the load  information and emitting a warning when the system load is high, keeping some history  about read and write queues of the disk and warn when things are going south.
",,Technology solution,4:1650 - 4:1902,1,arjan
46:27,tjake,CASSANDRA-7838,tjake,,Comment,4:1983 - 4:1987,1,arjan
46:9,"Let’s come up with another metrics that is a good ""Hey you will have p…",CASSANDRA-7838,"Let’s come up with another metrics that is a good ""Hey you will have performance  problems"" check  Ones I can think of.
* Swap enabled.
* High disk latency  * Check Ulimits are sensible (sigar has a ulimit check I think)",,Architectural design configuration,4:1990 - 4:2211,1,arjan
46:26,kumaramit01,CASSANDRA-7838,kumaramit01,,Comment,4:2217 - 4:2227,1,arjan
46:10,* High disk latency -Sigar cannot determine disk io queue lengths on O…,CASSANDRA-7838,"* High disk latency -Sigar cannot determine disk io queue lengths on OSX or on fle systems  mounted via NFS on linux boxes it returns -1, ditto for disk reads, writes.
",,Architectural solution benefits and drawbacks,5:1 - 5:169,1,arjan
46:11,* Swap enabled -we can determine that with accuracy on Unix/Linux and…,CASSANDRA-7838,* Swap enabled -we can determine that with accuracy on Unix/Linux and OSX,,Architectural solution benefits and drawbacks,5:170 - 5:242,1,arjan
46:12,"* Ulimit -open fles/max user process, those I could get on linux and O…",CASSANDRA-7838,"* Ulimit -open fles/max user process, those I could get on linux and OSX",,Architectural solution benefits and drawbacks,5:245 - 5:316,1,arjan
46:25,tjake,CASSANDRA-7838,tjake,,Comment,5:518 - 5:522,1,arjan
46:13,I think the ulimit stuf is a good thing  to start with,CASSANDRA-7838,I think the ulimit stuf is a good thing  to start with,,"Architectural solution benefits and drawbacks
Assumptions",5:568 - 5:621,2,arjan
46:24,JoshuaMcKenzie,CASSANDRA-7838,JoshuaMcKenzie,,Comment,5:728 - 5:741,1,arjan
46:14,Something appears to be missing... ;) A quick peek at their javadocs l…,CASSANDRA-7838,"Something appears to be missing... ;) A quick peek at their javadocs looks like Win32  has support for quite a few of the above so I don’t expect this to be a *big* issue, but worth  keeping in mind.
",,Architectural solution benefits and drawbacks,5:878 - 5:1078,1,arjan
46:23,kumaramit01,CASSANDRA-7838,kumaramit01,,Comment,5:2076 - 5:2086,1,arjan
46:15,"I am a little hesitant in saying OK in the happy path scenario, becaus…",CASSANDRA-7838,"I am a little hesitant in saying OK in the happy path scenario, because we have not checked  everything that could lead to bad performance of Cassandra due to sysctl and hardware  issues and saying OK might give a false sense of security.
",,Architectural solution benefits and drawbacks,6:2 - 6:241,1,arjan
46:22,JoshuaMcKenzie,CASSANDRA-7838,JoshuaMcKenzie,,Comment,6:388 - 6:401,1,arjan
46:16,"UNK, and it would probably be helpful to log which queries failed",CASSANDRA-7838,"UNK, and it would probably be helpful to log which queries failed",,Architectural design configuration,6:1390 - 6:1454,1,arjan
46:17,so admins can go  in and resolve that and get the extra information. A…,CASSANDRA-7838,"so admins can go  in and resolve that and get the extra information. A potential downside here is that it’s a  little aggressive to report that we’re degraded just because we got a failure to query, but if  we’re committed to adding Sigar to the code-base I think we should be committed to these  queries working. :)",,Architectural solution benefits and drawbacks,6:1456 - 6:1771,1,arjan
46:18,LGTM on the Windows side from here.,CASSANDRA-7838,"LGTM on the Windows side from here.
",,Architectural solution benefits and drawbacks,6:1774 - 6:1810,1,arjan
46:21,kumaramit01,CASSANDRA-7838,kumaramit01,,Comment,6:1815 - 6:1825,1,arjan
46:19,so I had UNK  earlier to indicate if we just couldn’t determine if the…,CASSANDRA-7838,"so I had UNK  earlier to indicate if we just couldn’t determine if the the result is from SIGAR not being  supported on a platform, results that we can’t make sense of ",,Architectural design configuration,6:1884 - 6:2051,1,arjan
46:20,however with the reduced  number of checks to a few (removing disk lat…,CASSANDRA-7838,"however with the reduced  number of checks to a few (removing disk latency check/ remote disk test), it became less  useful and added to the cruft -so thanks for removing those.
",,Architectural solution benefits and drawbacks,6:2053 - 6:2231,1,arjan
47:1,Use ecj [was: javac] instead of javassist,CASSANDRA-8241,Use ecj [was: javac] instead of javassist,,Technology solution,3:52 - 3:92,1,arjan
47:2,Using JDK’s built-in Java-Compiler API has some advantages over javass…,CASSANDRA-8241,"Using JDK’s built-in Java-Compiler API has some advantages over javassist.
Although compilation feels a bit slower, Java compiler API has some advantages:  * boxing + unboxing works  * generics work  * compiler error messages are better (or at least known) and have line/column numbers",,Architectural solution benefits and drawbacks,3:112 - 3:397,1,arjan
47:3,The implementation does not use any temp fles. Everything’s in memory.,CASSANDRA-8241,"The implementation does not use any temp fles. Everything’s in memory.
",,Architectural design configuration,3:400 - 3:470,1,arjan
47:75,jbellis,CASSANDRA-8241,jbellis,,Comment,3:630 - 3:636,1,arjan
47:4,"This may still be a good idea, but doesn’t this mean users need to dep…",CASSANDRA-8241,"This may still be a good idea, but doesn’t this mean users need to deploy a JDK  (which has stricter license requirements) and not just a JRE?
",,Architectural solution benefits and drawbacks,3:639 - 3:782,1,arjan
47:74,snazy,CASSANDRA-8241,snazy,,Comment,3:786 - 3:790,1,arjan
47:5,Yes - tools.jar is required so the stricter license requirements apply…,CASSANDRA-8241,"Yes - tools.jar is required so the stricter license requirements apply. Not sure what these  stricter license requirements exactly mean - my knowledge is about that is quite old - as far  2
as I remember the stricter license forbids redistribution of a bundled JDK.
JDK requirement itself seems similar to what JEE containers require e.g. for JSPs",,Architectural solution benefits and drawbacks,3:825 - 4:158,1,arjan
47:6,Tomcat  uses the Eclipse compiler - which could be another option.,CASSANDRA-8241,"Tomcat  uses the Eclipse compiler - which could be another option.
",,Other system architectural solutions,4:161 - 4:228,1,arjan
47:7,I’m pretty much in favor of using either tools.jar or Eclipse compiler…,CASSANDRA-8241,"I’m pretty much in favor of using either tools.jar or Eclipse compiler to support known Java  language features which are missing in javassist.
",,Architectural solution benefits and drawbacks,4:229 - 4:373,1,arjan
47:73,snazy,CASSANDRA-8241,snazy,,Comment,4:451 - 4:455,1,arjan
47:8,Eclipse compiler is pretty fast for our use case,CASSANDRA-8241,Eclipse compiler is pretty fast for our use case,,Architectural tactics,4:663 - 4:710,1,arjan
47:9,Code is basically copied from Tomcat and  adopted for UDF needs and so…,CASSANDRA-8241,"Code is basically copied from Tomcat and  adopted for UDF needs and some code re-formatting.
",,Architectural design configuration,4:713 - 4:806,1,arjan
47:72,dbrosius,CASSANDRA-8241,dbrosius,,Comment,4:908 - 4:915,1,arjan
47:11,"TBH, not a big fan of either solution, each is nasty in its own right.…",CASSANDRA-8241,"TBH, not a big fan of either solution, each is nasty in its own right. I agree with  Robert, using Java Assist means you will always be in a state of catch up language wise. But  relying on eclipse means dragging an elephant of confguration test matrix problems around  with you forever.
",,Trade-offs,4:918 - 4:1206,1,arjan
47:12,My experience with user-provided source code level integration is just…,CASSANDRA-8241,"My experience with user-provided source code level integration is just a painful painful  thing. I’m not sure it’s worth it.
",,Architectural solution benefits and drawbacks,4:1207 - 4:1332,1,arjan
47:13,I’m also not a big fan of building prototype java code up in StringBui…,CASSANDRA-8241,I’m also not a big fan of building prototype java code up in StringBuilders,,Architectural solution benefits and drawbacks,4:1333 - 4:1407,1,arjan
47:14,Can we exter-  nalize the prototype into a frst class fle that get’s g…,CASSANDRA-8241,"Can we exter-  nalize the prototype into a frst class fle that get’s getResourceAsStream’ed in and modifed  thru markers of some sort?
",,Architectural design configuration,4:1410 - 4:1545,1,arjan
47:71,snazy,CASSANDRA-8241,snazy,,Comment,4:1549 - 4:1553,1,arjan
47:15,ecj.jar is just the java compiler - there are no more dependencies req…,CASSANDRA-8241,ecj.jar is just the java compiler - there are no more dependencies required.,,Architectural design configuration,4:1556 - 4:1631,1,arjan
47:16,I think  the Eclipse compiler is fne,CASSANDRA-8241,I think  the Eclipse compiler is fne,,"Architectural solution benefits and drawbacks
Assumptions",4:1633 - 4:1668,2,arjan
47:17,used by other projects (e.g. Tomcat).,CASSANDRA-8241,"used by other projects (e.g. Tomcat).
",,Other system architectural solutions,4:1674 - 4:1712,1,arjan
47:18,OTOH we could also support both javac + ecj since ecj supports the Jav…,CASSANDRA-8241,OTOH we could also support both javac + ecj since ecj supports the Java Compiler API -,,Architectural design configuration,4:1713 - 4:1798,1,arjan
47:19,but that would add complexity in dev + ops. So I’m not sold on that.,CASSANDRA-8241,"but that would add complexity in dev + ops. So I’m not sold on that.
",,Architectural solution benefits and drawbacks,4:1801 - 4:1870,1,arjan
47:21,Not sure whether pulling in some source template makes code generation…,CASSANDRA-8241,Not sure whether pulling in some source template makes code generation easier to read-  /maintain since we have several replacements that use variable argument lists.,,"Architectural solution benefits and drawbacks
Assumptions",4:1871 - 4:2036,2,arjan
47:20,pulling in some source template,CASSANDRA-8241,pulling in some source template,,Architectural design configuration,4:1888 - 4:1918,1,arjan
47:22,Sure - allowing user-provided source code integration is painful.,CASSANDRA-8241,Sure - allowing user-provided source code integration is painful.,,Architectural solution benefits and drawbacks,4:2056 - 4:2120,1,arjan
47:23,We can add some sup-  port to help users not to accidentally add bad c…,CASSANDRA-8241,"We can add some sup-  port to help users not to accidentally add bad code. Just thought about some library/tool  that users can use (just created CASSANDRA-8289 for that).
",,Architectural design configuration,4:2122 - 4:2294,1,arjan
47:70,blerer,CASSANDRA-8241,blerer,,Comment,4:2298 - 4:2303,1,arjan
47:24,My  understanding is that so far we only use code generation for UDF,CASSANDRA-8241,My  understanding is that so far we only use code generation for UDF,,Architectural design configuration,4:2377 - 4:2444,1,arjan
47:25,"If not, I think it would be nice to have something better that javassi…",CASSANDRA-8241,"If not, I think it would be nice to have something better that javassist, but it is only a nice  to have and we can stick with javassist for now. From a benefts/problems point of view it  looks as the best choice.
",,"Architectural solution benefits and drawbacks
Assumptions",4:2492 - 4:2706,2,arjan
47:69,snazy,CASSANDRA-8241,snazy,,Comment,4:2710 - 4:2714,1,arjan
47:26,IMO people are used to rely on Java language’s boxing and implicit cas…,CASSANDRA-8241,"IMO people are used to rely on Java language’s boxing and implicit casts and it would  cause (just) usability issues when these features are not there.
",,Architectural solution benefits and drawbacks,4:2743 - 4:2894,1,arjan
47:27,"For example the ""stupid"" {{sin}} function is easier to read with boxin…",CASSANDRA-8241,"For example the ""stupid"" {{sin}} function is easier to read with boxing.
1 return input != null ? Math.sin(input) : null;  1 return input != null ? Double.valueOf(Math.sin(input.doubleValue())) : null;  Complexity increases with the number of arguments and when UDTs/tuples/collections are  possible.
In addition we could easily allow new Java 8 language features (e.g. lambdas and stream-  ing) within UDFs (currently restricted to Java 7) - could for example simplify source code  working on collections passed to UDFs.",,Architectural solution benefits and drawbacks,5:1 - 5:523,1,arjan
47:28,I could imagine to use user-provided code for triggers. But current tr…,CASSANDRA-8241,"I could imagine to use user-provided code for triggers. But current trigger implementa-  tion works at a ""lower level"" - so (I guess) that would be a re-implementation of triggers on  CQL3 level.
",,Architectural solution benefits and drawbacks,5:565 - 5:761,1,arjan
47:29,Maybe custom 2i providers could also use user-provided source code - b…,CASSANDRA-8241,"Maybe custom 2i providers could also use user-provided source code - but since these usually  require custom libs, it does not feel suitable.",,Architectural solution benefits and drawbacks,5:762 - 5:902,1,arjan
47:68,blerer,CASSANDRA-8241,blerer,,Comment,5:908 - 5:913,1,arjan
47:30,"It is a nice to have, but in my opinion it does make a big change. So…",CASSANDRA-8241," It is a nice to have, but in my opinion it does make a big change. So I would stick  with javassist for now and look at it in the future if some users are really pushing for it",,Architectural solution benefits and drawbacks,5:915 - 5:1091,1,arjan
47:67,slebresne,CASSANDRA-8241,slebresne,,Comment,5:1099 - 5:1107,1,arjan
47:31,"For what it’s worth, I do think the lack of auto-boxing will be a pain…",CASSANDRA-8241,"For what it’s worth, I do think the lack of auto-boxing will be a pain in the ass.
",,"Architectural solution benefits and drawbacks
Assumptions",5:1110 - 5:1193,2,arjan
47:66,snazy,CASSANDRA-8241,snazy,,Comment,5:1244 - 5:1248,1,arjan
47:32,Using Oracle’s {{JavaCompiler}} API implementation requires installati…,CASSANDRA-8241,"Using Oracle’s {{JavaCompiler}} API implementation requires installation of a JDK  (not a good option).
",,Architectural solution benefits and drawbacks,5:1251 - 5:1355,1,arjan
47:33,We can bundle the Eclipse thing (which btw also implements the {{JavaC…,CASSANDRA-8241,"We can bundle the Eclipse thing (which btw also implements the {{JavaCompiler}} API  beside its native API.
",,Architectural design configuration,5:1356 - 5:1464,1,arjan
47:34,preferably option 3),CASSANDRA-8241,preferably option 3),,Architectural solution benefits and drawbacks,5:1499 - 5:1518,1,arjan
47:35,stick with javassist (efectively resolving this ticket as ’later’),CASSANDRA-8241,stick with javassist (efectively resolving this ticket as ’later’),,Architectural design configuration,5:1524 - 5:1589,1,arjan
47:36,use ecj with its native API (stick with ecj),CASSANDRA-8241, use ecj with its native API (stick with ecj),,Technology solution,5:1593 - 5:1637,1,arjan
47:37,use ecj with {{JavaCompiler}} API (allows to use ecj and JDK),CASSANDRA-8241,use ecj with {{JavaCompiler}} API (allows to use ecj and JDK),,"Architectural design configuration
Technology solution",5:1642 - 5:1702,2,arjan
47:65,aleksey,CASSANDRA-8241,aleksey,,Comment,5:1709 - 5:1715,1,arjan
47:38,"Before going any further w/ Eclipse, make sure we can bundle it at all…",CASSANDRA-8241,"Before going any further w/ Eclipse, make sure we can bundle it at all, license-wise.
Eclipse Distribution License is ASF-compatible (see https://www.apache.org/legal/resolved.html#category-  a), but there is nothing there about Eclipse Public License. I’m not sure which one the Eclipse  thing is covered by, but if it’s not EDL, it might have to be vetted, though ultimately I expect  it to be compatible.
",,Architectural solution benefits and drawbacks,5:1718 - 5:2126,1,arjan
47:64,snazy,CASSANDRA-8241,snazy,,Comment,5:2132 - 5:2136,1,arjan
47:39,"Damn - yes, EPL is nod EDL. Probably EPL1.0 is not compatible with ASF…",CASSANDRA-8241,"Damn - yes, EPL is nod EDL.
Probably EPL1.0 is not compatible with ASF2.0",,Architectural solution benefits and drawbacks,5:2139 - 5:2212,1,arjan
47:63,snazy,CASSANDRA-8241,snazy,,Comment,6:5 - 6:9,1,arjan
47:40,Apache Tomcat uses ecj in its distribution,CASSANDRA-8241,Apache Tomcat uses ecj in its distribution,,Other system architectural solutions,6:96 - 6:137,1,arjan
47:41,TBH I probably don’t understand the english license text to all its ex…,CASSANDRA-8241,"TBH I probably don’t understand the english license text to all its extent. It *looks* to be  ok - but I’m not 100% sure.
",,"Architectural solution benefits and drawbacks
Assumptions",6:268 - 6:390,2,arjan
47:62,snazy,CASSANDRA-8241,snazy,,Comment,6:395 - 6:399,1,arjan
47:42,* optimized compilation speed (feels similar to javassist now),CASSANDRA-8241,* optimized compilation speed (feels similar to javassist now),,Architectural solution benefits and drawbacks,6:462 - 6:523,1,arjan
47:61,carlyeks,CASSANDRA-8241,carlyeks,,Comment,6:614 - 6:621,1,arjan
47:43,The ecj changes seems reasonable.,CASSANDRA-8241,"The ecj changes seems reasonable.
",,Architectural solution benefits and drawbacks,6:624 - 6:658,1,arjan
47:44,Can you explain why you didn’t do a templated code approach?,CASSANDRA-8241,Can you explain why you didn’t do a templated code approach? ,,Architectural design configuration,6:659 - 6:719,1,arjan
47:45,"The string building is  really hard to follow, and since this isn’t on…",CASSANDRA-8241,"The string building is  really hard to follow, and since this isn’t on a hot code path, the reduction in speed versus  the clarity it provides seems like a good tradeof.
",,Architectural solution benefits and drawbacks,6:720 - 6:890,1,arjan
47:60,snazy,CASSANDRA-8241,snazy,,Comment,6:895 - 6:899,1,arjan
47:46,The primary reason for not using a template approach was that I didn’t…,CASSANDRA-8241,The primary reason for not using a template approach was that I didn’t wanted to  pull in another dependency.,,Architectural solution benefits and drawbacks,6:902 - 6:1010,1,arjan
47:47,"Using a template approach also felt a bit over-engineered, since the m…",CASSANDRA-8241,"Using a template approach also felt a bit over-engineered, since the most dynamic part (one  function signature and the UDF input parameters and return types) might look even more  complicated.
",,Architectural solution benefits and drawbacks,6:1013 - 6:1207,1,arjan
47:48,What I could try is this:  * Extract the static part of the source to…,CASSANDRA-8241,What I could try is this:  * Extract the static part of the source to a resource fle  * Add placeholders for the complicated parts (argument + return value handling) to that  resource fle  * Replace these placeholders with a simple search&replace or regexp functionality,,Architectural design configuration,6:1208 - 6:1477,1,arjan
47:59,carlyeks,CASSANDRA-8241,carlyeks,,Comment,6:1491 - 6:1498,1,arjan
47:49,That sounds like a good plan;,CASSANDRA-8241,That sounds like a good plan;,,Architectural solution benefits and drawbacks,6:1501 - 6:1529,1,arjan
47:50,I think a simple search & replace makes sense for  this purpose (regex…,CASSANDRA-8241," I think a simple search & replace makes sense for  this purpose (regexp seems overkill).
",,"Architectural design configuration
Architectural solution benefits and drawbacks
Assumptions",6:1530 - 6:1619,3,arjan
47:58,snazy,CASSANDRA-8241,snazy,,Comment,6:1625 - 6:1629,1,arjan
47:51,"OK, will do.",CASSANDRA-8241,"OK, will do.",,Architectural solution benefits and drawbacks,6:1632 - 6:1643,1,arjan
47:57,jbellis,CASSANDRA-8241,jbellis,,Comment,6:1650 - 6:1656,1,arjan
47:52,Perhaps you could use String.format placeholders instead of regexp.,CASSANDRA-8241,"Perhaps you could use String.format placeholders instead of regexp.
",,Architectural component behavior and structure,6:1659 - 6:1727,1,arjan
47:56,carlyeks,CASSANDRA-8241,carlyeks,,Comment,6:1823 - 6:1830,1,arjan
47:53,That is a lot more readable.,CASSANDRA-8241,That is a lot more readable.,,Architectural solution benefits and drawbacks,6:1833 - 6:1860,1,arjan
47:54,We should update the ecj dependency to the latest  4.4.2,CASSANDRA-8241,We should update the ecj dependency to the latest  4.4.2,,Technology solution,6:1862 - 6:1917,1,arjan
47:55,otherwise +1.,CASSANDRA-8241,otherwise +1.,,Architectural solution benefits and drawbacks,6:1920 - 6:1932,1,arjan
48:1,Store types by their CQL names in schema tables instead of fully-quali…,CASSANDRA-10365,Store types by their CQL names in schema tables instead of fully-qualifed internal class names,,Architectural component behavior and structure,3:53 - 3:146,1,arjan
48:2,"Consider saving CQL types names for column, UDF/UDA arguments and retu…",CASSANDRA-10365,"Consider saving CQL types names for column, UDF/UDA arguments and return types, and UDT  components.
",,Architectural component behavior and structure,3:166 - 3:267,1,arjan
48:155,snazy,CASSANDRA-10365,snazy,,Comment,3:399 - 3:403,1,arjan
48:3,"I’d appreciate this very much as we ""convert"" a lot between CQL types…",CASSANDRA-10365," I’d appreciate this very much as we ""convert"" a lot between CQL types and _Ab-  stractType_.
IMO we have to do this anyway in the (more or less) near future - and this (as schema tables  are changed for 3.0) is a good chance to do it.
",,Architectural solution benefits and drawbacks,3:405 - 3:642,1,arjan
48:4,"As soon as AbstractType is no longer used in the schema tables, we are…",CASSANDRA-10365,"As soon as AbstractType is no longer used in the schema tables, we are free to ""streamline""  the code and remove AbstractType completely (as soon as Thrift is gone).
",,Architectural design configuration,3:643 - 3:809,1,arjan
48:154,aholmber,CASSANDRA-10365,aholmber,,Comment,3:813 - 3:820,1,arjan
48:5,I think this would be a welcome improvement to the metadata model,CASSANDRA-10365, I think this would be a welcome improvement to the metadata model,,"Architectural solution benefits and drawbacks
Assumptions",3:822 - 3:887,2,arjan
48:6,"Would  be interested in getting it in ahead of 3.0 GA, as it may warra…",CASSANDRA-10365,"Would  be interested in getting it in ahead of 3.0 GA, as it may warrant metadata API changes in  the driver release.
",,Architectural design configuration,3:890 - 3:1008,1,arjan
48:153,avalanche123,CASSANDRA-10365,avalanche123,,Comment,3:1012 - 3:1023,1,arjan
48:7,I think this is a very useful metadata to include.,CASSANDRA-10365, I think this is a very useful metadata to include.,,"Architectural solution benefits and drawbacks
Assumptions",3:1025 - 3:1075,2,arjan
48:8,My only suggestion is to  keep the old representation (fqcn) as well.,CASSANDRA-10365,My only suggestion is to  keep the old representation (fqcn) as well.,,Architectural design configuration,3:1077 - 3:1145,1,arjan
48:9,Currently drivers use this representation to detect  type information.…,CASSANDRA-10365,"Currently drivers use this representation to detect  type information. Parsing CQL-only representation might not be robust for the reasons men-  tioned in https://issues.apache.org/jira/browse/CASSANDRA-6717#comment-14791788.
",,Architectural solution benefits and drawbacks,3:1147 - 3:1373,1,arjan
48:152,snazy,CASSANDRA-10365,snazy,,Comment,4:4 - 4:8,1,arjan
48:10,"if I got your point, you suspect that UDT and UDF/UDA depen-  dencies…",CASSANDRA-10365," if I got your point, you suspect that UDT and UDF/UDA depen-  dencies might cause problems resolving dependencies (and thus resulting in unresolved/stale  types/UDAs), right?",,"Architectural component behavior and structure
Assumptions",4:26 - 4:200,2,arjan
48:11,IMO this (having unresolvable types/UDFs/UDAs) is not related to  whet…,CASSANDRA-10365," IMO this (having unresolvable types/UDFs/UDAs) is not related to  whether type information is stored using class names or CQL type signatures.
",,"Architectural component behavior and structure
Assumptions",4:201 - 4:345,2,arjan
48:12,"Generally, the situation is the same for the drivers and for C* intern…",CASSANDRA-10365,"Generally, the situation is the same for the drivers and for C* internally. AFAIR [~aholm-  ber]’s point was about parsing CQL types *back* to class-names (_AbstractType_).
",,Architectural component behavior and structure,4:346 - 4:519,1,arjan
48:13,"Of course, this change is not a trivial thing - neither for C* nor for…",CASSANDRA-10365,"Of course, this change is not a trivial thing - neither for C* nor for the drivers.
",,Architectural solution benefits and drawbacks,4:520 - 4:604,1,arjan
48:151,avalanche123,CASSANDRA-10365,avalanche123,,Comment,4:718 - 4:729,1,arjan
48:14,"Just to clarify, the issue is that when we see a ""org.apache.cassandra…",CASSANDRA-10365," Just to clarify, the issue is that when we see a ""org.apache.cassandra.db.marshal.UserType"",  it contains all information about its felds. Whereas when reading users.address, we will have  to lookup the defnition of that UDT separately, which may or may not be present in the  driver’s schema metadata. This might complicate the process of constructing schema meta-  data, especially considering that we still have to support previous versions of Cassandra that  used fqcn style types",,Technical debt,4:731 - 4:1215,1,arjan
48:15,I think it is doable,CASSANDRA-10365,I think it is doable,,"Architectural solution benefits and drawbacks
Assumptions",4:1218 - 4:1237,2,arjan
48:16,"if keeping both is possible,",CASSANDRA-10365,"if keeping both is possible,",,Architectural component behavior and structure,4:1244 - 4:1271,1,arjan
48:17,it’d make the driver  upgrades that much easier.,CASSANDRA-10365,"it’d make the driver  upgrades that much easier.
",,Architectural solution benefits and drawbacks,4:1273 - 4:1322,1,arjan
48:150,slebresne,CASSANDRA-10365,slebresne,,Comment,4:1326 - 4:1334,1,arjan
48:18,"I certainly understand that argument, but the fully-qualifed class nam…",CASSANDRA-10365,"I certainly understand that argument, but the fully-qualifed class names are also leaking  implementation details, namely which concrete classes are used server side. On the long  term, removing that leakage is probably a good idea and might allow some cleanups of type  classes at some point, and since we’ve redone the whole schema table, that sounds like a good  time to do so. So while I understand this is a bit more work for the drivers",,Architectural solution benefits and drawbacks,4:1446 - 4:1887,1,arjan
48:19,"mostly, you’d  have to either make sure you’re up-to-date on types bef…",CASSANDRA-10365,"mostly, you’d  have to either make sure you’re up-to-date on types before querying columns, or resolve the  types you don’t know about by querying afterwards",,Architectural component behavior and structure,4:1890 - 4:2046,1,arjan
48:20,I do feel that not conserving the fqcn  version in new tables is the r…,CASSANDRA-10365,"I do feel that not conserving the fqcn  version in new tables is the right thing to do.
",,Architectural solution benefits and drawbacks,4:2050 - 4:2138,1,arjan
48:149,aholmber,CASSANDRA-10365,aholmber,,Comment,4:2142 - 4:2149,1,arjan
48:21,"If the concern is about leaking implementation details,",CASSANDRA-10365,"If the concern is about leaking implementation details, ",,Architectural solution benefits and drawbacks,4:2152 - 4:2207,1,arjan
48:22,would it be reasonable  to instead store User Types as fully-specifed…,CASSANDRA-10365,would it be reasonable  to instead store User Types as fully-specifed abstract types as we do in the results encoding?,,"Architectural component behavior and structure
Assumptions",4:2208 - 4:2325,2,arjan
48:23,"I know this is not CQL, but it would avoid having to resolve inner typ…",CASSANDRA-10365,"I know this is not CQL, but it would avoid having to resolve inner types.
",,Architectural solution benefits and drawbacks,4:2414 - 4:2488,1,arjan
48:148,aleksey,CASSANDRA-10365,aleksey,,Comment,4:2493 - 4:2499,1,arjan
48:24,Repeated each time for each use of the UT everywhere?,CASSANDRA-10365,"Repeated each time for each use of the UT everywhere?
",,"Architectural component behavior and structure
Assumptions",4:2682 - 4:2736,2,arjan
48:147,aholmber,CASSANDRA-10365,aholmber,,Comment,4:2741 - 4:2748,1,arjan
48:25,"That was the thought, yes.",CASSANDRA-10365,"That was the thought, yes.",,Architectural component behavior and structure,4:2810 - 4:2835,1,arjan
48:26,From your response I gather that this suggestion does not  suit the in…,CASSANDRA-10365,"From your response I gather that this suggestion does not  suit the intent of the ticket. I’m not familiar with all the touch points, but I was hoping it  wouldn’t be much harder to maintain than the current cassandra type string, which fully  specifes the type. For example:  1 org.apache.cassandra.db.marshal.UserType(test,74797031,7630:org.apache.cassandra.db  .marshal.Int32Type,7631:org.apache.cassandra.db.marshal.UserType(test  ,74797030,7630:org.apache.cassandra.db.marshal.Int32Type,7631:org.apache.
cassandra.db.marshal.Int32Type))",,Architectural solution benefits and drawbacks,4:2837 - 4:3378,1,arjan
48:28,"I was wondering aloud if we could abstract that, but still have the ty…",CASSANDRA-10365,"I was wondering aloud if we could abstract that, but still have the type fully-specifed in place.
",,"Architectural component behavior and structure
Assumptions",5:1 - 5:99,2,arjan
48:27,The most obvious downside is that there would then be yet another stri…,CASSANDRA-10365,"The most obvious downside is that there would then be yet another string representation of  types.
",,Architectural solution benefits and drawbacks,5:100 - 5:199,1,arjan
48:146,aholmber,CASSANDRA-10365,aholmber,,Comment,5:204 - 5:211,1,arjan
48:29,"To be clear, I was thinking this would still be side-by-side with the…",CASSANDRA-10365,"To be clear, I was thinking this would still be side-by-side with the pure cql  representation",,Architectural design configuration,5:214 - 5:307,1,arjan
48:30,so hopefully the goal of server-side simplifcation could still be atta…,CASSANDRA-10365,so hopefully the goal of server-side simplifcation could still be attained. (?),,Architectural solution benefits and drawbacks,5:310 - 5:388,1,arjan
48:145,jorgebg,CASSANDRA-10365,jorgebg,,Comment,5:395 - 5:401,1,arjan
48:31,"I agree: if the goal is to hide implementation details,",CASSANDRA-10365,"I agree: if the goal is to hide implementation details,",,Architectural solution benefits and drawbacks,5:404 - 5:458,1,arjan
48:144,slebresne,CASSANDRA-10365,slebresne,,Comment,5:599 - 5:607,1,arjan
48:32,"It’s a goal, but avoiding too much unnecessary repeti-  tions is also…",CASSANDRA-10365,"It’s a goal, but avoiding too much unnecessary repeti-  tions is also a goal. Of course, not making too hard on client implementors is also a goal.
",,Architectural solution benefits and drawbacks,5:692 - 5:839,1,arjan
48:33,"That said, I’m still wondering what is so hard about resolving UDTs",CASSANDRA-10365,"That said, I’m still wondering what is so hard about resolving UDTs",,"Architectural solution benefits and drawbacks
Assumptions",5:841 - 5:907,2,arjan
48:34,"If you’re going to read  the columns defnition,",CASSANDRA-10365,"If you’re going to read  the columns defnition,",,Architectural component behavior and structure,5:910 - 5:956,1,arjan
48:35,what’s so hard about reading the type defnitions frst?,CASSANDRA-10365,what’s so hard about reading the type defnitions frst?,,"Architectural component behavior and structure
Architectural solution benefits and drawbacks",5:958 - 5:1011,2,arjan
48:36,I understand  it’s slightly less convenient but coming up with a new a…,CASSANDRA-10365, I understand  it’s slightly less convenient but coming up with a new ad hoc notation just for that isn’t  terribly clean imo. ,,Architectural solution benefits and drawbacks,5:1012 - 5:1138,1,arjan
48:143,aholmber,CASSANDRA-10365,aholmber,,Comment,5:1200 - 5:1207,1,arjan
48:37,No one said hiding implementation was the only goal. I was simply addr…,CASSANDRA-10365,"No one said hiding implementation was the only goal. I was simply addressing  that point.
",,Architectural solution benefits and drawbacks,5:1210 - 5:1300,1,arjan
48:38,"My concern is that this changes the meta-  data model, possibly requir…",CASSANDRA-10365,"My concern is that this changes the meta-  data model, possibly requiring a complete view of all UDTs for resolving types in other  artifacts. It *should* be fne,",,Architectural solution benefits and drawbacks,5:1465 - 5:1626,1,arjan
48:39,but I think it makes the metadata model more brittle from the  client…,CASSANDRA-10365,"but I think it makes the metadata model more brittle from the  client perspective, considering that async schema change event propagation has been less  than perfect.",,"Architectural solution benefits and drawbacks
Assumptions",5:1628 - 5:1793,2,arjan
48:40,This will require us to deal with the fact that type resolution could…,CASSANDRA-10365,"This will require us to deal with the fact that type resolution could fail.
",,Architectural solution benefits and drawbacks,5:1795 - 5:1871,1,arjan
48:41,I might feel less strongly about this than some,CASSANDRA-10365,I might feel less strongly about this than some,,Architectural solution benefits and drawbacks,5:1872 - 5:1918,1,arjan
48:42,I think we have a way to avoid pars-  ing these CQL strings at all,CASSANDRA-10365,I think we have a way to avoid pars-  ing these CQL strings at all,,"Architectural component behavior and structure
Assumptions",5:1923 - 5:1988,2,arjan
48:43,"However, I know some drivers refer directly to these types in  the mod…",CASSANDRA-10365,"However, I know some drivers refer directly to these types in  the model when binding UDTs for execution. Those will require parsing and resolving, or  and API change to avoid it.
",,Architectural solution benefits and drawbacks,5:1991 - 5:2171,1,arjan
48:142,aholmber,CASSANDRA-10365,aholmber,,Comment,5:2176 - 5:2183,1,arjan
48:44,To be clear: I’m still in favor of this update.,CASSANDRA-10365,"To be clear: I’m still in favor of this update.
",,Architectural solution benefits and drawbacks,5:2186 - 5:2234,1,arjan
48:45,I simply wanted to explore the possibility to smooth things for some d…,CASSANDRA-10365,I simply wanted to explore the possibility to smooth things for some drivers,,Architectural solution benefits and drawbacks,5:2235 - 5:2310,1,arjan
48:46,by exposing  self-contained types along side the cql types.,CASSANDRA-10365,"by exposing  self-contained types along side the cql types.
",,Architectural design configuration,5:2312 - 5:2372,1,arjan
48:47,"If that’s not tenable, there is still a solution, and we still have pl…",CASSANDRA-10365,"If that’s not tenable, there is still a solution, and we still have plenty of time to integrate.
",,Architectural solution benefits and drawbacks,5:2373 - 5:2470,1,arjan
48:141,omichallat,CASSANDRA-10365,omichallat,,Comment,5:2475 - 5:2484,1,arjan
48:48,"The Java driver already has this kind of indirection, for example for…",CASSANDRA-10365,"The Java driver already has this kind of indirection, for example for state and  fnal functions in an aggregate’s metadata.",,"Architectural solution benefits and drawbacks
Technology solution",5:2487 - 5:2609,2,arjan
48:49,It will make things more brittle in the face of  potential event propa…,CASSANDRA-10365,"It will make things more brittle in the face of  potential event propagation bugs, but if it’s an assumed choice I’m fne with it.
",,Architectural solution benefits and drawbacks,5:2611 - 5:2741,1,arjan
48:140,aleksey,CASSANDRA-10365,aleksey,,Comment,5:2746 - 5:2752,1,arjan
48:50,The second commit switches reading schema to pure CQL vs. using comman…,CASSANDRA-10365,"The second commit switches reading schema to pure CQL vs. using commands directly,  as before, and rewrites the way merging of before/after is performed. With UDTs (soon)  referring other UDTs potentially, we can no longer perform the dif on row-by-row basis, and  4
instead *have to* perform it on full snapshot vs. full snapshot basis.
",,Architectural component behavior and structure,5:2987 - 6:72,1,arjan
48:139,aleksey,CASSANDRA-10365,aleksey,,Comment,6:106 - 6:112,1,arjan
48:51,The third (in-progress) commit switches types in schema tables to thei…,CASSANDRA-10365,"The third (in-progress) commit switches types in schema tables to their canoni-  cal CQL representation. That includes changes to ’functions’ and ’aggregates’ tables to no  longer keep a surrogate {{signature}} column.
",,Architectural component behavior and structure,6:115 - 6:334,1,arjan
48:138,aholmber,CASSANDRA-10365,aholmber,,Comment,6:678 - 6:685,1,arjan
48:52,Curious if you have given any thought to storing {{system_schema.aggre…,CASSANDRA-10365,Curious if you have given any thought to storing {{system_schema.aggregates.initcond}}  as a text CQL literal. ,,Architectural component behavior and structure,6:702 - 6:812,1,arjan
48:53,This is the only thing I have come across in my integration thus far…,CASSANDRA-10365,"This is the only thing I have come across in my integration thus far  that requires the client to parse types in order to reproduce DDL.
",,Architectural solution benefits and drawbacks,6:813 - 6:950,1,arjan
48:137,aleksey,CASSANDRA-10365,aleksey,,Comment,6:1270 - 6:1276,1,arjan
48:54,[~snazy] was kind enough to volunteer to deal with that bit of the tic…,CASSANDRA-10365,"[~snazy] was kind enough to volunteer to deal with that bit of the ticket - will most likely  be done tomorrow, no objections.
",,Architectural solution benefits and drawbacks,6:1528 - 6:1655,1,arjan
48:136,snazy,CASSANDRA-10365,snazy,,Comment,6:1923 - 6:1927,1,arjan
48:55,Pushed a commit that adds initcond literal to schema table,CASSANDRA-10365,Pushed a commit that adds initcond literal to schema table,,Architectural component behavior and structure,6:1930 - 6:1987,1,arjan
48:56,Specifcally the patch does:  * add {{initcond_literal}} column to {{sy…,CASSANDRA-10365,"Specifcally the patch does:  * add {{initcond_literal}} column to {{system_schema.aggregates}}, which contains the  literal from the _CREATE AGGREGATE_ statement  * add {{initcond_version}} column to {{system_schema.aggregates}}, which contains the  native protocol version used to serialize {{initcond}} value (to be able to read it in future  versions)  * add {{""tuple""}} case to {{CqlTypeParser}} (to get {{AggregationTest}} working)",,Architectural component behavior and structure,6:2048 - 6:2483,1,arjan
48:57,Unfortunately we cannot reliably re-construct the CQL literal for a nu…,CASSANDRA-10365,"Unfortunately we cannot reliably re-construct the CQL literal for a number of reasons:  * there are no {{TypeSerializer}} implementations for tuples/UDTs  * AbstractTextSerializer.getString() returns the non-quoted string  * TupleType/UserType return BytesSerializer - this means that nested type combinations  cannot be reliably stringifed (would return a hex representation instead of CQL tuple/UDT  5
literals)",,Motivation of design issue,6:2486 - 7:9,1,arjan
48:59,WRT this ticket - although it is not nice to not have the INITCOND lit…,CASSANDRA-10365,WRT this ticket - although it is not nice to not have the INITCOND literal in a _de-  scribeAggregate_ method for pre-3.0 UDAs,,Architectural solution benefits and drawbacks,7:12 - 7:137,1,arjan
48:58,"I *think* it’s ok, since UDFs and UDAs were  experimental in 2.2 and i…",CASSANDRA-10365,"I *think* it’s ok, since UDFs and UDAs were  experimental in 2.2 and it only afects a _describeAggregate_ method, if the driver is not  ""smart enough"" to reconstruct the literal itself from {{initcond}}.",,"Architectural solution benefits and drawbacks
Assumptions",7:140 - 7:342,2,arjan
48:60,So - for pre-3.0 UDAs  such a _describeAggregate_ would not work perfe…,CASSANDRA-10365,"So - for pre-3.0 UDAs  such a _describeAggregate_ would not work perfectly and might return some hint if {{init-  cond_literal}} column is {{null}}.
",,Architectural solution benefits and drawbacks,7:344 - 7:492,1,arjan
48:61,I’m not sure whether it’s worth to fx the AbstractType/TypeSerializer…,CASSANDRA-10365,I’m not sure whether it’s worth to fx the AbstractType/TypeSerializer getString/toString  functionality (for 3.0) since it’s a ’bit’ more code to change.,,Trade-offs,7:494 - 7:646,1,arjan
48:135,snazy,CASSANDRA-10365,snazy,,Comment,7:653 - 7:657,1,arjan
48:62,{{system_schema.aggregates.initcond}} is of type {{text}} and contains…,CASSANDRA-10365,{{system_schema.aggregates.initcond}} is of type {{text}} and contains the CQL term,,Architectural component behavior and structure,7:711 - 7:793,1,arjan
48:134,slebresne,CASSANDRA-10365,slebresne,,Comment,7:1040 - 7:1048,1,arjan
48:63,I tend to agree that the reloading in {{Keyspace.initCf}} shouldn’t be…,CASSANDRA-10365, I tend to agree that the reloading in {{Keyspace.initCf}} shouldn’t be necessary,,Architectural solution benefits and drawbacks,7:1333 - 7:1413,1,arjan
48:64,so I  would maybe prefer removing it rather that leaving a TODO that w…,CASSANDRA-10365,"so I  would maybe prefer removing it rather that leaving a TODO that will surely stay there a  long time.
",,Architectural design configuration,7:1415 - 7:1521,1,arjan
48:65,"In {{SchemaKeyspace.fetchKeyspacesOnly}}, the initial query looks unec…",CASSANDRA-10365," In {{SchemaKeyspace.fetchKeyspacesOnly}}, the initial query looks unecessary. ",,Architectural solution benefits and drawbacks,7:1523 - 7:1601,1,arjan
48:66,But it’s only used after having applied mutation that we knew applied…,CASSANDRA-10365, But it’s only used after having applied mutation that we knew applied to the keyspace  passed to this method,,Architectural component behavior and structure,7:1706 - 7:1814,1,arjan
48:67,"so really, I’m not convinced it’s useful.",CASSANDRA-10365,"so really, I’m not convinced it’s useful.
",,Architectural solution benefits and drawbacks,7:1817 - 7:1859,1,arjan
48:68,Any reason for removing the {{testConversionsInverses}} in {{CFMetadat…,CASSANDRA-10365, Any reason for removing the {{testConversionsInverses}} in {{CFMetadataTest}},,Architectural component behavior and structure,7:2419 - 7:2496,1,arjan
48:69,rather  than converting it to the new code?,CASSANDRA-10365,rather  than converting it to the new code?,,Architectural component behavior and structure,7:2498 - 7:2540,1,arjan
48:70,"e. At the very least,  the test was testing the inversion of hrift con…",CASSANDRA-10365,"e. At the very least,  the test was testing the inversion of hrift conversions which isn’t impacted by the patch and  should be preserved.
",,Architectural solution benefits and drawbacks,7:2579 - 7:2718,1,arjan
48:133,aleksey,CASSANDRA-10365,aleksey,,Comment,8:1761 - 8:1767,1,arjan
48:71,it’s still huge savings all over - now that we don’t need to read the…,CASSANDRA-10365," it’s still huge savings all over - now that we don’t need to read the previous state at  all, and with reload changes, but I’ll have a look.",,Architectural tactics,9:99 - 9:239,1,arjan
48:132,adutra,CASSANDRA-10365,adutra,,Comment,9:1969 - 9:1974,1,arjan
48:72,Up-to-date Java driver version [here|https://github.com/datastax/java-…,CASSANDRA-10365,"Up-to-date Java driver version [here|https://github.com/datastax/java-driver/pull/467].
",,Technology solution,9:1977 - 9:2065,1,arjan
48:131,slebresne,CASSANDRA-10365,slebresne,,Comment,9:2070 - 9:2078,1,arjan
48:73,"I don’t dispute that,",CASSANDRA-10365,"I don’t dispute that,",,Architectural tactics,9:2217 - 9:2237,1,arjan
48:74,"and while I suspect we might be able to avoid it, it actually doesn’t…",CASSANDRA-10365," and while I suspect we might be able to avoid it, it actually doesn’t  8
really bother me. ",,Architectural solution benefits and drawbacks,9:2238 - 10:18,1,arjan
48:130,slebresne,CASSANDRA-10365,slebresne,,Comment,10:110 - 10:118,1,arjan
48:75,The use of {{Types.none()}} in {{CQLSSTableWriter}} striked me as weir…,CASSANDRA-10365,"The use of {{Types.none()}} in {{CQLSSTableWriter}} striked me as weird. That made  realize however that I wasn’t sure if UDT were actually usable with {{CQLSSTableWriter}}  at all, and how if they are. ",,Architectural solution benefits and drawbacks,10:1068 - 10:1270,1,arjan
48:129,aleksey,CASSANDRA-10365,aleksey,,Comment,10:1376 - 10:1382,1,arjan
48:76,"They weren’t usable before, and I do not really care to fx it in this…",CASSANDRA-10365,"They weren’t usable before, and I do not really care to fx it in this ticket, so I just re-  tained the current behavior.
",,Architectural solution benefits and drawbacks,10:1533 - 10:1655,1,arjan
48:128,snazy,CASSANDRA-10365,snazy,,Comment,10:1660 - 10:1664,1,arjan
48:77,Yea - that’s completely broken (until CASSANDRA-10617),CASSANDRA-10365,Yea - that’s completely broken (until CASSANDRA-10617),,Architectural solution benefits and drawbacks,10:1667 - 10:1720,1,arjan
48:127,aholmber,CASSANDRA-10365,aholmber,,Comment,11:731 - 11:738,1,arjan
48:78,"Presently we consider the Python driver ready for integration, pending…",CASSANDRA-10365,"Presently we consider the Python driver ready for integration, pending two known issues:  1.) UDT quoting as mentioned by Sylvain  2.) Aggregate initcond to be stored as CQL literal  Once these items are addressed we should have a clean integration test suite.
Latest is still on the driver branch [here|https://github.com/datastax/python-driver/tree/422].
",,"Architectural solution benefits and drawbacks
Technology solution",11:764 - 11:1122,2,arjan
48:126,slebresne,CASSANDRA-10365,slebresne,,Comment,11:1436 - 11:1444,1,arjan
48:82,Why expose/use {{CQLTypeParser.parseRaw()}} instead of {{CQLTypeParse.…,CASSANDRA-10365,"Why expose/use {{CQLTypeParser.parseRaw()}} instead of {{CQLTypeParse.parse()}}  (In {{SchemaKeyspace.fetchTypes}}).
",,Architectural component behavior and structure,11:1498 - 11:1615,1,arjan
48:79,"I’d prefer keeping the {{Types}} map immutable (even if that means ""du…",CASSANDRA-10365,"I’d prefer keeping the {{Types}} map immutable (even if that means ""duplicating"" the map  in the ctor, and even if that’s theoretically done multiple time in {{Constructor.build()}}:",,Architectural component behavior and structure,11:1618 - 11:1799,1,arjan
48:80,and even if that’s theoretically done multiple time in {{Constructor.b…,CASSANDRA-10365,"and even if that’s theoretically done multiple time in {{Constructor.build()}}:  I can’t imagine this being a performance problem in practice).
",,Architectural solution benefits and drawbacks,11:1721 - 11:1865,1,arjan
48:125,aleksey,CASSANDRA-10365,aleksey,,Comment,11:2274 - 11:2280,1,arjan
48:81,That’s the only place we use it/need it. To fetch types themselves and…,CASSANDRA-10365,"That’s the only place we use it/need it. To fetch types themselves and resolve dependencies.
",,Architectural solution benefits and drawbacks,11:2485 - 11:2578,1,arjan
48:124,aholmber,CASSANDRA-10365,aholmber,,Comment,12:663 - 12:670,1,arjan
48:83,"Python integration test is good with latest push, with the exception o…",CASSANDRA-10365,"Python integration test is good with latest push, with the exception of the  broken {{initcond}} assumption.
",,Architectural solution benefits and drawbacks,12:673 - 12:782,1,arjan
48:123,slebresne,CASSANDRA-10365,slebresne,,Comment,12:1069 - 12:1077,1,arjan
48:84,I’m actually not that convinced it’s worth pulling a new dependency fo…,CASSANDRA-10365,"I’m actually not that convinced it’s worth pulling a new dependency for dealing with nested  UDT. Granted the previous method was brute-force, but it was simple and most likely good  enough for all practical purposes. In fact, I wouldn’t be that surprised to see the previous  method be faster than the new one on most common cases where you have a vast majority of  top-level UDT and a few 2-3 level deep ones. And none of this is in a very critical path any-  way. Avoiding the new {{jgrapht}} dependecy would avoid the questioning of the next point.
",,Architectural solution benefits and drawbacks,12:1128 - 12:1681,1,arjan
48:85,"{{jgrapht}} uses the ""Eclipse Public License"". It’s mentioned in http:…",CASSANDRA-10365,"{{jgrapht}} uses the ""Eclipse Public License"". It’s mentioned in http://www.apache.org/legal/resolved.html#categ  b: I’m not sure I understand all the requirements but at the very least we should add a  mention to the {{NOTICE}} fle with a link to the library web page. The page also talks  about ""requiring an explicit action by the user"" and I’m not sure about that. We might be  fne here but I can’t personally certify so with a high degree of confdence.
",,Architectural solution benefits and drawbacks,12:1684 - 12:2142,1,arjan
48:90,Could make {{Types.none()}} return the same singleton object since we…,CASSANDRA-10365," Could make {{Types.none()}} return the same singleton object since we do call it in a  bunch of places.
",,Architectural component behavior and structure,12:2144 - 12:2249,1,arjan
48:86,It sadens me that the type of the {{Types.types}} feld is not {{Immuta…,CASSANDRA-10365," It sadens me that the type of the {{Types.types}} feld is not {{ImmutableMap}} (the  reason seems to be to that the {{RawBuilder}} abuses {{Types}}).
",,Architectural solution benefits and drawbacks,12:2251 - 12:2402,1,arjan
48:87,the type of the {{Types.types}} feld is not {{ImmutableMap}},CASSANDRA-10365,the type of the {{Types.types}} feld is not {{ImmutableMap}},,Architectural component behavior and structure,12:2270 - 12:2329,1,arjan
48:88,"In {{SchemaKeyspace.fetchTypes}}, the use of {{Types}} have been expen…",CASSANDRA-10365," In {{SchemaKeyspace.fetchTypes}}, the use of {{Types}} have been expended to their fqn  ({{org.apache.cassandra.schema.Types}}).",,Architectural component behavior and structure,12:2404 - 12:2532,1,arjan
48:89,Not a big deal but I don’t think that’s necessary.,CASSANDRA-10365,"Not a big deal but I don’t think that’s necessary.
",,Architectural solution benefits and drawbacks,12:2534 - 12:2585,1,arjan
48:122,aleksey,CASSANDRA-10365,aleksey,,Comment,12:2590 - 12:2596,1,arjan
48:91,"It’s already being pulled by the driver, and we depend on that, so wha…",CASSANDRA-10365,"It’s already being pulled by the driver, and we depend on that, so whatevs.
",,Architectural solution benefits and drawbacks,12:2703 - 12:2779,1,arjan
48:121,aleksey,CASSANDRA-10365,aleksey,,Comment,12:2784 - 12:2790,1,arjan
48:92,"We have a bunch of libraries that do it so too (JDT, logback, maybe ot…",CASSANDRA-10365,"We have a bunch of libraries that do it so too (JDT, logback, maybe others), so this isn’t  an issue either.
",,Architectural solution benefits and drawbacks,12:2840 - 12:2949,1,arjan
48:120,aleksey,CASSANDRA-10365,aleksey,,Comment,12:2954 - 12:2960,1,arjan
48:93,Done.,CASSANDRA-10365,Done.,,Architectural solution benefits and drawbacks,12:3068 - 12:3072,1,arjan
48:94,Corrected.,CASSANDRA-10365,"Corrected.
",,Architectural solution benefits and drawbacks,13:90 - 13:101,1,arjan
48:95,Done,CASSANDRA-10365,Done,,Architectural solution benefits and drawbacks,13:204 - 13:207,1,arjan
48:96,"Given that it will always realistically be an ImmutableMap, I’m not ev…",CASSANDRA-10365,"Given that it will always realistically be an ImmutableMap, I’m not even saddened. Well,  just a little bit, but not it actually feels cleaner to me this way.
",,Architectural solution benefits and drawbacks,13:352 - 13:511,1,arjan
48:119,slebresne,CASSANDRA-10365,slebresne,,Comment,13:764 - 13:772,1,arjan
48:97,"Well, I would argue that it’s an even worth idea for the driver to pul…",CASSANDRA-10365,"Well, I would argue that it’s an even worth idea for the driver to pull a dependency just for  that, but I suppose it’s a separate subject. ",,Architectural solution benefits and drawbacks,13:843 - 13:982,1,arjan
48:98,"Anyway, I maintain that I prefer the old version:  the new one feels o…",CASSANDRA-10365,"Anyway, I maintain that I prefer the old version:  the new one feels overkill to me and since I’m not familiar with that new library, I actually  have less confdence in that new version. But it appears to work so you have my opinion  and I’ll let you make the fnal decision.
",,Architectural solution benefits and drawbacks,13:983 - 13:1258,1,arjan
48:99,The rest lgtm.,CASSANDRA-10365,"The rest lgtm.
",,Architectural solution benefits and drawbacks,13:1259 - 13:1274,1,arjan
48:118,aleksey,CASSANDRA-10365,aleksey,,Comment,13:1431 - 13:1437,1,arjan
48:100,"If you don’t really mind, I’ll leave it as is *for now*. tbh I just fn…",CASSANDRA-10365," If you don’t really mind, I’ll leave it as is *for now*. tbh I just fnd  v2 conceptually cleaner/simpler. And there might be some value in having similar logic on  both server and in the java-driver. That said, if drivers team decides to pull the dependency  and do something else - I’ll revert too. I’m perfectly fne with revisiting after 3.0.0, and I  know Alexandre is looking at an alternative option as well, so there is a high likelihood that  we will in fact ditch the dependency in both the driver and the server.
",,Architectural solution benefits and drawbacks,13:1452 - 13:1974,1,arjan
48:101,ditch the dependency in both the driver and the server,CASSANDRA-10365,ditch the dependency in both the driver and the server,,Architectural component behavior and structure,13:1919 - 13:1972,1,arjan
48:117,adutra,CASSANDRA-10365,adutra,,Comment,13:2396 - 13:2401,1,arjan
48:102,Pushed two new commits to the [current PR|https://github.com/datastax/…,CASSANDRA-10365,"Pushed two new commits to the [current PR|https://github.com/datastax/java-  driver/pull/467] for the Java driver. The frst one gets rid of the new dependency on jgrapht,  and implements topological sort from scratch (following Kahn’s algorithm); the second one  12
is of less interest for this ticket but for the record, it enables lazy resolution of UDTs when  the dependency graph is incomplete (which can happen when we refresh metadata for just  a subset of the entire schema).",,Architectural solution benefits and drawbacks,13:2404 - 14:216,1,arjan
48:116,slebresne,CASSANDRA-10365,slebresne,,Comment,14:387 - 14:395,1,arjan
48:105,"Well, there is a lot of failures. Some are due to tests needing to be…",CASSANDRA-10365,"Well, there is a lot of failures. Some are due to tests needing to be upgraded following  the change of driver version on cassci. But at least for the thrift tests (that are all failing),  it’s due to a genuine bug introduced by this patch. Thrift dtests are failing with the following  stack:",,Architectural solution benefits and drawbacks,14:454 - 14:746,1,arjan
48:103,"The reason is that super columns uses maps internally, and we allow co…",CASSANDRA-10365,"The reason is that super columns uses maps internally, and we allow counters in super  columns. We do indeed not allow counters in collections in CQL, but it’s not a problem  internally and we shouldn’t throw in {{CQL3Type.Raw.prepare}} in that case anymore.
",,Motivation of design issue,14:2301 - 14:2560,1,arjan
48:104,"Not entirely sure where to move that check however, so the simplest so…",CASSANDRA-10365,"Not entirely sure where to move that check however, so the simplest solution might be to  use a {{prepareInternal}} version using by schema handling that disable this check.
",,Architectural component behavior and structure,14:2561 - 14:2735,1,arjan
48:115,aleksey,CASSANDRA-10365,aleksey,,Comment,15:5 - 15:11,1,arjan
48:106,"Well, that’s annoying. {{prepareInternal}} it is then.",CASSANDRA-10365," Well, that’s annoying. {{prepareInternal}} it is then.
",,"Architectural component behavior and structure
Architectural solution benefits and drawbacks",15:13 - 15:69,2,arjan
48:114,aleksey,CASSANDRA-10365,aleksey,,Comment,15:74 - 15:80,1,arjan
48:108,simple fx [here|https://github.com/iamaleksey/cassandra/commits/10365-…,CASSANDRA-10365," simple fx [here|https://github.com/iamaleksey/cassandra/commits/10365-  counters-fx], does the minimal job to handle just supercolumns with counters, and doesn’t  go any further (and perhaps shouldn’t).
",,Architectural component behavior and structure,15:95 - 15:299,1,arjan
48:107,"Also, entirely unrelated, but it seems like we do allow counters as ma…",CASSANDRA-10365,"Also, entirely unrelated, but it seems like we do allow counters as map keys, or at least  don’t validate it {{RawCollection}}",,Existing system architecture description,15:300 - 15:425,1,arjan
48:113,slebresne,CASSANDRA-10365,slebresne,,Comment,15:460 - 15:468,1,arjan
48:109,That’s exactly what I had in mind so lgtm.,CASSANDRA-10365,"That’s exactly what I had in mind so lgtm.
",,Architectural solution benefits and drawbacks,15:556 - 15:599,1,arjan
48:110,Saw that too and not sure why that is. Seems like an oversight though…,CASSANDRA-10365,"Saw that too and not sure why that is. Seems like an oversight though maybe we check  some place else. We’ll have to check.
",,"Assumptions
Technical debt",15:704 - 15:828,2,arjan
48:112,aleksey,CASSANDRA-10365,aleksey,,Comment,15:2163 - 15:2169,1,arjan
48:111,"I think Paulo and I fxed most dtest issues, and none should be remaini…",CASSANDRA-10365," I think Paulo and I fxed most dtest issues, and none should be remaining that  are caused by this particular commit",,"Architectural solution benefits and drawbacks
Assumptions",15:2171 - 15:2286,2,arjan
49:5,Integrate top threads command in nodetool,CASSANDRA-12197,Integrate top threads command in nodetool,,User requirement,3:53 - 3:93,1,arjan
49:1,SJK (https://github.com/aragozin/jvm-tools) has a command called ttop…,CASSANDRA-12197,"SJK (https://github.com/aragozin/jvm-tools) has a command called ttop that displays the top  threads within the JVM, sorted either by CPU utilization or heap allocation rate.",,Technology solution,3:113 - 3:286,1,arjan
49:2,"When diagnosing  garbage collection or high cpu utilization, this is v…",CASSANDRA-12197,"When diagnosing  garbage collection or high cpu utilization, this is very helpful information. ",,Architectural solution benefits and drawbacks,3:288 - 3:382,1,arjan
49:3,It would be great if  users can get this directly with nodetool withou…,CASSANDRA-12197,It would be great if  users can get this directly with nodetool without having to download something else.,,User requirement,3:383 - 3:488,1,arjan
49:4,SJK is  Apache 2.0 licensed so it might be possible leverage its code.,CASSANDRA-12197,"SJK is  Apache 2.0 licensed so it might be possible leverage its code.
",,Architectural solution benefits and drawbacks,3:490 - 3:561,1,arjan
49:21,brandon.williams,CASSANDRA-12197,brandon.williams,,Comment,3:905 - 3:920,1,arjan
49:6,So much +1 on this. I’ve had to ask people to install sjk so many time…,CASSANDRA-12197,"So much +1 on this. I’ve had to ask people to install sjk so many times  to troubleshoot something I’ve lost count. Excellent tool that we should integrate.
",,Architectural solution benefits and drawbacks,3:923 - 3:1080,1,arjan
49:22,kohlisankalp,CASSANDRA-12197,kohlisankalp,,Comment,3:1084 - 3:1095,1,arjan
49:7,Should we not expose this via virtual tables rather than nodetool?,CASSANDRA-12197," Should we not expose this via virtual tables rather than nodetool?
",,"Architectural design configuration
Assumptions",3:1097 - 3:1165,2,arjan
49:23,brandon.williams,CASSANDRA-12197,brandon.williams,,Comment,4:4 - 4:19,1,arjan
49:8,In nodetool we can just invoke sjk directly and it’s done.,CASSANDRA-12197,In nodetool we can just invoke sjk directly and it’s done. ,,Architectural solution benefits and drawbacks,4:22 - 4:80,1,arjan
49:9,For virtual  tables you’d have to programmatically manipulate the data…,CASSANDRA-12197,"For virtual  tables you’d have to programmatically manipulate the data into a virtual table format, and  then to use it you’d have to repeatedly query the table since ttop’s values constantly change  over time.
",,Architectural solution benefits and drawbacks,4:81 - 4:292,1,arjan
49:24,cnlwsu,CASSANDRA-12197,cnlwsu,,Comment,4:296 - 4:301,1,arjan
49:10,It was actually idea behind CASSANDRA-8341 which could be exposed in t…,CASSANDRA-12197, It was actually idea behind CASSANDRA-8341 which could be exposed in the  thread_pools virtual table or tpstats.,,Architectural component behavior and structure,4:303 - 4:415,1,arjan
49:11,Its more efcient,CASSANDRA-12197,Its more efcient,,Architectural tactics,4:417 - 4:432,1,arjan
49:12,to hit the Thread mbean locally  than to make individual RMI calls on…,CASSANDRA-12197,to hit the Thread mbean locally  than to make individual RMI calls on each thread at high rates,,Architectural component behavior and structure,4:434 - 4:528,1,arjan
49:13,but to capture it cross stages  gets complicated with SEP as its switc…,CASSANDRA-12197,but to capture it cross stages  gets complicated with SEP as its switches between stages.,,Architectural solution benefits and drawbacks,4:530 - 4:618,1,arjan
49:14,This also is something that sjk  makes a bit confusing,CASSANDRA-12197,This also is something that sjk  makes a bit confusing,,Architectural solution benefits and drawbacks,4:620 - 4:673,1,arjan
49:15,as a MutationStage thread can switch to a ReadStage from 1 query to  a…,CASSANDRA-12197, as a MutationStage thread can switch to a ReadStage from 1 query to  another with same threadid,,Technology solution,4:674 - 4:769,1,arjan
49:16,making it inaccurately report. Of course in practice it doesn’t  matte…,CASSANDRA-12197,"making it inaccurately report. Of course in practice it doesn’t  matter and is incredibly valuable even with inaccuracies.
",,Architectural solution benefits and drawbacks,4:771 - 4:894,1,arjan
49:25,e.dimitrova,CASSANDRA-12197,e.dimitrova,,Comment,4:898 - 4:908,1,arjan
49:19,So far it passed all Jenkins tests.,CASSANDRA-12197,"So far it passed all Jenkins tests.
",,Architectural solution benefits and drawbacks,4:1047 - 4:1083,1,arjan
49:26,djoshi,CASSANDRA-12197,djoshi,,Comment,4:1087 - 4:1092,1,arjan
49:17,This is a nice addition.,CASSANDRA-12197,This is a nice addition.,,Architectural solution benefits and drawbacks,4:1095 - 4:1118,1,arjan
49:27,brandon.williams,CASSANDRA-12197,brandon.williams,,Comment,4:1906 - 4:1921,1,arjan
49:18,"The integration itself looks good, though.",CASSANDRA-12197,"The integration itself looks good, though.
",,Architectural solution benefits and drawbacks,4:2040 - 4:2083,1,arjan
50:1,Add byteman support for 2.2,CASSANDRA-12377,Add byteman support for 2.2,,Technology solution,3:53 - 3:79,1,arjan
50:2,Using byteman for dtest,CASSANDRA-12377,Using byteman for dtest,,Technology solution,3:99 - 3:121,1,arjan
50:3,is useful to interrupt streaming reliably (CASSANDRA-10810 / https://g…,CASSANDRA-12377,"is useful to interrupt streaming reliably (CASSANDRA-10810 / https://github.com/riptano/cassa  dtest/pull/1145).
",,Architectural solution benefits and drawbacks,3:123 - 3:236,1,arjan
50:4,"Unfortunately, it is available for 3.0+.",CASSANDRA-12377,"Unfortunately, it is available for 3.0+.
",,"Architectural solution benefits and drawbacks
Technology solution",3:237 - 3:278,2,arjan
50:5,This ticket backports it to 2.2.x.,CASSANDRA-12377,"This ticket backports it to 2.2.x.
",,Technology solution,3:279 - 3:314,1,arjan
50:7,pauloricardomg,CASSANDRA-12377,pauloricardomg,,Comment,3:481 - 3:494,1,arjan
50:6,+1,CASSANDRA-12377,+1,,Architectural solution benefits and drawbacks,3:497 - 3:498,1,arjan
51:1,Replace Cassandra’s lz4-1.3.0.jar with lz4-java-1.4.0.jar,CASSANDRA-13741,Replace Cassandra’s lz4-1.3.0.jar with lz4-java-1.4.0.jar,,Technology solution,3:53 - 3:109,1,arjan
51:2,The latest lz4-java library has been released (https://github.com/lz4/…,CASSANDRA-13741,"The latest lz4-java library has been released (https://github.com/lz4/lz4-java/releases) and up-  loaded to maven central .
Please replace in mainline the current version ( 1.3.0) with the latest one ( 1.4.0) from here -  http://repo1.maven.org/maven2/org/lz4/lz4-java/1.4.0/",,Technology solution,3:138 - 3:413,1,arjan
51:22,jjirsa,CASSANDRA-13741,jjirsa,,Comment,3:539 - 3:544,1,arjan
51:3,We don’t typically update dependencies unless there’s a reason.,CASSANDRA-13741,We don’t typically update dependencies unless there’s a reason.,,Architectural solution benefits and drawbacks,3:547 - 3:609,1,arjan
51:21,jasobrown,CASSANDRA-13741,jasobrown,,Comment,3:740 - 3:748,1,arjan
51:4,and I have been waiting for that jar to updated for a  loooong time. T…,CASSANDRA-13741,"and I have been waiting for that jar to updated for a  loooong time. There were some bugs that have a fx committed ~2 years ago but were never  released. The reason is the previous maintainer was unable to keep up on the project and it  fell into disrepair (it happens). Recently, though, the lz4-java project moved to a new lz4-org  2
and has a new maintainer(s). I guess [~ReiOdaira] also updated the maven coordinates while  he was at it (as jpountz) is no longer owning the project.
",,Architectural solution benefits and drawbacks,3:775 - 4:152,1,arjan
51:20,amitkumar_ghatwal,CASSANDRA-13741,amitkumar_ghatwal,,Comment,4:156 - 4:172,1,arjan
51:5,yes - [~jasobrown] - that’s very correct . Rei is indeed now the  new…,CASSANDRA-13741,"yes - [~jasobrown] - that’s very correct . Rei is indeed now the  new maintainer and he had released this latest version. So guess [~jjirsa] we are good for  upgrading it ?.
",,Architectural solution benefits and drawbacks,4:175 - 4:349,1,arjan
51:19,jjirsa,CASSANDRA-13741,jjirsa,,Comment,4:353 - 4:358,1,arjan
51:6,I hope (expect) the reviewer to be very diligent in confrming that the…,CASSANDRA-13741,"I hope (expect) the reviewer to be very diligent in confrming that the upgrade dtests are  run with compression enabled, and it’d be extra nice if we could confrm that the upgrade  dtests use diferent lz4 compression levels to make sure that upgrading this library doesn’t  introduce data corrupting regressions for existing users",,Risks,4:450 - 4:779,1,arjan
51:18,ReiOdaira,CASSANDRA-13741,ReiOdaira,,Comment,4:785 - 4:793,1,arjan
51:7,"Yes, I am now maintaining lz4-java. The maven coordinates have changed…",CASSANDRA-13741,"Yes, I am now maintaining lz4-java. The maven coordinates have changed  because the project has moved to lz4.org. Note that the Java package name did not change.
",,Technology solution,4:796 - 4:958,1,arjan
51:17,bairyz,CASSANDRA-13741,bairyz,,Comment,4:1473 - 4:1478,1,arjan
51:8,We are also expecting this new lz4-java release for over a year. Our t…,CASSANDRA-13741,"We are also expecting this new lz4-java release for over a year. Our testing shows new  lz4-java improves more than 10% on aarch64.
",,Architectural solution benefits and drawbacks,4:1514 - 4:1646,1,arjan
51:16,mkjellman,CASSANDRA-13741,mkjellman,,Comment,4:1819 - 4:1827,1,arjan
51:9,We need comprehensive performance and correctness testing here though…,CASSANDRA-13741,We need comprehensive performance and correctness testing here though as LZ4 is hugely  important to C*,,Architectural design configuration,4:1996 - 4:2098,1,arjan
51:15,mkjellman,CASSANDRA-13741,mkjellman,,Comment,4:2312 - 4:2320,1,arjan
51:10,I was able to get some time to do proper extended regression and perfo…,CASSANDRA-13741, I was able to get some time to do proper extended regression and performance  testing of lz4-java 1.4.0. Things are looking good so far.,,Architectural solution benefits and drawbacks,4:2322 - 4:2458,1,arjan
51:11,I’d like to do some extended perf  profling to really validate this as…,CASSANDRA-13741,I’d like to do some extended perf  profling to really validate this as it’s such an important dependency,,Architectural design configuration,4:2460 - 4:2563,1,arjan
51:12,but I’ve convinced  myself that we should be comfortable with this to…,CASSANDRA-13741,"but I’ve convinced  myself that we should be comfortable with this to go into trunk at this point!
",,Architectural solution benefits and drawbacks,4:2565 - 4:2664,1,arjan
51:14,jasobrown,CASSANDRA-13741,jasobrown,,Comment,5:326 - 5:334,1,arjan
51:13,+1,CASSANDRA-13741,+1,,Architectural solution benefits and drawbacks,5:337 - 5:338,1,arjan
52:1,ZSTD Compressor support in Cassandra,CASSANDRA-14482,ZSTD Compressor support in Cassandra,,Technology solution,3:53 - 3:88,1,arjan
52:2,ZStandard has a great speed and compression ratio tradeof.,CASSANDRA-14482,"ZStandard has a great speed and compression ratio tradeof.
",,"Architectural solution benefits and drawbacks
Architectural tactics",3:108 - 3:167,2,arjan
52:3,ZStandard is open source compression from Facebook. More about ZSTD  […,CASSANDRA-14482,"ZStandard is open source compression from Facebook.
More about ZSTD  [https://github.com/facebook/zstd]  https://code.facebook.com/posts/1658392934479273/smaller-and-faster-data-compression-with-zstandard/",,Technology solution,3:168 - 3:373,1,arjan
52:83,jolynch,CASSANDRA-14482,jolynch,,Comment,3:459 - 3:465,1,arjan
52:4,this is a really interesting idea especially if the [bench-  marks|htt…,CASSANDRA-14482, this is a really interesting idea especially if the [bench-  marks|https://github.com/facebook/zstd#benchmarks] are true as it would mean that zstd  should strictly dominate defate (3x faster and better compression ratio); sort of how LZ4  strictly dominates Snappy these days.,,"Architectural solution benefits and drawbacks
Architectural tactics",3:489 - 3:766,2,arjan
52:82,jjirsa,CASSANDRA-14482,jjirsa,,Comment,4:1227 - 4:1232,1,arjan
52:5,"We’re in a freeze, but I can’t imagine this would break anyone’s testi…",CASSANDRA-14482,"We’re in a freeze, but I can’t imagine this would break anyone’s testing (modulo something  like [~jrwest]’s property based/quicktheories tests, if he’s got one that explores the space  of compression algorithms/options/etc), and a major version is a great time for a change  like this (and I think we need to be doing more of this, updating to modern algorithms is  important for the project).",,Architectural design configuration,5:3 - 5:396,1,arjan
52:81,aweisberg,CASSANDRA-14482,aweisberg,,Comment,5:490 - 5:498,1,arjan
52:6,An exciting addition for compression options,CASSANDRA-14482,An exciting addition for compression options,,Architectural solution benefits and drawbacks,5:501 - 5:544,1,arjan
52:80,jolynch,CASSANDRA-14482,jolynch,,Comment,5:708 - 5:714,1,arjan
52:7,Just want to +1 merging this if we can,CASSANDRA-14482,Just want to +1 merging this if we can,,Architectural solution benefits and drawbacks,5:807 - 5:844,1,arjan
52:8,as zstd will be a signifcant performance improvement  over defate,CASSANDRA-14482,as zstd will be a signifcant performance improvement  over defate,,Architectural tactics,5:846 - 5:910,1,arjan
52:9,"imo should be the default ""high compression"" option.",CASSANDRA-14482,"imo should be the default ""high compression"" option. ",,Architectural design configuration,5:916 - 5:968,1,arjan
52:10,Even if we don’t want  to merge it in 4.0 it could be shipped frst as…,CASSANDRA-14482,Even if we don’t want  to merge it in 4.0 it could be shipped frst as a standalone jar (there’s been [cassandra-  zstd|https://github.com/MatejTymes/cassandra-zstd] for a while now).,,Architectural design configuration,5:969 - 5:1150,1,arjan
52:11,"I do think that if  we merge it for 4.0 having some ""before and after""…",CASSANDRA-14482,"I do think that if  we merge it for 4.0 having some ""before and after"" blog posts of zstd vs defate for both  performance and ratio would be really great (zstd should beat defate both in ratio and  performance).
",,"Architectural design configuration
Architectural solution benefits and drawbacks
Assumptions",5:1152 - 5:1364,3,arjan
52:12,Sushma can confrm but in our experiments zstd without dictionaries str…,CASSANDRA-14482,"Sushma can confrm but in our experiments zstd without dictionaries strictly dominates de-  fate as in it is signifcantly faster and still get’s better compression ratios on most datasets.
Zstd is actually on the same order of magnitude speed wise as LZ4 which is very impressive  given the additional ratio but I guess it makes sense since it’s written by the same person.
Basically, even without dictionaries, zstd is a really good option for use cases that need to  get high ratio.
",,"Architectural solution benefits and drawbacks
Architectural tactics",5:1552 - 5:2038,2,arjan
52:13,"That being said, I’ve been playing around with integrating a dictionar…",CASSANDRA-14482,"That being said, I’ve been playing around with integrating a dictionary per SSTable ap-  proach for zstd",,Architectural component behavior and structure,5:2039 - 5:2142,1,arjan
52:14,it works _really_ well. You can run with like 4kb block size with a  f…,CASSANDRA-14482," it works _really_ well. You can run with like 4kb block size with a  fxed 10kb of dictionary stored after the ofsets in the {{CompressionInfo.db}} fle and get  similar ratios for many types of data as LZ4 did with a 64kb block size. Also, because the  dictionaries are part of the {{CompressionInfo.db}} fles it’s also compatible with most back-  up/restore and ofine processing systems as well.",,"Architectural solution benefits and drawbacks
Architectural tactics",5:2147 - 5:2542,2,arjan
52:15,I haven’t posted a patch yet because this  4strategy requires non triv…,CASSANDRA-14482,"I haven’t posted a patch yet because this  4
strategy requires non trivial changes to the {{ICompressor}} contract",,Architectural component behavior and structure,5:2544 - 6:69,1,arjan
52:16,which I think would  violate the freeze and to be frank I haven’t been…,CASSANDRA-14482," which I think would  violate the freeze and to be frank I haven’t been able to get it fully working in Cassandra  itself I believe due to early re-open (it looks like there is a code path that can re-open the  {{SSTableReader}} and in my case it causes reads to use the wrong dictionary and every-  thing blows up).
",,"Architectural solution benefits and drawbacks
Assumptions",6:70 - 6:387,2,arjan
52:17,All my prototypes have lived outside Cassandra and use dictionaries st…,CASSANDRA-14482,"All my prototypes have lived outside Cassandra and use dictionaries stored outside the  database,",,Architectural design configuration,6:388 - 6:484,1,arjan
52:18,"but I think it’s safe to say that the ""hard"" part of adding dictionary…",CASSANDRA-14482,"but I think it’s safe to say that the ""hard"" part of adding dictionary support is  going to be how to generate and manage them.",,"Assumptions
Motivation of design issue",6:486 - 6:612,2,arjan
52:19,I think the best path forwards will be to  hook into training the dict…,CASSANDRA-14482,"I think the best path forwards will be to  hook into training the dictionaries at SSTable write time, store them in {{Compression-  Info.db}} and then have an instance of the compressor per sstable as the dictionaries can be  held of heap by the zstd compressor",,"Architectural design configuration
Assumptions",6:614 - 6:874,2,arjan
52:20,by the zstd compressor,CASSANDRA-14482,by the zstd compressor,,Technology solution,6:853 - 6:874,1,arjan
52:21,so there would be little overhead.,CASSANDRA-14482, so there would be little overhead.,,Architectural solution benefits and drawbacks,6:875 - 6:909,1,arjan
52:22,If we went with the  dictionary per sstable approach you’d have a 10kb…,CASSANDRA-14482,If we went with the  dictionary per sstable approach you’d have a 10kb dictionary per sstable and 2TB of data  / 160MB / sstable = 12500 stables * 10kb ofheap memory / sstable = 125 megabytes of  ofheap memory for the dictionaries. ,,Architectural design configuration,6:911 - 6:1142,1,arjan
52:23,This seems pretty worth it to me since you’ll probably  be getting ano…,CASSANDRA-14482,"This seems pretty worth it to me since you’ll probably  be getting another 20-30% ratio.
",,Architectural tactics,6:1143 - 6:1231,1,arjan
52:24,"Anyways, I believe dictionaries are going to be a game changer, but I…",CASSANDRA-14482,"Anyways, I believe dictionaries are going to be a game changer, but I also think it should  be a follow up item to this ticket.",,"Architectural solution benefits and drawbacks
Assumptions",6:1233 - 6:1359,2,arjan
52:25,Adding _just_ a zstd compressor without dictionaries,CASSANDRA-14482,Adding _just_ a zstd compressor without dictionaries,,"Architectural design configuration
Technology solution",6:1361 - 6:1412,2,arjan
52:26,should be a big win,CASSANDRA-14482,should be a big win,,Architectural solution benefits and drawbacks,6:1415 - 6:1433,1,arjan
52:27,nd then for 5.0 we can work on integrating dictionaries and your in  m…,CASSANDRA-14482,nd then for 5.0 we can work on integrating dictionaries and your in  memory ofset representation,,Architectural design configuration,6:1437 - 6:1532,1,arjan
52:28,for a _huge_ win,CASSANDRA-14482,for a _huge_ win,,Architectural solution benefits and drawbacks,6:1534 - 6:1549,1,arjan
52:29,I’m not sure it would strictly be necessary to wait until 5.0 for this…,CASSANDRA-14482,"I’m not sure it would strictly be necessary to wait until 5.0 for this,",,"Architectural design configuration
Assumptions",6:1872 - 6:1942,2,arjan
52:30,"as while it certainly  breaks _my_ interpretation of the freeze, it’s…",CASSANDRA-14482,"as while it certainly  breaks _my_ interpretation of the freeze, it’s probably not going to be a _dramatic_ change.
",,Trade-offs,6:1944 - 6:2060,1,arjan
52:31,"It could be quite localised, and might be acceptable for a patch relea…",CASSANDRA-14482,"It could be quite localised, and might be acceptable for a patch release, depending on how  we approach our future release processes.
",,Architectural design configuration,6:2061 - 6:2195,1,arjan
52:79,sushmaad@gmail.com,CASSANDRA-14482,sushmaad@gmail.com,,Comment,6:2200 - 6:2217,1,arjan
52:32,"we have seen similar results as [~jolynch], several usecases show bett…",CASSANDRA-14482,"we have seen similar results as [~jolynch], several usecases show better results  than LZ4 and Defate, ZSTD has good speed for most usecases given same compression ratio.
",,"Architectural solution benefits and drawbacks
Architectural tactics",6:2263 - 6:2434,2,arjan
52:33,Current code changes does not afect any testing neither touches any ot…,CASSANDRA-14482,"Current code changes does not afect any testing neither touches any other code part of  cassandra itself, apart from adding a new compression. So this should be safe changes for  any experimentation and also real usage in production.
",,"Architectural design configuration
Architectural solution benefits and drawbacks",6:2435 - 6:2669,2,arjan
52:34,"Dictionary based compression is a very good feature of ZSTD,",CASSANDRA-14482,"Dictionary based compression is a very good feature of ZSTD,",,"Architectural solution benefits and drawbacks
Technology solution",6:2670 - 6:2729,2,arjan
52:35,that can be enabled and  5code changes for that can go in a separate p…,CASSANDRA-14482,"that can be enabled and  5
code changes for that can go in a separate patch in other upcoming releases. ",,Architectural design configuration,6:2731 - 7:77,1,arjan
52:36,Current patch  gives a good start for introducing ZSTD as a compressio…,CASSANDRA-14482,"Current patch  gives a good start for introducing ZSTD as a compression variant and later add more feature.
",,Architectural solution benefits and drawbacks,7:78 - 7:186,1,arjan
52:78,djoshi,CASSANDRA-14482,djoshi,,Comment,7:191 - 7:196,1,arjan
52:37,I think the general consensus is that this is a good feature to have i…,CASSANDRA-14482,"I think the general consensus is that this is a good feature to have in 4.0. It adds  value (hopefully) without messing up the stability of the end product i.e. if you don’t select  this algo, the release should be no better or worse than not including this algo as part of the  release",,"Architectural solution benefits and drawbacks
Assumptions",7:199 - 7:484,2,arjan
52:77,djoshi,CASSANDRA-14482,djoshi,,Comment,7:883 - 7:888,1,arjan
52:38,Here’s the patch. This approach not only enables Zstd compression but…,CASSANDRA-14482,"Here’s the patch. This approach not only enables Zstd compression but also check-  summing.
",,"Architectural design configuration
Technology solution",7:891 - 7:982,2,arjan
52:76,bdeggleston,CASSANDRA-14482,bdeggleston,,Comment,7:1162 - 7:1172,1,arjan
52:39,simplifes {{ZstdCompressor#compress}} method to just call {{Zstd#compr…,CASSANDRA-14482,simplifes {{ZstdCompressor#compress}} method to just call {{Zstd#compress}}. The  compressor doesn’t support on heap bufers,,Technology solution,7:1310 - 7:1432,1,arjan
52:40,simplifes {{ZstdCompressor#compress}} method to just call {{Zstd#compr…,CASSANDRA-14482,"simplifes {{ZstdCompressor#compress}} method to just call {{Zstd#compress}}. The  compressor doesn’t support on heap bufers so there’s no need to do the stream stuf. This  is basically how the snappy compressor works.
",,Architectural solution benefits and drawbacks,7:1310 - 7:1528,1,arjan
52:41,adds ratio to CompressorPerformance output,CASSANDRA-14482,adds ratio to CompressorPerformance output,,User requirement,7:1604 - 7:1645,1,arjan
52:75,djoshi,CASSANDRA-14482,djoshi,,Comment,7:1751 - 7:1756,1,arjan
52:42,The reason I used the streams was that  {{Zstd}} does not enable setti…,CASSANDRA-14482,"The reason I used the streams was that  {{Zstd}} does not enable setting the checksumming fag via the {{ZStd::compress}} JNI  static helper. I confrmed this with the JNI author and it goes deeper than just the JNI  bindings. However using the compression stream causes GC.
",,Architectural solution benefits and drawbacks,7:1797 - 7:2070,1,arjan
52:43,Move forward with checksumming & accept the GC overhead,CASSANDRA-14482,Move forward with checksumming & accept the GC overhead,,"Architectural component behavior and structure
Architectural solution benefits and drawbacks",7:2118 - 7:2172,2,arjan
52:44,Move forward withOUT checksumming,CASSANDRA-14482, Move forward withOUT checksumming,,Architectural component behavior and structure,8:2 - 8:35,1,arjan
52:45,Allow user to turn on/of checksumming using a compression preference p…,CASSANDRA-14482,"Allow user to turn on/of checksumming using a compression preference parameter (turn-  ing on will incur GC, turning of wont)",,"Architectural component behavior and structure
User requirement",8:40 - 8:164,2,arjan
52:46,Add our own checksumming,CASSANDRA-14482,Add our own checksumming ,,Architectural component behavior and structure,8:169 - 8:193,1,arjan
52:47,"(ugly, burns additional CPU and still generates some garbage)",CASSANDRA-14482,"(ugly, burns additional CPU and still generates some garbage)",,Architectural solution benefits and drawbacks,8:194 - 8:254,1,arjan
52:48,Work with Zstd & Zstd JNI to enable passing in fags such as checksummi…,CASSANDRA-14482,Work with Zstd & Zstd JNI to enable passing in fags such as checksumming fag (no  GC overhead),,"Architectural component behavior and structure
Technology solution",8:259 - 8:352,2,arjan
52:49,I personally think in the near term we should pick option 1-3,CASSANDRA-14482,I personally think in the near term we should pick option 1-3,,Architectural solution benefits and drawbacks,8:355 - 8:415,1,arjan
52:50,I am opposed to doing our own checksumming  especially because Zstd al…,CASSANDRA-14482,I am opposed to doing our own checksumming  especially because Zstd already supports it and it is just a matter of plumbing and adding  the appropriate APIs to make it happen in a performant manner for JNI.,,Architectural solution benefits and drawbacks,8:488 - 8:693,1,arjan
52:74,benedict,CASSANDRA-14482,benedict,,Comment,8:1044 - 8:1051,1,arjan
52:51,I don’t see any issue with doing our own checksumming? It’s not like t…,CASSANDRA-14482,I don’t see any issue with doing our own checksumming? It’s not like they’ll be do-  ing anything magical. ,,"Architectural solution benefits and drawbacks
Assumptions",8:1054 - 8:1160,2,arjan
52:52,"In fact, according to [this|https://facebook.github.io/zstd/zstd_manua…",CASSANDRA-14482,"In fact, according to [this|https://facebook.github.io/zstd/zstd_manual.html]  they’re just using the lower 32bits of xxhash64, ",,Technology solution,8:1161 - 8:1288,1,arjan
52:53,which we already utilise elsewhere I think?,CASSANDRA-14482,"which we already utilise elsewhere I think?
",,"Architectural solution benefits and drawbacks
Assumptions
Existing system architecture description",8:1289 - 8:1333,3,arjan
52:55,There’s also a good case to made,CASSANDRA-14482,There’s also a good case to made,,Architectural solution benefits and drawbacks,8:1334 - 8:1365,1,arjan
52:54,"permitting the checksum to be confgurable, so that  the user can decid…",CASSANDRA-14482,"permitting the checksum to be confgurable, so that  the user can decide on their preferred level of protection, both in algorithm and number of  bits.
",,"Architectural component behavior and structure
User requirement",8:1371 - 8:1522,2,arjan
52:73,djoshi,CASSANDRA-14482,djoshi,,Comment,8:1527 - 8:1532,1,arjan
52:56,Adding our own checksumming incurs additional overhead not just in ter…,CASSANDRA-14482,"Adding our own checksumming incurs additional overhead not just in terms of the  additional CPU that we would use going over the data twice (once for compression inside  Zstd and then once in the compressor to compute the hash) but also additional code and  maintaining that code. From my digging around in the code it seems [they’re clobbering  parameters|https://github.com/facebook/zstd/issues/1534] which should be an easy fx.
",,Architectural solution benefits and drawbacks,8:1535 - 8:1966,1,arjan
52:72,benedict,CASSANDRA-14482,benedict,,Comment,8:1971 - 8:1978,1,arjan
52:57,Going over the data twice is unlikely to incur much greater penalty th…,CASSANDRA-14482,"Going over the data twice is unlikely to incur much greater penalty than going  over it once and doing both things. In fact, if the two behaviours are designed to behave  optimally with the CPU pipeline (which compression and checksumming algorithms each  certainly are) then mixing the two simultaneously would very likely be slower than running  each independently.
",,Architectural solution benefits and drawbacks,8:1981 - 8:2349,1,arjan
52:58,"Looking at the ZStd code, it looks like it does the sensible thing and…",CASSANDRA-14482,"Looking at the ZStd code, it looks like it does the sensible thing and executes the checksum  independently. It appears to checksum the input stream rather than the output,",,Other system architectural solutions,8:2350 - 8:2521,1,arjan
52:59,"though,  which is odd given that the latter should be smaller (and mod…",CASSANDRA-14482,"though,  which is odd given that the latter should be smaller (and modulo any bugs in the compressor,  should be just as good).
",,Architectural solution benefits and drawbacks,8:2523 - 8:2651,1,arjan
52:62,The only possible advantage ZStd could probably have over us,CASSANDRA-14482,The only possible advantage ZStd could probably have over us ,,Architectural solution benefits and drawbacks,9:1 - 9:61,1,arjan
52:60,"perform the check-  sum incrementally on, say, pages of data it is als…",CASSANDRA-14482,"perform the check-  sum incrementally on, say, pages of data it is also compressing so that it is guaranteed to be  in L1, and to guarantee no TLB misses.",,Architectural component behavior and structure,9:71 - 9:224,1,arjan
52:61,"However, it doesn’t *seem* to do this - it seems to  assume you provid…",CASSANDRA-14482,"However, it doesn’t *seem* to do this - it seems to  assume you provide the data in reasonable chunks.",,Other system architectural solutions,9:226 - 9:327,1,arjan
52:63,"Anyway, there should be no TLB misses  on the size of data we’re opera…",CASSANDRA-14482,"Anyway, there should be no TLB misses  on the size of data we’re operating over when visiting it twice, and the data should be in L3  at worst, and prefetched to L2/L1. ",,"Architectural component behavior and structure
Architectural solution benefits and drawbacks",9:329 - 9:497,2,arjan
52:64,"We could also probably do this ourselves, by providing  only page-size…",CASSANDRA-14482,"We could also probably do this ourselves, by providing  only page-sized frames to compress and performing the checksum incrementally, ",,Architectural component behavior and structure,9:498 - 9:631,1,arjan
52:65,"though this  would mean tighter integration with the C API, and is unl…",CASSANDRA-14482,"though this  would mean tighter integration with the C API, and is unlikely to be worth the efort.
",,Architectural solution benefits and drawbacks,9:632 - 9:731,1,arjan
52:66,"I have, though, made some assumptions about the ZStd code on reading i…",CASSANDRA-14482,"I have, though, made some assumptions about the ZStd code on reading it, as I didn’t  make time to fully read the codebase.
",,Assumptions,9:732 - 9:856,1,arjan
52:71,djoshi,CASSANDRA-14482,djoshi,,Comment,9:861 - 9:866,1,arjan
52:67,I patched the {{zstd-jni}} to add  the ability to enable checksumming…,CASSANDRA-14482,I patched the {{zstd-jni}} to add  the ability to enable checksumming on the methods that [~bdeggleston] suggested.,,Architectural component behavior and structure,9:917 - 9:1031,1,arjan
52:68,It was  accepted upstream and is now available starting with {{zstd-jn…,CASSANDRA-14482,It was  accepted upstream and is now available starting with {{zstd-jni-1.3.8-5}}.,,Technology solution,9:1033 - 9:1114,1,arjan
52:69,I have pulled it in  and enabled it,CASSANDRA-14482,I have pulled it in  and enabled it,,Architectural design configuration,9:1116 - 9:1150,1,arjan
52:70,I think that resolves Blake’s concerns regarding GC and we get checksu…,CASSANDRA-14482,"I think that resolves Blake’s concerns regarding GC and we get checksumming  as well.
",,"Architectural solution benefits and drawbacks
Assumptions",9:1153 - 9:1239,2,arjan
53:1,"Update Netty dependency to latest, include netty-tcnative-boringssl-st…",CASSANDRA-15195,"Update Netty dependency to latest, include netty-tcnative-boringssl-static",,Technology solution,3:53 - 3:126,1,arjan
53:4,clean up SocketFactory,CASSANDRA-15195,clean up SocketFactory,,Technical debt,3:129 - 3:150,1,arjan
53:2,Netty 4.1.37 was just released,CASSANDRA-15195,Netty 4.1.37 was just released,,Technology solution,3:170 - 3:199,1,arjan
53:3,"and among other things, it includes the changes we asked for to  allow…",CASSANDRA-15195," and among other things, it includes the changes we asked for to  allow overriding the queues used for event loops cleanly. Previously we had to resort to refection  to override the undesired behaviour, but now can do it all cleanly.
",,Architectural solution benefits and drawbacks,3:201 - 3:435,1,arjan
53:5,"Additionally, start bundling netty-tcnative-boringssl-static",CASSANDRA-15195,"Additionally, start bundling netty-tcnative-boringssl-static",,Technology solution,3:436 - 3:495,1,arjan
53:6,so that end-users donâĂŹt need to  do anything extra to take advantage…,CASSANDRA-15195,"so that end-users donâĂŹt need to  do anything extra to take advantage of faster boringssl-based encryption.
",,Architectural solution benefits and drawbacks,3:498 - 3:607,1,arjan
53:7,And on top of it just generally clean up some stuf in {{SocketFactory}…,CASSANDRA-15195,"And on top of it just generally clean up some stuf in {{SocketFactory}}.
",,Technical debt,3:608 - 3:681,1,arjan
53:10,benedict,CASSANDRA-15195,benedict,,Comment,3:1213 - 3:1220,1,arjan
53:8,+1,CASSANDRA-15195,+1,,Architectural solution benefits and drawbacks,3:1223 - 3:1224,1,arjan
53:9,"Unclear to me if boringssl qualifes,",CASSANDRA-15195,"Unclear to me if boringssl qualifes,",,"Architectural solution benefits and drawbacks
Assumptions
Technology solution",4:70 - 4:105,3,arjan
54:2,Add compaction allocation measurement test,CASSANDRA-15388,Add compaction allocation measurement test,,Technology solution,3:53 - 3:94,1,arjan
54:1,to support compaction gc optimization.,CASSANDRA-15388,"to support compaction gc optimization.
",,Architectural tactics,3:96 - 3:135,1,arjan
54:3,This adds a test that is able to quickly and accurately measure the ef…,CASSANDRA-15388,"This adds a test that is able to quickly and accurately measure the efect of potential gc optimiza-  tions against a wide range of (synthetic) compaction workloads. This test accurately measures  allocation rates from 16 workloads in less that 2 minutes.
",,Technology solution,3:153 - 3:408,1,arjan
54:4,This test uses googleâĂŹs {{java-allocation-instrumenter}} agent to me…,CASSANDRA-15388,This test uses googleâĂŹs {{java-allocation-instrumenter}} agent to measure the workloads,,Technology solution,3:409 - 3:497,1,arjan
54:5,Mea-  surements using this agent are very accurate and pretty repeatab…,CASSANDRA-15388,"Mea-  surements using this agent are very accurate and pretty repeatable from run to run, with most  variance being negligible (1-2 bytes per partition), although workloads with larger but fewer par-  titions vary a bit more (still less that 0.03%).
The thinking behind this patch is that with compaction, weâĂŹre generally interested in the  memory allocated per partition, since garbage scales more or less linearly with the number of  partitions compacted. So measuring allocation from a small number of partitions that otherwise  represent real world use cases is a good enough approximation.
In addition to helping with compaction optimizations, this test could be used as a template for  future optimization work. This pattern could also be used to set allocation limits on workloads/-  operations and fail CI if the allocation behavior changes past some threshold.
",,Architectural solution benefits and drawbacks,3:500 - 3:1373,1,arjan
54:58,benedict,CASSANDRA-15388,benedict,,Comment,4:4 - 4:11,1,arjan
54:6,With absolutely no preconceived answer to this question on my part: ha…,CASSANDRA-15388,"With absolutely no preconceived answer to this question on my part: have you  considered and rejected JMH’s GC profler?
",,Technology solution,4:14 - 4:134,1,arjan
54:7,I’m unsure how the approaches compare with respect to sophistication (…,CASSANDRA-15388,"I’m unsure how the approaches compare with respect to sophistication (I haven’t looked  closely at how either underlying tool is implemented), but having played with it myself re-  cently, using jmh 1.22, it seems to produce exactly the numbers I would calculate manually  for small functions performing easily calculated allocations.
I only ask because it would hook into our (minimal) pre-existing benchmark workfows,  and produce throughput/latency data alongside. The latest version of jmh can even neatly  hook into perf counters to produce very sophisticated ancillary data to consider at the same  time, to weigh the pros/cons of a change (although it’s defnitely not as easy to explore as  a famegraph).
",,Architectural solution benefits and drawbacks,4:135 - 4:848,1,arjan
54:57,bdeggleston,CASSANDRA-15388,bdeggleston,,Comment,4:977 - 4:987,1,arjan
54:8,"Looking at the code for the GCProfler in jmh, it looks like the Thread…",CASSANDRA-15388,"Looking at the code for the GCProfler in jmh, it looks like the Thread-  MXBean is used to measure allocation.",,Technology solution,4:990 - 4:1099,1,arjan
54:9,"ThreadMXBean was one of the frst things I looked  at, and it wasnâĂŹt…",CASSANDRA-15388,"ThreadMXBean was one of the frst things I looked  at, and it wasnâĂŹt accurate enough, although it is available as an alternate measurement  method in these tests.
",,Architectural solution benefits and drawbacks,4:1101 - 4:1265,1,arjan
54:10,"AFAIK, ThreadMXBean uses TLAB overfows to approximate allocations",CASSANDRA-15388,"AFAIK, ThreadMXBean uses TLAB overfows to approximate allocations",,Technology solution,4:1266 - 4:1330,1,arjan
54:11,"with minimum  overhead,",CASSANDRA-15388,"with minimum  overhead,",,Architectural solution benefits and drawbacks,4:1332 - 4:1354,1,arjan
54:12,and the java allocation instrumenter actually invokes the measurement…,CASSANDRA-15388, and the java allocation instrumenter actually invokes the measurement method  anytime anything is allocated.,,Technology solution,4:1355 - 4:1463,1,arjan
54:13,"So itâĂŹs much slower, but super accurate, which is perfect  for this…",CASSANDRA-15388,"So itâĂŹs much slower, but super accurate, which is perfect  for this use case.
",,Architectural solution benefits and drawbacks,4:1465 - 4:1545,1,arjan
54:56,benedict,CASSANDRA-15388,benedict,,Comment,4:1549 - 4:1556,1,arjan
54:14,I wonder if it would be worth setting it up as a profler add-on for JM…,CASSANDRA-15388,I wonder if it would be worth setting it up as a profler add-on for JMH?,,"Architectural design configuration
Assumptions",4:1559 - 4:1630,2,arjan
54:15,It doesn’t _look_ like a super complicated API. _Absolutely not_  a de…,CASSANDRA-15388,"It doesn’t _look_ like a super complicated API. _Absolutely not_  a demand, just idle curiosity about how viable it might be.",,Architectural solution benefits and drawbacks,4:1753 - 4:1877,1,arjan
54:55,benedict,CASSANDRA-15388,benedict,,Comment,4:1883 - 4:1890,1,arjan
54:16,"The change LGTM, except a minor compilation breakage if the javaagent…",CASSANDRA-15388,"The change LGTM, except a minor compilation breakage if the javaagent isn’t  used.",,Architectural solution benefits and drawbacks,4:1893 - 4:1974,1,arjan
54:17,"It’s very much complementary with the work you’ve done, as it doesn’t…",CASSANDRA-15388,"It’s very much complementary with the work you’ve done, as it doesn’t track end-to-end  costs of compaction, only the isolated costs each of merge and deserialization (and not the  entire deserialization pipeline,",,Architectural design configuration,5:1 - 5:213,1,arjan
54:18,to keep it simple,CASSANDRA-15388,to keep it simple,,Architectural solution benefits and drawbacks,5:215 - 5:231,1,arjan
54:19,But I think it should capture the main  areas of expense and improveme…,CASSANDRA-15388,"But I think it should capture the main  areas of expense and improvement, and these tests have been informative in my other work  - certain data characteristics can lead to surprising results with a given approach.
",,"Architectural solution benefits and drawbacks
Assumptions",5:235 - 5:450,2,arjan
54:54,dcapwell,CASSANDRA-15388,dcapwell,,Comment,5:1349 - 5:1356,1,arjan
54:22,Personally would love,CASSANDRA-15388,Personally would love,,Architectural solution benefits and drawbacks,5:1359 - 5:1379,1,arjan
54:23,if test-memory target could go away in favor of testclasslist,CASSANDRA-15388, if test-memory target could go away in favor of testclasslist,,Architectural design configuration,5:1380 - 5:1441,1,arjan
54:24,so it matches the rest of CI.,CASSANDRA-15388,so it matches the rest of CI.,,Architectural solution benefits and drawbacks,5:1444 - 5:1472,1,arjan
54:25,"There is only one test right now so not a big issue, but something  th…",CASSANDRA-15388,"There is only one test right now so not a big issue, but something  that should change if ""enough"" tests get added.
",,Architectural design configuration,5:1474 - 5:1590,1,arjan
54:53,dcapwell,CASSANDRA-15388,dcapwell,,Comment,5:1695 - 5:1702,1,arjan
54:26,Sadly com.google.monitoring.runtime.instrumentation.AllocationRecorder…,CASSANDRA-15388,"Sadly com.google.monitoring.runtime.instrumentation.AllocationRecorder#getInstrumentation  is packaged protected,",,"Architectural solution benefits and drawbacks
Technology solution",5:1705 - 5:1817,2,arjan
54:28,would be great to use that to see,CASSANDRA-15388,would be great to use that to see,,Architectural solution benefits and drawbacks,5:1819 - 5:1851,1,arjan
54:27,if the agent is loaded.,CASSANDRA-15388," if the agent is loaded.
",,Technology solution,5:1852 - 5:1877,1,arjan
54:29,"To make make things clear, https://github.com/apache/cassandra/compare…",CASSANDRA-15388,"To make make things clear, https://github.com/apache/cassandra/compare/trunk...bdeggleston:15388#dif-  5d25f445e825fbeef166372877b810d1R140. it would be good if you did",,Architectural solution benefits and drawbacks,5:1878 - 5:2045,1,arjan
54:30,1 2  diff --git a/test/memory/org/apache/cassandra/db/compaction/  Com…,CASSANDRA-15388,"1 2  diff --git a/test/memory/org/apache/cassandra/db/compaction/  CompactionAllocationTest.java b/test/memory/org/apache/cassandra/db/compaction/  CompactionAllocationTest.java  3 4  index 6394b92e6d..53d11c9031 100644  5 6  --- a/test/memory/org/apache/cassandra/db/compaction/CompactionAllocationTest.java  7 8  +++ b/test/memory/org/apache/cassandra/db/compaction/CompactionAllocationTest.java  9  10 @@ -7  11 4,7 +74,7 @@ public class CompactionAllocationTest  12  13 private static final Logger logger = LoggerFactory.getLogger(  CompactionAllocationTest.class);  14  15 private static final ThreadMXBean threadMX = (ThreadMXBean) ManagementFactory.
getThreadMXBean();  16  17  18 - private static final boolean AGENT_MEASUREMENT = true;  19  20 + private static final boolean AGENT_MEASUREMENT = isAgentLoaded();  21  22  23 priva  24 te static final boolean PROFILING_READS = false;  25  26 private static final boolean PROFILING_COMPACTION = false;  27  28 @@ -153,6 +153,14 @@ public class CompactionAllocationTest  29  30 }  31  32 }  33  34  35 + private static boolean isAgentLoaded()  36  37 + {  38  39 + AgentMeasurement measurement = new AgentMeasurement();  40  41 + measurement.start();  42  43 + measurement.stop();  44  45 + return measureme  46 nt.objectsAllocated != 0 || measurement.bytesAllocated != 0;  47  48 + }  49  50 +  51  52 @BeforeClass  53  54 public static void setupClass() throws Throwable  55  56 {",,Architectural component behavior and structure,6:1 - 6:1439,1,arjan
54:31,This way we only use the agent if loaded.,CASSANDRA-15388,This way we only use the agent if loaded.,,Architectural solution benefits and drawbacks,7:1 - 7:41,1,arjan
54:32,Right now you don’t modify the IDE fles,CASSANDRA-15388,Right now you don’t modify the IDE fles,,Architectural component behavior and structure,7:43 - 7:81,1,arjan
54:33,so  if you run the test in any IDE it will always log that you allocat…,CASSANDRA-15388,so  if you run the test in any IDE it will always log that you allocated 0 bytes;,,Architectural solution benefits and drawbacks,7:84 - 7:164,1,arjan
54:34,with the patch  I posted it uses the thread mbean.,CASSANDRA-15388," with the patch  I posted it uses the thread mbean.
",,Architectural solution benefits and drawbacks,7:165 - 7:217,1,arjan
54:35,Make this overridable; a system properly would be fne,CASSANDRA-15388,Make this overridable; a system properly would be fne,,Architectural component behavior and structure,7:433 - 7:485,1,arjan
54:36,Why all the sleeps?,CASSANDRA-15388,Why all the sleeps?,,Architectural component behavior and structure,7:745 - 7:763,1,arjan
54:37,"e  Without:  1 2  INFO [main] 2020-02-14 16:24:20,357 CompactionAlloca…",CASSANDRA-15388,"e  Without:  1 2  INFO [main] 2020-02-14 16:24:20,357 CompactionAllocationTest.java:433 - ***  tinyNonOverlapping3 reads summary  3 4  INFO [main] 2020-02-14 16:24:20,357 CompactionAllocationTest.java:434 - 11592072  bytes, 4293 /read, 116490000 cpu  5 6  INFO [main] 2020-02-14 16:24:20,357 CompactionAllocationTest.java:435 - ***  tinyNonOverlapping3 compaction summary  7 8  INFO [main] 2020-02-14 16:24:20,35  9 7 CompactionAllocationTest.java:436 - 10893688 bytes, 4034 /partition, 4034 /row,  93812000 cpu  With:  1 2  INFO [main] 2020-02-14 16:25:17,491 CompactionAllocationTest.java:433 - ***  tinyNonOverlapping3 reads summary  3 4  INFO [main] 2020-02-14 16:25:17,491 CompactionAllocationTest.java:434 - 11589808  bytes, 4292 /read, 109551000 cpu  5 6  INFO [main] 2020-02-14 16:25:17,491 CompactionAllocationTest.java:435 - ***  tinyNonOverlapping3 compaction summary  6
7 8  INFO [main] 2020-02-14 16:25:17,49  9 1 CompactionAllocationTest.java:436 - 10893848 bytes, 4034 /partition, 4034 /row,  74584000 cpu  The only real change I see is in terms of CPU, which makes sense since you just track  total time (though implemented from mbean).
",,Architectural solution benefits and drawbacks,7:811 - 8:272,1,arjan
54:38,"Looks like you are trying to create a report, but targeting humans?",CASSANDRA-15388,"Looks like you are trying to create a report, but targeting humans?",,Architectural component behavior and structure,8:506 - 8:572,1,arjan
54:39,Can you move the  strings out of the logger and into something like St…,CASSANDRA-15388,Can you move the  strings out of the logger and into something like StringBuilder? Once you complete you can  add to the logger for now,,Architectural component behavior and structure,8:574 - 8:708,1,arjan
54:40,it would be nice,CASSANDRA-15388,it would be nice ,,Architectural solution benefits and drawbacks,8:812 - 8:828,1,arjan
54:41,if you asserted the bounds of memory allocated rather  than log.,CASSANDRA-15388,if you asserted the bounds of memory allocated rather  than log.,,Architectural component behavior and structure,8:829 - 8:892,1,arjan
54:52,bdeggleston,CASSANDRA-15388,bdeggleston,,Comment,8:899 - 8:909,1,arjan
54:42,This is basically some ad-hoc code intended as a tool to identify opti…,CASSANDRA-15388,"This is basically some ad-hoc code intended as a tool to identify optimization opportu-  nities, and quantify changes. It’s being contributed so the methodology can be reviewed, to  quantify / justify the changes in the other tickets, and so that it can be re-used / built upon  7
for later work. This is not meant to be in a state where it can be plugged into our ci process.
",,Architectural solution benefits and drawbacks,8:1350 - 9:97,1,arjan
54:43,I think that we _should_ have allocation measurement as part of a perf…,CASSANDRA-15388,"I think that we _should_ have allocation measurement as part of a performance test suite,",,"Architectural component behavior and structure
Assumptions",9:98 - 9:186,2,arjan
54:44,I also don’t think it’s a good use of time to start mak-  ing changes…,CASSANDRA-15388,"I also don’t think it’s a good use of time to start mak-  ing changes like these, because they’ll make it more awkward to use this test as currently  intended, and will probably just be re-written once we have a better idea of what we want  a performance test suite to do.
",,Architectural solution benefits and drawbacks,9:228 - 9:501,1,arjan
54:45,The ones when profling is to give you time to start and stop recording…,CASSANDRA-15388,"The ones when profling is to give you time to start and stop recording. The one after  compactions was to work around some issues with ending recording immediately after com-  pactions. The one at the end is for logging. When running the test in IntelliJ, the report  doesn’t always make it to the output without them.
",,Architectural solution benefits and drawbacks,9:539 - 9:858,1,arjan
54:51,dcapwell,CASSANDRA-15388,dcapwell,,Comment,9:863 - 9:870,1,arjan
54:46,"Sure, would be good for this to evolve over time but not a blocker for…",CASSANDRA-15388,"Sure, would be good for this to evolve over time but not a blocker for this.
",,Architectural solution benefits and drawbacks,9:958 - 9:1035,1,arjan
54:47,"New changes are fne, only nits really left",CASSANDRA-15388,"New changes are fne, only nits really left",,Architectural solution benefits and drawbacks,9:1036 - 9:1077,1,arjan
54:48,though would prefer isAgentLoaded,CASSANDRA-15388,though would prefer isAgentLoaded,,Architectural component behavior and structure,9:1080 - 9:1112,1,arjan
54:49,since logs are  too dense its easy to miss,CASSANDRA-15388, since logs are  too dense its easy to miss,,Architectural solution benefits and drawbacks,9:1113 - 9:1155,1,arjan
54:50,+1,CASSANDRA-15388,+1,,Architectural solution benefits and drawbacks,9:1159 - 9:1160,1,arjan
55:1,Add AssertJ test dependency,CASSANDRA-15631,Add AssertJ test dependency,,Technology solution,3:53 - 3:79,1,arjan
55:2,See [proposal|https://lists.apache.org/thread.html/rc562ec47578d0ae6f3…,CASSANDRA-15631,See [proposal|https://lists.apache.org/thread.html/rc562ec47578d0ae6f346ba9e3d7469c1cd3f8b521a72ddcb2accc47b%40%  The goal is to add [AssertJ|https://assertj.github.io/doc/] to the test framework,,Technology solution,3:99 - 3:293,1,arjan
55:3,to allow for  more comprehensible and easier to write tests.,CASSANDRA-15631,"to allow for  more comprehensible and easier to write tests.
",,Architectural solution benefits and drawbacks,3:295 - 3:356,1,arjan
55:35,jmckenzie,CASSANDRA-15631,jmckenzie,,Comment,3:440 - 3:448,1,arjan
55:4,I vote we add it as an option for 4.0.,CASSANDRA-15631,I vote we add it as an option for 4.0.,,Architectural design configuration,3:451 - 3:488,1,arjan
55:5,Basically zero risk afaict.,CASSANDRA-15631,"Basically zero risk afaict.
",,Architectural solution benefits and drawbacks,3:490 - 3:518,1,arjan
55:34,cscotta,CASSANDRA-15631,cscotta,,Comment,3:578 - 3:584,1,arjan
55:6,No concern from me âĂŞ though I’m also not a stakeholder. Discussion o…,CASSANDRA-15631, No concern from me âĂŞ though I’m also not a stakeholder. Discussion on the  dev list was supportive. ð§ŚŊ,,Architectural solution benefits and drawbacks,3:586 - 3:692,1,arjan
55:33,newkek,CASSANDRA-15631,newkek,,Comment,4:133 - 4:138,1,arjan
55:7,"As proposed on the ML, I added the test dependency",CASSANDRA-15631,"As proposed on the ML, I added the test dependency",,Technology solution,4:216 - 4:265,1,arjan
55:8,also went ahead and re-wrote  one randomly chosen test to show some ex…,CASSANDRA-15631,"also went ahead and re-wrote  one randomly chosen test to show some examples of what a full test written with AssertJ  assertions would look like. Also included a custom assertions to show it helps with under-  standing more clearly intent of tests.
",,Architectural component behavior and structure,4:271 - 4:521,1,arjan
55:32,dcapwell,CASSANDRA-15631,dcapwell,,Comment,4:525 - 4:532,1,arjan
55:9,Did a frst pass and overall LGTM;,CASSANDRA-15631,Did a frst pass and overall LGTM;,,Architectural solution benefits and drawbacks,4:535 - 4:567,1,arjan
55:16,"3.15 is out, maybe use that?",CASSANDRA-15631,"3.15 is out, maybe use that?
",,Technology solution,4:717 - 4:746,1,arjan
55:10,"It slightly  changes the original test behavior; I don’t mind, but it…",CASSANDRA-15631," It slightly  changes the original test behavior; I don’t mind, but it is a semantic diference.
",,Architectural solution benefits and drawbacks,4:911 - 4:1007,1,arjan
55:11,should we change the assert message to be more  clear?,CASSANDRA-15631,should we change the assert message to be more  clear?,,Architectural component behavior and structure,4:1284 - 4:1337,1,arjan
55:12,This will only print out the numbers,CASSANDRA-15631,This will only print out the numbers,,Architectural component behavior and structure,4:1339 - 4:1374,1,arjan
55:13,e to comment that they are object  sizes.,CASSANDRA-15631,"e to comment that they are object  sizes.
",,Architectural solution benefits and drawbacks,4:1387 - 4:1429,1,arjan
55:14,to comment that they are object  sizes.,CASSANDRA-15631,"to comment that they are object  sizes.
",,Architectural component behavior and structure,4:1389 - 4:1429,1,arjan
55:31,newkek,CASSANDRA-15631,newkek,,Comment,4:1520 - 4:1525,1,arjan
55:15,I put the AssertJ dependency to 3.15.,CASSANDRA-15631,"I put the AssertJ dependency to 3.15.
",,Technology solution,4:1711 - 4:1749,1,arjan
55:17,"Right, I had rounded because {{measureDeep()}} returns a long and the…",CASSANDRA-15631,"Right, I had rounded because {{measureDeep()}} returns a long and the signature of {{is-  LessThan()}} doesn’t allow for a double",,Architectural solution benefits and drawbacks,4:1897 - 4:2025,1,arjan
55:18,but instead I should change the compared value to  a double,CASSANDRA-15631,but instead I should change the compared value to  a double,,Architectural component behavior and structure,4:2028 - 4:2086,1,arjan
55:19,so I don’t have to round.,CASSANDRA-15631,"so I don’t have to round.
",,Architectural solution benefits and drawbacks,4:2088 - 4:2114,1,arjan
55:20,Not sure which assert you were referring to since the code has changed…,CASSANDRA-15631,"Not sure which assert you were referring to since the code has changed since your com-  ment, but tracing back to the line number you linked on trunk points to the assert on {{ses-  sion.getSyncingTasks().size()}}. In my branch it was changed to {{assertThat(session.getSyncingTasks()).isEmpty()  so the functionality should be equivalent",,Architectural component behavior and structure,5:1 - 5:338,1,arjan
55:21,"Makes sense, will change that.",CASSANDRA-15631,"Makes sense, will change that.
",,Architectural solution benefits and drawbacks,5:560 - 5:591,1,arjan
55:22,"For CI, you can see the runs at https://app.circleci.com/pipelines/git…",CASSANDRA-15631,"For CI, you can see the runs at https://app.circleci.com/pipelines/github/newkek/cassandra?branch=15631-  trunk . Latest run (#17) had a failure that didn’t seem related to these changes, and the  test passed when I ran it locally.
",,Architectural solution benefits and drawbacks,5:592 - 5:824,1,arjan
55:30,dcapwell,CASSANDRA-15631,dcapwell,,Comment,5:1039 - 5:1046,1,arjan
55:23,LGTM.,CASSANDRA-15631,"LGTM.
",,Architectural solution benefits and drawbacks,5:1463 - 5:1469,1,arjan
55:24,For the most part LGTM. I would +1 but I want to look closer at the Ju…,CASSANDRA-15631,For the most part LGTM. I would +1 but I want to look closer at the Junit 5 thing,,Architectural solution benefits and drawbacks,5:1645 - 5:1725,1,arjan
55:29,newkek,CASSANDRA-15631,newkek,,Comment,6:5 - 6:10,1,arjan
55:25,It seems a transitive dependency is trying to be pulled from maven via…,CASSANDRA-15631,"It seems a transitive dependency is trying to be pulled from maven via http and not https,  and consequently it canâĂŹt because of new norms maven repo doesnâĂŹt support HTTP  anymore.
",,Motivation of design issue,6:93 - 6:278,1,arjan
55:26,"I.e. I have added the assertj-core dependency, and its parent, assertj…",CASSANDRA-15631,"I.e. I have added the assertj-core dependency, and its parent, assertj-parent-pom is try-  ing to pull a dependency, but ant is trying to pull it via http.
It seems to be related to whatâĂŹs described in here: https://clutcher.github.io/post/hybris/maven_central_reposi  Starting from January 15, 2020 maven central repository is not supporting  access via http://repo1.maven.org/maven2 due to security reasons. Unfortunately  under the hood hybris uses ant-maven-task, which is not maintained since  2011 and has hardcoded link to http version of maven central.
Without the explicit dependency we get an error like:  /Users/kevingallardo/Documents/workspace/cassandra-trunk/build.xml:905:  Unable to resolve artifact: Unable to get dependency information: Unable  to read the metadata file for artifact ’org.assertj:assertj-core:jar’:  POM ’org.junit:junit-bom’ not found in repository: Unable to download  the artifact from any repository  org.junit:junit-bom:pom:5.6.0  from the specified remote repositories:  central (http://repo1.maven.org/maven2)  for project org.junit:junit-bom  5
org.assertj:assertj-core:jar:3.15.0  from the specified remote repositories:  apache (https://repo.maven.apache.org/maven2),  central (https://repo1.maven.org/maven2)  Path to dependency:  1) org.apache.cassandra:cassandra-test-deps:jar:4.0-alpha4-SNAPSHOT",,Motivation of design issue,6:279 - 7:256,1,arjan
55:28,dcapwell,CASSANDRA-15631,dcapwell,,Comment,7:263 - 7:270,1,arjan
55:27,LGTM +1,CASSANDRA-15631,LGTM +1,,Architectural solution benefits and drawbacks,7:470 - 7:476,1,arjan
56:1,Add bytebuddy support for in-jvm dtests,CASSANDRA-15851,Add bytebuddy support for in-jvm dtests,,Technology solution,3:53 - 3:91,1,arjan
56:2,"Old python dtests support byteman, but that is quite horrible to work…",CASSANDRA-15851,"Old python dtests support byteman, but that is quite horrible to work with,",,Technical debt,3:111 - 3:185,1,arjan
56:3,"[bytebuddy|https://bytebuddy.net/#/]  is much better,",CASSANDRA-15851,"[bytebuddy|https://bytebuddy.net/#/]  is much better,",,Architectural solution benefits and drawbacks,3:187 - 3:239,1,arjan
56:4,so we should add support for that in the in-jvm dtests.,CASSANDRA-15851,"so we should add support for that in the in-jvm dtests.
",,Technology solution,3:241 - 3:297,1,arjan
56:12,marcuse,CASSANDRA-15851,marcuse,,Comment,3:381 - 3:387,1,arjan
56:7,dtest-api PR (already merged): https://github.com/apache/cassandra-in-…,CASSANDRA-15851,dtest-api PR (already merged): https://github.com/apache/cassandra-in-jvm-  dtest-api/pull/11,,Architectural design configuration,3:390 - 3:482,1,arjan
56:5,this gives us access to the class loader before any classes have been…,CASSANDRA-15851,this gives us access to the class loader before any classes have been  loaded.,,Architectural solution benefits and drawbacks,3:486 - 3:563,1,arjan
56:6,this includes  changes to download snapshots from repository.apache.or…,CASSANDRA-15851,this includes  changes to download snapshots from repository.apache.org which we probably should drop  once we have dtest-api 0.0.3 released,,"Architectural design configuration
Assumptions",3:671 - 3:810,2,arjan
56:11,dcapwell,CASSANDRA-15851,dcapwell,,Comment,3:816 - 3:823,1,arjan
56:8,"Overall LGTM, only a small thing; +1",CASSANDRA-15851,"Overall LGTM, only a small thing; +1",,Architectural solution benefits and drawbacks,3:1076 - 3:1111,1,arjan
56:10,dcapwell,CASSANDRA-15851,dcapwell,,Comment,5:4 - 5:11,1,arjan
56:9,"Patches LGTM, +1 to them",CASSANDRA-15851,"Patches LGTM, +1 to them",,Architectural solution benefits and drawbacks,5:14 - 5:37,1,arjan
57:1,Deprecate Pig support in 2.2 and remove it in 3.0,CASSANDRA-10542,Deprecate Pig support in 2.2 and remove it in 3.0,,Technology solution,3:53 - 3:101,1,arjan
57:2,"Nobody’s currently responsible for Pig code. As a result, there is nob…",CASSANDRA-10542,"Nobody’s currently responsible for Pig code. As a result, there is nobody to fx the issues, or  even fx the failing tests (of which we unfortunately have plenty). Those tests take time to run,  constantly hang, and fail with cryptic errors that we don’t know how to fx and don’t have enough  resources to investigate.
",,Architectural solution benefits and drawbacks,3:121 - 3:439,1,arjan
57:3,Thus I propose we deprecate Pig support in 2.2 and remove it in 3.0.,CASSANDRA-10542,"Thus I propose we deprecate Pig support in 2.2 and remove it in 3.0.
",,Technology solution,3:440 - 3:509,1,arjan
57:6,slebresne,CASSANDRA-10542,slebresne,,Comment,3:613 - 3:621,1,arjan
57:4,I agree. No one in the core maintainers has any expertise of Pig itsel…,CASSANDRA-10542," I agree. No one in the core maintainers has any expertise of Pig itself and our  Pig code in particular, and no one else has step up to maintain that code properly. And  it’s something that can totally live outside of the main project if others have willingness to  maintain it.
",,Architectural solution benefits and drawbacks,3:623 - 3:903,1,arjan
57:7,slebresne,CASSANDRA-10542,slebresne,,Comment,3:1040 - 3:1048,1,arjan
57:5,"Assuming nothing breaks in the unit test (for the 3.0 patch), +1 to bo…",CASSANDRA-10542,"Assuming nothing breaks in the unit test (for the 3.0 patch), +1 to both patches.
",,Architectural solution benefits and drawbacks,3:1051 - 3:1133,1,arjan
58:1,GraphiteReporter does not reconnect if graphite restarts,CASSANDRA-12924,GraphiteReporter does not reconnect if graphite restarts,,Run-time quality issues,3:53 - 3:108,1,arjan
58:2,Seems like GraphiteReporter does not reconnect after graphite is resta…,CASSANDRA-12924,Seems like GraphiteReporter does not reconnect after graphite is restarted. The consequence is  complete loss of reported metrics until Cassandra restarts. Logs show this every minute:,,Run-time quality issues,3:128 - 3:311,1,arjan
58:30,cnlwsu,CASSANDRA-12924,cnlwsu,,Comment,5:116 - 5:121,1,arjan
58:3,"This is part of metrics not Cassandra, it has ticket/fx here:  https:/…",CASSANDRA-12924,"This is part of metrics not Cassandra, it has ticket/fx here:  https://github.com/dropwizard/metrics/issues/694",,Technology solution,5:124 - 5:234,1,arjan
58:4,"We are using 3.1.0,",CASSANDRA-12924,"We are using 3.1.0,",,Existing system architecture description,5:237 - 5:255,1,arjan
58:5,whenever its updated,CASSANDRA-12924,whenever its updated,,Technology solution,5:257 - 5:276,1,arjan
58:6,it should fx the problem.,CASSANDRA-12924,"it should fx the problem.
",,Architectural solution benefits and drawbacks,5:278 - 5:304,1,arjan
58:29,ostefano,CASSANDRA-12924,ostefano,,Comment,5:308 - 5:315,1,arjan
58:7,Would it be ok to mix minor versions?,CASSANDRA-12924,"Would it be ok to mix minor versions?
",,"Architectural design configuration
Assumptions",5:318 - 5:356,2,arjan
58:8,"In other words, C* provides metrics-core 3.1.0 while metrics-graphite…",CASSANDRA-12924,"In other words, C* provides metrics-core 3.1.0 while metrics-graphite needs to be included  by the user.Could I just deploy metrics-graphite 3.1.2 ",,Architectural design configuration,5:357 - 5:503,1,arjan
58:10,metrics-core 3.1.0,CASSANDRA-12924,metrics-core 3.1.0 ,,Technology solution,5:385 - 5:403,1,arjan
58:11,metrics-graphite 3.1.2,CASSANDRA-12924,metrics-graphite 3.1.2,,Technology solution,5:481 - 5:502,1,arjan
58:9,"fx the problem, right?",CASSANDRA-12924,"fx the problem, right?
",,"Architectural solution benefits and drawbacks
Assumptions",5:508 - 5:531,2,arjan
58:28,andres.march@gmail.com,CASSANDRA-12924,andres.march@gmail.com,,Comment,5:535 - 5:556,1,arjan
58:12,This would be really nice to include in 3.11,CASSANDRA-12924,This would be really nice to include in 3.11,,Architectural solution benefits and drawbacks,5:605 - 5:648,1,arjan
58:13,metrics-core update is required.,CASSANDRA-12924,"metrics-core update is required.
",,Technology solution,5:651 - 5:684,1,arjan
58:27,jjirsa,CASSANDRA-12924,jjirsa,,Comment,5:761 - 5:766,1,arjan
58:14,"3.11.0 already went to vote; unless a member of the PMC objects, it’s…",CASSANDRA-12924,"3.11.0 already went to vote; unless a member of the PMC objects, it’s unlikely we’ll  be able to include it. However, it should be easy enough to fx after the fact - just drop in  the new jar at runtime, yes?
",,"Architectural design configuration
Assumptions",5:769 - 5:978,2,arjan
58:26,mck,CASSANDRA-12924,mck,,Comment,5:1019 - 5:1021,1,arjan
58:15,It makes sense to back-port it to 3.11,CASSANDRA-12924,It makes sense to back-port it to 3.11,,Technology solution,5:1036 - 5:1073,1,arjan
58:16,It’s a stabilisation issue.,CASSANDRA-12924,"It’s a stabilisation issue.
",,Architectural solution benefits and drawbacks,5:1776 - 5:1804,1,arjan
58:25,jjirsa,CASSANDRA-12924,jjirsa,,Comment,5:1809 - 5:1814,1,arjan
58:17,"I don’t strongly object, but let’s loop in some other people with vote…",CASSANDRA-12924," I don’t strongly object, but let’s loop in some other people with votes to see if they  do.
",,Architectural solution benefits and drawbacks,5:1816 - 5:1909,1,arjan
58:24,aleksey,CASSANDRA-12924,aleksey,,Comment,6:5 - 6:11,1,arjan
58:18,"I think it’s fne, as it’s a minor to minor upgrade, and presumably con…",CASSANDRA-12924," I think it’s fne, as it’s a minor to minor upgrade, and presumably contains no  breaking API changes that would afects metrics consumers on any level - but don’t have  time to invest into proving it. So count me in as +0.
",,Architectural solution benefits and drawbacks,6:13 - 6:236,1,arjan
58:23,JoshuaMcKenzie,CASSANDRA-12924,JoshuaMcKenzie,,Comment,6:241 - 6:254,1,arjan
58:19,"+0 from me as well w/this assumption, +1 if it’s known. In agreement w…",CASSANDRA-12924,"+0 from me as well w/this assumption, +1 if it’s known. In agreement w/ay on this one.
",,Architectural solution benefits and drawbacks,6:318 - 6:405,1,arjan
58:22,mck,CASSANDRA-12924,mck,,Comment,6:410 - 6:412,1,arjan
58:20,Good call. I’ve ran-through the [change list|http://example.com] and […,CASSANDRA-12924,"Good call. I’ve ran-through the [change list|http://example.com] and [code difs|https://github.com/dropwizard/me  from 3.1.0 to 3.1.5, checking for anything that must cause trouble.
Nothing stands out.
",,Architectural solution benefits and drawbacks,6:474 - 6:677,1,arjan
58:21,Public signature changes are:  - {{Slf4jReporter.Builder.prefxedWith(.…,CASSANDRA-12924,"Public signature changes are:  - {{Slf4jReporter.Builder.prefxedWith(..)}} added, and  - {{Slf4jReporter.LoggerProxy.isEnabled()}} added.
Noticeable behaviour changes:  - TCP connections are no longer re-used when sending the metrics,  - DNS retries can now happen, and  - {{metrics-jvm}}’s {{MemoryUsageGaugeSet}} has new metrics: max, used, committed,  init; for each memory pool.
",,Technology solution,6:678 - 6:1062,1,arjan
59:1,update slf4j dependency to 1.7.21,CASSANDRA-12996,update slf4j dependency to 1.7.21,,Technology solution,3:53 - 3:85,1,arjan
59:2,Cassandra 3.11.0 is about to be included in Fedora. There are some twe…,CASSANDRA-12996,"Cassandra 3.11.0 is about to be included in Fedora. There are some tweaks to the sources we need  to do in order to successfully build it. Cassandra depends on slf4j 1.7.7, but In Fedora we have  the latest upstream version 1.7.21 It was released some time ago on April 6 2016.",,Contextual constraints,3:105 - 3:381,1,arjan
59:3,I attached a  patch updating Cassandra sources to depend on the newer…,CASSANDRA-12996,I attached a  patch updating Cassandra sources to depend on the newer slf4j sources. The only actual change  is the number of parameters accepted by SubstituteLogger class. Please consider updating.,,Technology solution,3:383 - 3:580,1,arjan
59:68,spod,CASSANDRA-12996,spod,,Comment,3:782 - 3:785,1,arjan
59:4,It doesn’t sound like you intend to include all libraries that are par…,CASSANDRA-12996,"It doesn’t sound like you intend to include all libraries that are part of the  Cassandra release, as part of the Fedora package?",,"Architectural component behavior and structure
Assumptions",3:877 - 3:1005,2,arjan
59:5,"Are libs, such as slf4j and airline, handled  as separate packages?",CASSANDRA-12996,"Are libs, such as slf4j and airline, handled  as separate packages?",,"Architectural component behavior and structure
Assumptions",3:1007 - 3:1073,2,arjan
59:6,"In this case, are you asking to update all versions we use with the  c…",CASSANDRA-12996,"In this case, are you asking to update all versions we use with the  current releases from these packages?",,"Architectural component behavior and structure
Assumptions",3:1075 - 3:1180,2,arjan
59:67,trepik,CASSANDRA-12996,trepik,,Comment,3:1186 - 3:1191,1,arjan
59:7,We handle all the dependencies as separate packages in Fedora,CASSANDRA-12996,We handle all the dependencies as separate packages in Fedora,,Architectural component behavior and structure,3:1194 - 3:1254,1,arjan
59:8,We handle all the dependencies as separate packages in Fedora. Therefo…,CASSANDRA-12996,We handle all the dependencies as separate packages in Fedora. Therefore it would  be awesome,,Architectural solution benefits and drawbacks,3:1194 - 3:1286,1,arjan
59:9,if the latest cassandra would use the latest but stable versions of de…,CASSANDRA-12996," if the latest cassandra would use the latest but stable versions of dependencies.
",,Architectural component behavior and structure,3:1287 - 3:1370,1,arjan
59:10,So far I came across only these two to be incompatible,CASSANDRA-12996,So far I came across only these two to be incompatible,,Contextual constraints,4:1 - 4:54,1,arjan
59:12,We solve it by patching the cassan-  dra sources,CASSANDRA-12996, We solve it by patching the cassan-  dra sources,,Architectural component behavior and structure,4:56 - 4:104,1,arjan
59:13,but in the best case scenario we’d like to live without these patches…,CASSANDRA-12996,"but in the best case scenario we’d like to live without these patches and have  cassandra as close as possible to upstream.
",,"Architectural component behavior and structure
Architectural solution benefits and drawbacks",4:106 - 4:230,2,arjan
59:66,spod,CASSANDRA-12996,spod,,Comment,4:234 - 4:237,1,arjan
59:14,"If having Cassandra as ""close as possible to upstream"" is desired, why…",CASSANDRA-12996,"If having Cassandra as ""close as possible to upstream"" is desired, why not integrating  our ofcial RPM (see CASSANDRA-13433)?
",,Architectural component behavior and structure,4:240 - 4:365,1,arjan
59:65,trepik,CASSANDRA-12996,trepik,,Comment,4:370 - 4:375,1,arjan
59:15,Let’s assume we’ve integrated your ofcial RPM and a happy Fedora user…,CASSANDRA-12996,"Let’s assume we’ve integrated your ofcial RPM and a happy Fedora user installed  this RPM. What he got is cassandra but also many other jars in lib folder as dependencies  (slf4j, airline and more). But these jars could have already been comfortably sitting in the  system before the installation. What we want is to avoid duplicity and confusion.",,Architectural solution benefits and drawbacks,4:378 - 4:724,1,arjan
59:16,So we  package each jar as a separate package and make these depend on…,CASSANDRA-12996,"So we  package each jar as a separate package and make these depend one on each other.
So Yes as close as possible to upstream, BUT without bundling.",,Architectural component behavior and structure,4:726 - 4:875,1,arjan
59:64,snazy,CASSANDRA-12996,snazy,,Comment,4:881 - 4:885,1,arjan
59:17,I don’t get the point why C* _bundled_ libs must use the exact same  v…,CASSANDRA-12996,"I don’t get the point why C* _bundled_ libs must use the exact same  version as some distribution’s package for library X and how that would not confict with  other distributions like (to stick RH’s ones and not considering other distributions) CentOS  or RHEL across _all_ supported versions? Don’t get me wrong, but IMO this will lead to a  never ending story about patching a self-contained project because some distribution X or Y  or Z updated some package and in a not-overseeable list of permutations of library versions.
By the way, then you’re forcing users to upgrade to other major versions just because the  package maintainers decided to upgrade some library. I don’t see the value of this - except it  may comply with an IMO artifcial rule that each individual jar dependency needs to be in  a separate RPM. In practice, the opposite is actually true: it causes a lot of confusion and  pain to deal with these one-RPM-per-jar thing if you _need_ something from a potentially  non-standard repo.
",,Architectural solution benefits and drawbacks,4:899 - 4:1909,1,arjan
59:63,spod,CASSANDRA-12996,spod,,Comment,4:1913 - 4:1916,1,arjan
59:18,"Leaving the Fedora specifc discussion aside, we still should update to…",CASSANDRA-12996,"Leaving the Fedora specifc discussion aside, we still should update to the latest slf4j  version for 4.0 as part of CASSANDRA-13361.
",,"Architectural solution benefits and drawbacks
Technology solution",4:1919 - 4:2052,2,arjan
59:62,trepik,CASSANDRA-12996,trepik,,Comment,4:2332 - 4:2337,1,arjan
59:19,"I don’t think C* should follow any distributions,",CASSANDRA-12996," I don’t think C* should follow any distributions,",,"Architectural component behavior and structure
Architectural solution benefits and drawbacks
Assumptions",4:2339 - 4:2388,3,arjan
59:20,the thing I’m suggesting is updating  the trunk of C* or the 4.0 branc…,CASSANDRA-12996,the thing I’m suggesting is updating  the trunk of C* or the 4.0 branch.,,Architectural design configuration,4:2390 - 4:2461,1,arjan
59:21,"Following rather upstream, and updating to the latest  upstream releas…",CASSANDRA-12996,"Following rather upstream, and updating to the latest  upstream release is perfectly fne.",,"Architectural component behavior and structure
Architectural solution benefits and drawbacks",4:2463 - 4:2551,2,arjan
59:22,I mean if some Linux distribution has adopted newer  version of the li…,CASSANDRA-12996,"I mean if some Linux distribution has adopted newer  version of the library I guess it was for a reason. Most likely the newer version provides  some important fxes and new features improving the overall quality. I don’t see any point  in staying with the old versions.
",,"Architectural design configuration
Architectural solution benefits and drawbacks",4:2553 - 4:2823,2,arjan
59:61,snazy,CASSANDRA-12996,snazy,,Comment,4:2827 - 4:2831,1,arjan
59:23,I don’t object an update of slf4j in trunk.,CASSANDRA-12996,"I don’t object an update of slf4j in trunk.
",,Architectural solution benefits and drawbacks,4:2834 - 4:2878,1,arjan
59:24,Patch LGTM.,CASSANDRA-12996,"Patch LGTM.
",,Architectural solution benefits and drawbacks,4:2887 - 4:2899,1,arjan
59:25,In the past we already updated some libraries if necessary and if then…,CASSANDRA-12996,"In the past we already updated some libraries if necessary and if then in trunk. But not just  because it’s a newer version - that doesn’t justify a change in a stable branch IMO.
TBH, I would not just assume that a newer patch version just fxes issues - new issues  can be introduced and afect systems seriously.
",,Architectural solution benefits and drawbacks,4:2900 - 4:3215,1,arjan
59:60,trepik,CASSANDRA-12996,trepik,,Comment,4:3219 - 4:3224,1,arjan
59:26,"Agree that new version may introduce new issues, therefore you have th…",CASSANDRA-12996,"Agree that new version may introduce new issues, therefore you have the tests, to  check it out.
",,Architectural solution benefits and drawbacks,4:3227 - 4:3324,1,arjan
59:27,"Thanks [~spod] for the initiative, good work.",CASSANDRA-12996,"Thanks [~spod] for the initiative, good work.
",,Architectural solution benefits and drawbacks,4:3325 - 4:3371,1,arjan
59:59,snazy,CASSANDRA-12996,snazy,,Comment,8:1113 - 8:1117,1,arjan
59:30,"The ""trick"" was to add {{slf4j-api}} to {{<artifact:pom id=""build-deps…",CASSANDRA-12996,"The ""trick"" was to add {{slf4j-api}} to {{<artifact:pom id=""build-deps-pom-sources""}}.
",,Architectural component behavior and structure,8:1293 - 8:1380,1,arjan
59:58,jay.zhuang,CASSANDRA-12996,jay.zhuang,,Comment,8:1650 - 8:1659,1,arjan
59:28,But it’s better  to have the same version of the jar in the classpath.,CASSANDRA-12996,But it’s better  to have the same version of the jar in the classpath. ,,Architectural component behavior and structure,8:1821 - 8:1891,1,arjan
59:29,The change looks good to me.,CASSANDRA-12996,"The change looks good to me.
",,Architectural solution benefits and drawbacks,8:1892 - 8:1921,1,arjan
59:57,spod,CASSANDRA-12996,spod,,Comment,8:1926 - 8:1929,1,arjan
59:31,"Tbh I’d prefer not to add the  slf4j dependency to the build-deps-pom,",CASSANDRA-12996,"Tbh I’d prefer not to add the  slf4j dependency to the build-deps-pom,",,Architectural component behavior and structure,8:1984 - 8:2053,1,arjan
59:32,as it really isn’t a dedicated build tool dependency.,CASSANDRA-12996," as it really isn’t a dedicated build tool dependency.
",,Architectural solution benefits and drawbacks,8:2054 - 8:2109,1,arjan
59:33,Using exclude statements in the parent pom,CASSANDRA-12996,Using exclude statements in the parent pom,,Architectural component behavior and structure,8:2110 - 8:2151,1,arjan
59:34,should be cleaner and should prevent this kind  of problems in other t…,CASSANDRA-12996,"should be cleaner and should prevent this kind  of problems in other targets/poms.
",,Architectural solution benefits and drawbacks,8:2153 - 8:2236,1,arjan
59:35,The build.xml as a whole is pretty messy when it comes to dependencies…,CASSANDRA-12996,The build.xml as a whole is pretty messy when it comes to dependencies. ,,Technical debt,8:2481 - 8:2552,1,arjan
59:36,E.g. I really  wonder if we need to have things like netty or the data…,CASSANDRA-12996,E.g. I really  wonder if we need to have things like netty or the datastax driver in build-deps-pom.,,"Assumptions
Technical debt",8:2553 - 8:2652,2,arjan
59:56,jasonstack,CASSANDRA-12996,jasonstack,,Comment,9:120 - 9:129,1,arjan
59:37,thanks for upgrading the libraries. but it had some  unexpected change…,CASSANDRA-12996,thanks for upgrading the libraries. but it had some  unexpected changes in logging,,Architectural solution benefits and drawbacks,9:152 - 9:233,1,arjan
59:55,snazy,CASSANDRA-12996,snazy,,Comment,9:269 - 9:273,1,arjan
59:38,True & me neither.,CASSANDRA-12996,True & me neither.,,Architectural solution benefits and drawbacks,9:346 - 9:363,1,arjan
59:39,"But otherwise you still get 1.7.7 or 1.7.12 in there,",CASSANDRA-12996,"But otherwise you still get 1.7.7 or 1.7.12 in there,",,Architectural component behavior and structure,9:365 - 9:417,1,arjan
59:40,"which is also not  good, because the exclusions alone don’t work (that…",CASSANDRA-12996,"which is also not  good, because the exclusions alone don’t work (that was my frst attempt, too).
",,Architectural solution benefits and drawbacks,9:419 - 9:517,1,arjan
59:41,I’d prefer to put it in there for now and then clean it up in the foll…,CASSANDRA-12996,"I’d prefer to put it in there for now and then clean it up in the follow-up you created.
",,Architectural component behavior and structure,9:518 - 9:607,1,arjan
59:54,snazy,CASSANDRA-12996,snazy,,Comment,9:851 - 9:855,1,arjan
59:42,v2 LGTM,CASSANDRA-12996,v2 LGTM,,Architectural solution benefits and drawbacks,9:887 - 9:893,1,arjan
59:53,jay.zhuang,CASSANDRA-12996,jay.zhuang,,Comment,9:1164 - 9:1173,1,arjan
59:43,"Can we delete the binaries from the repository, instead of removing th…",CASSANDRA-12996,"Can we delete the binaries from the repository, instead of removing the ones  from {{build/lib/jars}}?
",,Architectural design configuration,9:1176 - 9:1278,1,arjan
59:52,jay.zhuang,CASSANDRA-12996,jay.zhuang,,Comment,9:1420 - 9:1429,1,arjan
59:44,I mean deleting the one in Cassandra repo: [lib/slf4j-  api-1.7.25.jar…,CASSANDRA-12996,I mean deleting the one in Cassandra repo: [lib/slf4j-  api-1.7.25.jar|https://github.com/apache/cassandra/blob/trunk/lib/slf4j-api-1.7.25.jar].,,Architectural design configuration,9:1452 - 9:1595,1,arjan
59:45,"In  general, I don’t think it’s a good idea to have binaries in the gi…",CASSANDRA-12996,"In  general, I don’t think it’s a good idea to have binaries in the git repository.
",,"Assumptions
Technical debt",9:1597 - 9:1681,2,arjan
59:51,spod,CASSANDRA-12996,spod,,Comment,9:1686 - 9:1689,1,arjan
59:46,that’s a good point,CASSANDRA-12996,that’s a good point,,Architectural solution benefits and drawbacks,9:1706 - 9:1724,1,arjan
59:47,I imaging that we could use the maven dependency  resolver for that as…,CASSANDRA-12996,I imaging that we could use the maven dependency  resolver for that as well and have it populate the lib folder. ,,Technology solution,9:1727 - 9:1839,1,arjan
59:48,But never upgrading  slf4j isn’t a solution,CASSANDRA-12996,But never upgrading  slf4j isn’t a solution,,Architectural solution benefits and drawbacks,9:2079 - 9:2121,1,arjan
59:49,migrating to another logging framework probably won’t happen as  well.,CASSANDRA-12996,migrating to another logging framework probably won’t happen as  well. ,,Architectural solution benefits and drawbacks,9:2127 - 9:2197,1,arjan
59:50,"So we have to bite the bullet here and do some log messages cleanup, I…",CASSANDRA-12996,"So we have to bite the bullet here and do some log messages cleanup, I’m afraid.
",,Architectural solution benefits and drawbacks,9:2198 - 9:2279,1,arjan
60:1,Upgrade Guava to 23.3,CASSANDRA-13997,Upgrade Guava to 23.3 ,,Technology solution,3:53 - 3:74,1,arjan
60:2,Airline to 0.8,CASSANDRA-13997,Airline to 0.8,,Technology solution,3:79 - 3:92,1,arjan
60:3,For 4.0 we should upgrade guava to the latest version,CASSANDRA-13997,For 4.0 we should upgrade guava to the latest version,,Technology solution,3:112 - 3:164,1,arjan
60:4,A bunch of quite commonly used methods have been deprecated since guav…,CASSANDRA-13997,"A bunch of quite commonly used methods have been deprecated since guava 18 which we use  now ({{Throwables.propagate}} for example), this patch mostly updates uses where compilation  fails. {{Futures.transform(ListenableFuture ..., AsyncFunction ...}} was deprecated in Guava 19  and removed in 20 for example, we should probably open new tickets to remove calls to all dep-  recated guava methods",,Architectural solution benefits and drawbacks,3:241 - 3:637,1,arjan
60:32,marcuse,CASSANDRA-13997,marcuse,,Comment,3:967 - 3:973,1,arjan
60:5,circle shows that we probably need to upgrade airline as well: https:/…,CASSANDRA-13997,circle shows that we probably need to upgrade airline as well: https://circleci.com/gh/krummas/cassandra/171,,"Architectural solution benefits and drawbacks
Assumptions
Technology solution",3:1095 - 3:1202,3,arjan
60:31,marcuse,CASSANDRA-13997,marcuse,,Comment,4:4 - 4:10,1,arjan
60:17,pushed a commit that upgrades airline to 0.8,CASSANDRA-13997,pushed a commit that upgrades airline to 0.8,,Technology solution,4:13 - 4:56,1,arjan
60:30,tkruse,CASSANDRA-13997,tkruse,,Comment,4:214 - 4:219,1,arjan
60:6,For us it would be nice if cassandra 3.x could be made API compatible…,CASSANDRA-13997,For us it would be nice if cassandra 3.x could be made API compatible with Guava,,User requirement,4:222 - 4:301,1,arjan
60:7,Such as replacing  Iterators.<RangeTombstone>emptyIterator()  with  Co…,CASSANDRA-13997,Such as replacing  Iterators.<RangeTombstone>emptyIterator()  with  Collections.emptyIterator(),,Architectural component behavior and structure,4:313 - 4:407,1,arjan
60:8,as done in  https://github.com/krummas/cassandra/commits/marcuse/guava…,CASSANDRA-13997,as done in  https://github.com/krummas/cassandra/commits/marcuse/guava23,,Other system architectural solutions,4:410 - 4:481,1,arjan
60:9,"This would not require changing the guava version, just abolishing cer…",CASSANDRA-13997,"This would not require changing the guava version, just abolishing certain usages of guava  that have been deprecated.
",,"Architectural component behavior and structure
Architectural solution benefits and drawbacks",4:484 - 4:603,2,arjan
60:29,marcuse,CASSANDRA-13997,marcuse,,Comment,4:607 - 4:613,1,arjan
60:10,"Tests look ""good"" (can’t fnd anything related to the guava upgrade)",CASSANDRA-13997,"Tests look ""good"" (can’t fnd anything related to the guava upgrade)",,Architectural solution benefits and drawbacks,4:616 - 4:682,1,arjan
60:28,spod,CASSANDRA-13997,spod,,Comment,4:805 - 4:808,1,arjan
60:11,I don’t think you have to add {{j2objc-annotations}} to the pom (build…,CASSANDRA-13997," I don’t think you have to add {{j2objc-annotations}} to the pom (build.xml) as well,  as it’s already a transitive guava dependency. ",,"Architectural component behavior and structure
Assumptions",4:810 - 4:943,2,arjan
60:12,There are also other dependencies that are [no  longer optional|https:…,CASSANDRA-13997,"There are also other dependencies that are [no  longer optional|https://github.com/google/guava/commit/0e29934933f33379de953727171f7ca1ec616a58]  and not everyone seems to be happy about it. Shouldn’t this be reason enough to stick with  23.2 instead for the time being?
",,"Architectural design configuration
Architectural solution benefits and drawbacks",4:944 - 4:1215,2,arjan
60:27,marcuse,CASSANDRA-13997,marcuse,,Comment,4:1219 - 4:1225,1,arjan
60:13,Good point,CASSANDRA-13997,Good point,,Architectural solution benefits and drawbacks,4:1362 - 4:1371,1,arjan
60:14,Couldn’t see anything obvious in the dif between 23.2 and .3 that coul…,CASSANDRA-13997,"Couldn’t see anything obvious in the dif between 23.2 and .3 that could afect us, so if you  think that is better, I’m totally ok with that",,Architectural solution benefits and drawbacks,5:133 - 5:271,1,arjan
60:26,spod,CASSANDRA-13997,spod,,Comment,5:277 - 5:280,1,arjan
60:15,"Ah, never mind. These dependencies have been introduced in January for…",CASSANDRA-13997," Ah, never mind. These dependencies have been introduced in January for v22 already.
Should have clicked that little ""..."" icon next to the tag for the commit. Guess there’s no going  back then, as they seem to have settled down for the [decision|https://github.com/google/guava/issues/2824]  to keep the dependencies non-optional.
",,Architectural solution benefits and drawbacks,5:282 - 5:615,1,arjan
60:25,marcuse,CASSANDRA-13997,marcuse,,Comment,5:619 - 5:625,1,arjan
60:16,pushed up a commit to remove the j2objc dep from build.xml,CASSANDRA-13997,pushed up a commit to remove the j2objc dep from build.xml,,Architectural component behavior and structure,5:628 - 5:685,1,arjan
60:24,spod,CASSANDRA-13997,spod,,Comment,5:692 - 5:695,1,arjan
60:18,"+1  Should get changes.txt entry, but looks fne otherwise.",CASSANDRA-13997,"+1  Should get changes.txt entry, but looks fne otherwise.
",,Architectural solution benefits and drawbacks,5:698 - 5:757,1,arjan
60:23,tjake,CASSANDRA-13997,tjake,,Comment,5:843 - 5:847,1,arjan
60:19,There’s no need to add the j2objc to the lib dir.,CASSANDRA-13997,There’s no need to add the j2objc to the lib dir. ,,"Architectural component behavior and structure
Architectural solution benefits and drawbacks",5:861 - 5:910,2,arjan
60:20,You can simply add  it to the build dep jars. An example of this is th…,CASSANDRA-13997,You can simply add  it to the build dep jars. An example of this is the compile-command-annotation entries in  build.xml,,"Architectural component behavior and structure
Architectural solution benefits and drawbacks",5:911 - 5:1030,2,arjan
60:22,spod,CASSANDRA-13997,spod,,Comment,5:1148 - 5:1151,1,arjan
60:21,"If we do that, then we should probably include the guava artifact dire…",CASSANDRA-13997,"If we do that, then we should probably include the guava artifact directly instead of  j2objc. This should override the ancient guava-16 version that is pulled by ohc.
",,"Architectural component behavior and structure
Architectural design configuration",5:1154 - 5:1322,2,arjan
61:1,Bump jackson version to >= 2.9.5,CASSANDRA-14427,Bump jackson version to >= 2.9.5,,Technology solution,3:53 - 3:84,1,arjan
61:2,"The Jackson being used by Cassandra is really old (1.9.2, and still re…",CASSANDRA-14427,"The Jackson being used by Cassandra is really old (1.9.2, and still references codehaus (Jackson  1) instead of fasterxml (Jackson 2)).
",,Technical debt,3:104 - 3:240,1,arjan
61:3,fasterxml (Jackson 2)),CASSANDRA-14427,fasterxml (Jackson 2)),,Technology solution,3:216 - 3:237,1,arjan
61:4,There have been a few jackson vulnerabilities recently (mostly around…,CASSANDRA-14427,"There have been a few jackson vulnerabilities recently (mostly around deserialization which al-  lows arbitrary code execution)  [https://nvd.nist.gov/vuln/detail/CVE-2017-7525]  [https://nvd.nist.gov/vuln/detail/CVE-2017-15095]  [https://nvd.nist.gov/vuln/detail/CVE-2018-1327]  [https://nvd.nist.gov/vuln/detail/CVE-2018-7489]  Given that Jackson in Cassandra is really old and seems to be used also for reading in values, it  looks worthwhile to update Jackson to 2.9.5.
",,"Architectural solution benefits and drawbacks
Architectural tactics
Technology solution",3:241 - 3:715,3,arjan
61:22,jasobrown,CASSANDRA-14427,jasobrown,,Comment,5:4 - 5:12,1,arjan
61:5,"Upgrading dependencies on trunk is not a problem, but usually we are h…",CASSANDRA-14427," Upgrading dependencies on trunk is not a problem, but usually we are hesi-  tant to upgrade in existing releases. Unless, of course, there’s a bug or identifes security  problem. The linked CVEs all reference the jackson-databind sub-module, which we do  not ship. Several of the CVEs have text like ""sending the maliciously crafted input to the  readValue method of the ObjectMapper"", but always with that input going through the  jackson-databind component. While the jackson-mapper-asl-1.9.13.jar that we ship does  have an {{ObjectMapper}} class, so does the jackson-databind jar (I looked at the most  recent on maven central, v2.9.5). I’m inclined to believe the {{ObjectMapper}} referenced  in the CVEs refers to the {{ObjectMapper}} in jackson-databind, and not anything we cur-  rently ship.
",,Architectural solution benefits and drawbacks,5:14 - 5:816,1,arjan
61:6,"If there are no known issues with the current jackson jars, I propose…",CASSANDRA-14427,"If there are no known issues with the current jackson jars, I propose we not upgrade them  on existing releases. wdyt, [~Lerh Low]?
",,"Architectural design configuration
Assumptions",5:817 - 5:949,2,arjan
61:21,Lerh Low,CASSANDRA-14427,Lerh Low,,Comment,5:953 - 5:960,1,arjan
61:7,"Yep - the linked CVEs all referenceJackson databind, which really is c…",CASSANDRA-14427,"Yep - the linked CVEs all referenceJackson databind, which really is codehaus’s mapper  asl. To my understanding,Jacksonmoved from codehaus to Github when Jackson 2 was  released.The CVEs reference jackson databind, which makes it vague whether it afects  codehaus or not.
Digging a little bit deeper, there are a few good articles that describe the CVEs better  and how they relate to Jackson:  [https://adamcaudill.com/2017/10/04/exploiting-jackson-rce-cve-2017-7525/]  [https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-  know-54cd0d6e8062]  And the actual paper itself on describing the vulnerability:  [https://github.com/mbechler/marshalsec]  4
Reading into them, Jackson by default is not afected by the CVE.We are only vulner-  ableunder certain situations as described by cowtowncoder’s article in medium, which is  accepting bad JSON to begin with (from what I can tell it looks like we read in JSON when  altering compaction strategy via JMX/reading in CQL). Presumably the user wouldn’t want  to do it themselves so the attacker needs to do that frst.
",,"Assumptions
Technical debt",5:1094 - 6:414,2,arjan
61:8,"Assuming that condition is met, ObjectMapper also needs to be able to…",CASSANDRA-14427,"Assuming that condition is met, ObjectMapper also needs to be able to be able to han-  dle polymorphic types.",,Motivation of design issue,6:415 - 6:523,1,arjan
61:9,ObjectMapper.enableDefaultTyping().,CASSANDRA-14427, ObjectMapper.enableDefaultTyping(). ,,Architectural component behavior and structure,6:554 - 6:590,1,arjan
61:10,We don’t do this in the code base,CASSANDRA-14427,We don’t do this in the code base,,Architectural solution benefits and drawbacks,6:591 - 6:623,1,arjan
61:11,Explicitly defning polymorphic types using annotations JsonSubType or…,CASSANDRA-14427,Explicitly defning polymorphic types using annotations JsonSubType or JsonTypeInfo,,Architectural component behavior and structure,6:629 - 6:710,1,arjan
61:12,We don’t do this either.,CASSANDRA-14427,We don’t do this either.,,Architectural solution benefits and drawbacks,6:714 - 6:737,1,arjan
61:13,"For the record, Codehaus’s ObjectMapper (Or Jackson 1’s ObjectMapper)…",CASSANDRA-14427,"For the record, Codehaus’s ObjectMapper (Or Jackson 1’s ObjectMapper) does allow you to  do this though, if we wanted to. [https://github.com/codehaus/jackson/blob/master/src/mapper/java/org/codehau",,Technology solution,6:740 - 6:937,1,arjan
61:15,"I would think that it is afected (being an older version of Jackson),…",CASSANDRA-14427,"I would think that it is afected (being an older version of Jackson), but by default no and  in our use case, no.",,Technical debt,6:940 - 6:1052,1,arjan
61:16,From a user perspective some have mentioned their worries on using Jac…,CASSANDRA-14427,"From a user perspective some have mentioned their worries on using Jackson 1 with Cas-  sandra because it’s no longer being updated or maintained from a security perspective, and  in general keeping dependencies up to date is a plus I think.
",,"Architectural solution benefits and drawbacks
Assumptions",6:1055 - 6:1297,2,arjan
61:17,"I’m ambivalent with regards to upgrading our previous releases, I thin…",CASSANDRA-14427,"I’m ambivalent with regards to upgrading our previous releases, I think the pros is nothing  more than not using out of date libraries and the cons is we(I) don’t know if anything will  break beyond the unit tests because we don’t know what we don’t know. The changes aren’t  very big though that said because a lot of the code between Jackson 1 & 2 are the same.
With regards to trunk, if we can take this opportunity to, thenbumping Jackson is good  practice. Those are just my thoughts :)",,Architectural solution benefits and drawbacks,6:1298 - 6:1789,1,arjan
61:20,jasobrown,CASSANDRA-14427,jasobrown,,Comment,6:1795 - 6:1803,1,arjan
61:18,"Based on that,  it looks like it is not imperative to upgrade the prev…",CASSANDRA-14427,"Based on that,  it looks like it is not imperative to upgrade the previous versions of casandra, and thus  upgrading trunk is sufcient.
",,"Architectural design configuration
Architectural solution benefits and drawbacks",6:1865 - 6:2001,2,arjan
61:19,+1 on the patch for trunk,CASSANDRA-14427,+1 on the patch for trunk,,Architectural solution benefits and drawbacks,6:2002 - 6:2026,1,arjan
62:1,Use Cafeine (W-TinyLFU) for on-heap caches,CASSANDRA-10855,Use Cafeine (W-TinyLFU) for on-heap caches,,Technology solution,3:53 - 3:94,1,arjan
62:131,aweisberg,CASSANDRA-10855,aweisberg,,Comment,3:314 - 3:322,1,arjan
62:2,I don’t object to swapping CLHM with a new implementation. As a matter…,CASSANDRA-10855,"I don’t object to swapping CLHM with a new implementation. As a matter  of principle we should measure what impact this has so we can understand the yield of the  optimizations in tiny LFU. We shouldn’t be making changes for performance without mea-  suring,",,Architectural solution benefits and drawbacks,3:325 - 3:582,1,arjan
62:3,but also so we can inform the evolution of OHC,CASSANDRA-10855,but also so we can inform the evolution of OHC ,,Architectural design configuration,3:584 - 3:630,1,arjan
62:4,which solves the GC pressure issue.,CASSANDRA-10855,"which solves the GC pressure issue.
",,Architectural solution benefits and drawbacks,3:631 - 3:667,1,arjan
62:5,"I see on heap caches, memtables, and any other source of high volume s…",CASSANDRA-10855,"I see on heap caches, memtables, and any other source of high volume survivor copying  and promotion as a dead end.
",,Architectural solution benefits and drawbacks,3:668 - 3:784,1,arjan
62:6,We changed the format of the key cache for 3.0 so that it would be sui…,CASSANDRA-10855,"We changed the format of the key cache for 3.0 so that it would be suitable for memory  mapping, but didn’t get the change in to actually use a memory mapped access method.
Robert Stupp did write a lot of the code, but it was still using OHC as the cache.",,Existing system architecture description,3:785 - 3:1040,1,arjan
62:130,ben.manes,CASSANDRA-10855,ben.manes,,Comment,3:1267 - 3:1275,1,arjan
62:8,If the performance analysis is positive then it provides a strong moti…,CASSANDRA-10855,If the performance analysis is positive then it provides a strong motivation  to integrate W-TinyLFU into OHC.,,"Architectural solution benefits and drawbacks
Assumptions",3:1375 - 3:1484,2,arjan
62:9,"As Robert described it, the on-heap caches are low  hanging fruit wher…",CASSANDRA-10855,"As Robert described it, the on-heap caches are low  hanging fruit where the key cache is performance critical.",,Architectural component behavior and structure,3:1486 - 3:1595,1,arjan
62:10,"I’m a little disappointed that OHC didn’t borrow ideas from CLHM, as t…",CASSANDRA-10855,"I’m a little disappointed that OHC didn’t borrow ideas from CLHM, as the fundamentals  are transferable, ",,Architectural solution benefits and drawbacks,4:456 - 4:560,1,arjan
62:129,snazy,CASSANDRA-10855,snazy,,Comment,4:630 - 4:634,1,arjan
62:11,the results look good to me (i.e. no regression).,CASSANDRA-10855,"the results look good to me (i.e. no regression).
",,Architectural solution benefits and drawbacks,4:719 - 4:769,1,arjan
62:12,Unfortunately the cstar perf runs ([trades-fwd-lcs-nolz4|http://cstar.…,CASSANDRA-10855,"Unfortunately the cstar perf runs ([trades-fwd-lcs-nolz4|http://cstar.datastax.com/tests/id/6fcb6cbc-  aafa-11e5-947f-0256e416528f] and [cassci regression test r/w|http://cstar.datastax.com/tests/id/6b113b02-  aafa-11e5-947f-0256e416528f]) show that using Cafeine for the key cache slightly _degrades_  performance in terms of throughput and latencies. Some percentiles (mostly max latencies)  are slightly better, but the overall result is that performance degrades. The key-cache hit  rate is slightly better with Cafeine (trades-fwd-lcs-nolz4 showing slightly more than 10% hit  rate w/ Cafeine vs. slightly less than 10% w/o Cafeine).
",,Architectural solution benefits and drawbacks,4:770 - 4:1409,1,arjan
62:13,Cafeine for the key cache,CASSANDRA-10855,Cafeine for the key cache,,Technology solution,4:1026 - 4:1050,1,arjan
62:15,_trades-fwd-lcs-nolz4_ uses somewhat bigger partitions and flls the ke…,CASSANDRA-10855,"_trades-fwd-lcs-nolz4_ uses somewhat bigger partitions and flls the key cache completely.
",,Architectural solution benefits and drawbacks,4:1410 - 4:1500,1,arjan
62:17,_regression r/w_ uses small partitions and just uses roughly 10% of th…,CASSANDRA-10855,"_regression r/w_ uses small partitions and just uses roughly 10% of the key cache.
",,Architectural solution benefits and drawbacks,4:1501 - 4:1584,1,arjan
62:14,"From a _really quick & brief_ view at the Cafeine source, I *suspect*…",CASSANDRA-10855,"From a _really quick & brief_ view at the Cafeine source, I *suspect* that the worse  numbers are caused by the spinning loops. Also padding felds, which can behave com-  pletely diferent on NUMA than on singe-CPU systems, may have some bad infuence in this  test.
",,Motivation of design issue,4:1707 - 4:1972,1,arjan
62:128,ben.manes,CASSANDRA-10855,ben.manes,,Comment,4:1976 - 4:1984,1,arjan
62:18,It being low regardless of policy is  troubling.,CASSANDRA-10855,It being low regardless of policy is  troubling.,,Architectural solution benefits and drawbacks,4:2028 - 4:2075,1,arjan
62:19,So it seems important to fgure out why that is and what (if anything)…,CASSANDRA-10855,"So it seems important to fgure out why that is and what (if anything) can be  done to improve that.
An inefective cache impacts the design assumptions by making writes (not reads) the com-  mon case. The slightly heavier policy, default delegation to FJP, etc would all be more  noticeable when writes are the dominate behavior. I’m not sure of-hand why its worse, but  that seems secondary to fxing the hit rate problem.
",,Motivation of design issue,4:2077 - 4:2500,1,arjan
62:127,aweisberg,CASSANDRA-10855,aweisberg,,Comment,4:2504 - 4:2512,1,arjan
62:20,Is this testing with a uniform access distribution?,CASSANDRA-10855,Is this testing with a uniform access distribution?,,"Architectural design configuration
Assumptions",4:2515 - 4:2565,2,arjan
62:21,We keep doing that because  it’s the default and I think it’s a really…,CASSANDRA-10855,"We keep doing that because  it’s the default and I think it’s a really bad way to measure as a default since it’s the exception  not the common case.
",,"Architectural solution benefits and drawbacks
Assumptions",4:2567 - 4:2717,2,arjan
62:126,ben.manes,CASSANDRA-10855,ben.manes,,Comment,4:2721 - 4:2729,1,arjan
62:22,"Ariel’s comment explains the poor hit rate, as a uniform distribution…",CASSANDRA-10855,"Ariel’s comment explains the poor hit rate, as a uniform distribution will result in a fxed  and low hit rate regardless of policy. ",,Architectural solution benefits and drawbacks,4:2793 - 4:2924,1,arjan
62:23,uniform distribution,CASSANDRA-10855, uniform distribution ,,Architectural component behavior and structure,4:2841 - 4:2862,1,arjan
62:26,"An efective cache is often at around 85%, ideally in  the high 90s to…",CASSANDRA-10855,"An efective cache is often at around 85%, ideally in  the high 90s to make reads the dominant case, but even 65% is useful. Even when the hit  rate is maxed out, the efect of a better policy can be noticeable. In that case it reduces the  TCO by being able to achieve the same performance with smaller, cheaper machines.
Glancing at the uniform results the degredation is small enough to probably be within  the margin of error where the run and other system efects dominate.",,Motivation of design issue,4:2925 - 4:3400,1,arjan
62:24,In an update heavy  workload the new cache,CASSANDRA-10855,In an update heavy  workload the new cache,,Architectural component behavior and structure,4:3402 - 4:3443,1,arjan
62:25,should be faster due to synchronization having less penalty than  CAS…,CASSANDRA-10855,"should be faster due to synchronization having less penalty than  CAS storms. But on the perf test’s insertion heavy workload it is probably a little slower  3
due to features incurring more complexity.",,Architectural solution benefits and drawbacks,4:3445 - 5:42,1,arjan
62:27,[Zipf-like|http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.12.…,CASSANDRA-10855,"[Zipf-like|http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.12.2253&rank=1] distri-  butions are considered the most common workload patterns. Ideally we could capture a pro-  duction trace and simulate it, as the [database trace|https://github.com/ben-manes/cafeine/wiki/Efciency#databa  I use",,Architectural component behavior and structure,5:127 - 5:427,1,arjan
62:28,shows very promising results.,CASSANDRA-10855,"shows very promising results.
",,Architectural tactics,5:429 - 5:459,1,arjan
62:125,snazy,CASSANDRA-10855,snazy,,Comment,5:463 - 5:467,1,arjan
62:29,"BTW, I have to correct my last statement partly: _trades-fwd-lcs-nolz4…",CASSANDRA-10855,"BTW, I have to correct my last statement partly: _trades-fwd-lcs-nolz4_ has the 99.x%  key-cache hit ration (using 10% of the key cache’s capacity) ",,Architectural solution benefits and drawbacks,5:578 - 5:725,1,arjan
62:30,"_regression r/w_ has the  bad, ~10% hit ratio.",CASSANDRA-10855,"_regression r/w_ has the  bad, ~10% hit ratio.",,Architectural solution benefits and drawbacks,5:731 - 5:776,1,arjan
62:31,_trades-fwd-lcs-nolz4_ [Operation 1|http://cstar.datastax.com/graph?co…,CASSANDRA-10855,_trades-fwd-lcs-nolz4_ [Operation 1|http://cstar.datastax.com/graph?command=one_job&stats=6fcb6cbc-  aafa-11e5-947f-0256e416528f&metric=op_rate&operation=1_user&smoothing=1&show_aggregates=true&xmin=  (mixed writes+reads) gives a nice perf improvement during the frst seconds but then egalizes  with the existing implementation,,Architectural tactics,5:873 - 5:1199,1,arjan
62:32,[Operation 2|http://cstar.datastax.com/graph?command=one_job&stats=6fc…,CASSANDRA-10855,"[Operation 2|http://cstar.datastax.com/graph?command=one_job&stats=6fcb6c  aafa-11e5-947f-0256e416528f&metric=op_rate&operation=2_user&smoothing=1&show_aggregates=true&xmin=  4 and 6 (all just reads) show a slight regression or no diference.
",,Architectural solution benefits and drawbacks,5:1202 - 5:1444,1,arjan
62:33,OTOH _cassci regression test r/w_ shows the perf regression of about 5…,CASSANDRA-10855,"OTOH _cassci regression test r/w_ shows the perf regression of about 5%.
",,Architectural tactics,5:1445 - 5:1518,1,arjan
62:124,ben.manes,CASSANDRA-10855,ben.manes,,Comment,5:1522 - 5:1530,1,arjan
62:34,I use YCSB’s distributions for [synthetic|https://github.com/ben-manes…,CASSANDRA-10855,I use YCSB’s distributions for [synthetic|https://github.com/ben-manes/cafeine/blob/master/simulator/src/main/  workloads.,,Architectural component behavior and structure,5:1603 - 5:1724,1,arjan
62:35,If the cache doesn’t reach 50% capacity then Cafeine doesn’t even init…,CASSANDRA-10855,"If the cache doesn’t reach 50% capacity then Cafeine doesn’t even initialize the frequency  sketch to save memory (e.g. someone sets the max to a ridiculous threshold as a worst  case bound). It could probably also by avoid the LRU shufing, which would reduce the  maintenance penalty.
",,"Architectural solution benefits and drawbacks
Technology solution",5:1769 - 5:2055,2,arjan
62:123,ben.manes,CASSANDRA-10855,ben.manes,,Comment,5:2060 - 5:2068,1,arjan
62:36,Insertions now avoid an unnecessary lambda.,CASSANDRA-10855,Insertions now avoid an unnecessary lambda.,,Architectural component behavior and structure,5:2223 - 5:2265,1,arjan
62:37,"I suspect that will have a negligible bene-  ft, but its always good t…",CASSANDRA-10855,"I suspect that will have a negligible bene-  ft, but its always good to be more GC hygienic.
",,Architectural solution benefits and drawbacks,5:2267 - 5:2360,1,arjan
62:38,A cache below 50% capacity will skip read policy work.,CASSANDRA-10855,A cache below 50% capacity will skip read policy work.,,Architectural component behavior and structure,5:2361 - 5:2414,1,arjan
62:39,That means it won’t record the  access in ring bufers which reduces co…,CASSANDRA-10855,"That means it won’t record the  access in ring bufers which reduces contention. That also reduces the how often policy  the maintenance work is scheduled, as the bufers don’t need to be drained. A write will  still trigger a maintenance cycle, but that should be shorter by doing less. This result in  throughput close to a raw ConcurrentHashMap and then incurring the penalty when the  threshold is crossed. That should improve _trades-fwd-lcs-nolz4_ and anyone else’s usage  where the cache is merely a safety threshold but isn’t likely to grow close to the maximum.
",,Architectural solution benefits and drawbacks,5:2416 - 5:2985,1,arjan
62:122,jeromatron,CASSANDRA-10855,jeromatron,,Comment,5:2990 - 5:2999,1,arjan
62:40,"As part of testing, should we also fx cstar perf relating to cache to…",CASSANDRA-10855,"As part of testing, should we also fx cstar perf relating to cache to no longer  be uniform access distribution?",,Architectural component behavior and structure,5:3002 - 5:3113,1,arjan
62:41,"It seems like for this and future tests, that would give a  more real-…",CASSANDRA-10855,"It seems like for this and future tests, that would give a  more real-world result.
",,Architectural solution benefits and drawbacks,5:3115 - 5:3199,1,arjan
62:121,jbellis,CASSANDRA-10855,jbellis,,Comment,5:3204 - 5:3210,1,arjan
62:42,(cstar is back.),CASSANDRA-10855, (cstar is back.),,Architectural solution benefits and drawbacks,5:3212 - 5:3228,1,arjan
62:120,ben.manes,CASSANDRA-10855,ben.manes,,Comment,6:5 - 6:13,1,arjan
62:43,[2.1.0|https://github.com/ben-manes/cafeine/releases/tag/v2.1.0] was r…,CASSANDRA-10855, [2.1.0|https://github.com/ben-manes/cafeine/releases/tag/v2.1.0] was released,,Technology solution,6:15 - 6:92,1,arjan
62:44,which includes the above mentioned optimizations. So the cache should…,CASSANDRA-10855,which includes the above mentioned optimizations. So the cache should seem artifcially bet-  ter for an artifcial workload =),,Architectural solution benefits and drawbacks,6:95 - 6:219,1,arjan
62:45,"It  would be nice if we knew what real-world distributions were like,…",CASSANDRA-10855,"It  would be nice if we knew what real-world distributions were like, as Zipf-like is what re-  searchers published. From the traces I’ve experimented with, I am fairly confdent in a net  positive result.
",,Architectural solution benefits and drawbacks,6:304 - 6:509,1,arjan
62:119,aweisberg,CASSANDRA-10855,aweisberg,,Comment,6:655 - 6:663,1,arjan
62:46,so you shouldn’t need to do a code change to fnd an alternative to uni…,CASSANDRA-10855,so you shouldn’t need to do a code change to fnd an alternative to uniform.,,Architectural component behavior and structure,6:757 - 6:831,1,arjan
62:47,Not sure if  Weibull can fll the same niche as Zipf.,CASSANDRA-10855,"Not sure if  Weibull can fll the same niche as Zipf.
",,Architectural solution benefits and drawbacks,6:833 - 6:886,1,arjan
62:118,benedict,CASSANDRA-10855,benedict,,Comment,6:891 - 6:898,1,arjan
62:48,Zipf could easily be added.,CASSANDRA-10855, Zipf could easily be added.,,Architectural solution benefits and drawbacks,6:900 - 6:927,1,arjan
62:49,I added Weibull as the extreme value distribution  without thinking to…,CASSANDRA-10855,"I added Weibull as the extreme value distribution  without thinking too much about things at the time, and still don’t really understand (nor  have the time to) probability distributions. Both are used to model both incidence and  sizes, but in difering circumstances. Zipf originates from language, but Weibull distribution  apparently better models iconographic languages!
",,Architectural solution benefits and drawbacks,6:929 - 6:1304,1,arjan
62:50,It does seem that the literature standardizes on Zipf for incidence fo…,CASSANDRA-10855,It does seem that the literature standardizes on Zipf for incidence for things like access  patterns.,,Architectural solution benefits and drawbacks,6:1305 - 6:1405,1,arjan
62:51,"I’m pretty sure Weibull would also be fne, but it is perhaps better su…",CASSANDRA-10855,"I’m pretty sure Weibull would also be fne, but it is perhaps better suited for  generating extreme values (such as size of payload),",,Architectural solution benefits and drawbacks,6:1407 - 6:1538,1,arjan
62:52,"but even this could happily be dealt  with by Zipf,",CASSANDRA-10855,"but even this could happily be dealt  with by Zipf,",,Architectural solution benefits and drawbacks,6:1540 - 6:1590,1,arjan
62:53,so perhaps we should just switch out Weibull entirely.,CASSANDRA-10855,"so perhaps we should just switch out Weibull entirely.
",,"Architectural component behavior and structure
Architectural solution benefits and drawbacks",6:1592 - 6:1647,2,arjan
62:117,ben.manes,CASSANDRA-10855,ben.manes,,Comment,6:1652 - 6:1660,1,arjan
62:54,"I think Weibull should be fne, too.",CASSANDRA-10855," I think Weibull should be fne, too.
",,Architectural solution benefits and drawbacks,6:1662 - 6:1699,1,arjan
62:55,My expectation is that in a scenario similar to a  realistic workload…,CASSANDRA-10855,"My expectation is that in a scenario similar to a  realistic workload there will be a less I/O due to fewer cache misses. If there is a slight  degredation (or gain) in other aspects of the new cache that should have a negligible impact,  as reduced I/O will be the dominant efect. This would then provide a good argument for  OHC to revisit its eviction policy.
",,Architectural solution benefits and drawbacks,6:1918 - 6:2281,1,arjan
62:116,ben.manes,CASSANDRA-10855,ben.manes,,Comment,6:2507 - 6:2515,1,arjan
62:56,It sounds like we all thought Weibull was a good choice.,CASSANDRA-10855, It sounds like we all thought Weibull was a good choice. ,,Architectural solution benefits and drawbacks,6:2517 - 6:2574,1,arjan
62:57,Another option is to  use [YCSB|https://github.com/brianfrankcooper/YC…,CASSANDRA-10855,Another option is to  use [YCSB|https://github.com/brianfrankcooper/YCSB] ,,Technology solution,6:2575 - 6:2648,1,arjan
62:58,which handles correlated omission  and is popular benchmark for compar…,CASSANDRA-10855,"which handles correlated omission  and is popular benchmark for comparing data stores.
",,Architectural solution benefits and drawbacks,6:2649 - 6:2736,1,arjan
62:115,benedict,CASSANDRA-10855,benedict,,Comment,6:3037 - 6:3044,1,arjan
62:59,The employment of probabilistic data structures for a cache is the obv…,CASSANDRA-10855,"The employment of probabilistic data structures for a cache is the obvious next step in  5
their evolution (something I had a hope to explore before Tiny-LFU showed up), and Tiny-  LFU being the frst such scheme should absolutely be considered *strongly*. It is simply  natural that a probabilistic approach should be capable of yielding better returns for a prob-  abilistic application (hit rate), and if anything I’m surprised the world has been so slow to  exploit this idea. Were I making the comment again today, I would have suggested that  Tiny-LFU be considered as the most sensible choice.
That goes doubly for the fact that any given _implementation_ is a stop-gap until the  transition to Thread-Per-Core completes and we can make all of our algorithms more mem-  ory (and execution) efcient. Since Tiny-LFU already exists, it does seem an obvious choice  on that front.
",,"Architectural solution benefits and drawbacks
Technology solution",6:3186 - 7:794,2,arjan
62:114,ben.manes,CASSANDRA-10855,ben.manes,,Comment,7:799 - 7:807,1,arjan
62:60,"When Cassandra moves to TPC, it should take less than a day to write a…",CASSANDRA-10855,"When Cassandra moves to TPC, it should take less than a day to write a  TinyLFU cache if you borrow my [4-bit CountMin sketch|https://github.com/ben-manes/cafeine/blob/master/cafe",,"Architectural component behavior and structure
Assumptions",7:810 - 7:988,2,arjan
62:61,The simulator includes a variant using incremental reset,CASSANDRA-10855,The simulator includes a variant using incremental reset ,,Architectural component behavior and structure,7:1091 - 7:1147,1,arjan
62:62,which would be my preference  for a TPC) and shows a negligible difere…,CASSANDRA-10855,which would be my preference  for a TPC) and shows a negligible diference in hit rates,,Architectural solution benefits and drawbacks,7:1149 - 7:1234,1,arjan
62:63,"Cafeine tackled the research and concurrency side, but no reason to ad…",CASSANDRA-10855,"Cafeine tackled the research and concurrency side, but no reason to adopt it once TPC.
Best to take ideas, leverage its simulator to fne tune, and share insights.
",,Architectural solution benefits and drawbacks,7:1362 - 7:1526,1,arjan
62:113,benedict,CASSANDRA-10855,benedict,,Comment,7:1531 - 7:1538,1,arjan
62:64,"Yes, I agree it would not be difcult, and the rest of my statement hol…",CASSANDRA-10855,"Yes, I agree it would not be difcult, and the rest of my statement holds for the  post-TPC world - I would still think Tiny-LFU likely the best choice. That aspect of my  comment was only meant to serve as an extra point in favour of a near-zero-cost solution in  the meantime, saving any development expenditure for the more long-term solution.
",,Architectural solution benefits and drawbacks,7:1541 - 7:1887,1,arjan
62:112,benedict,CASSANDRA-10855,benedict,,Comment,7:1892 - 7:1899,1,arjan
62:65,We should defnitely address Branimir’s [comment|https://issues.apache.…,CASSANDRA-10855,"We should defnitely address Branimir’s [comment|https://issues.apache.org/jira/browse/CASSANDRA  11452?focusedCommentId=15240789&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-  tabpanel#comment-15240789] before merging. As he says, this could theoretically com-  pletely eliminate the beneft of the cache in certain circumstances.
",,Architectural solution benefits and drawbacks,7:1902 - 7:2248,1,arjan
62:66,"I think both supporting larger hashes, and not comparing _only_ agains…",CASSANDRA-10855,"I think both supporting larger hashes, and not comparing _only_ against the main evic-  tion candidate for admission (e.g. comparing against a value with logarithmically random  distance from the eviction candidate)",,"Architectural component behavior and structure
Assumptions",7:2249 - 7:2463,2,arjan
62:67,are reasonably easy and should solve the problem,CASSANDRA-10855, are reasonably easy and should solve the problem,,Architectural solution benefits and drawbacks,7:2465 - 7:2513,1,arjan
62:111,ben.manes,CASSANDRA-10855,ben.manes,,Comment,7:2705 - 7:2713,1,arjan
62:68,[~blambov] [integrated | https://github.com/apache/cassandra/commit/30…,CASSANDRA-10855,[~blambov] [integrated | https://github.com/apache/cassandra/commit/30bb255ec9fb36ace2aab51474  Cafeine (v2.2.6) for the chunk cache ([CASSANDRA-5863 | https://issues.apache.org/jira/browse/CASSANDRA-  5863]). He included an analysis demonstrated good performance and hit rates.,,Architectural solution benefits and drawbacks,7:2716 - 7:2993,1,arjan
62:69,I am currently exploring an adaptive version  of the policy,CASSANDRA-10855,I am currently exploring an adaptive version  of the policy,,Architectural component behavior and structure,7:3135 - 7:3193,1,arjan
62:70,"that improves its hit rate for small, recency-skewed caches. This woul…",CASSANDRA-10855,"that improves its hit rate for small, recency-skewed caches. This would also  naturally resolve the attack without needing our protection scheme.
",,"Architectural solution benefits and drawbacks
Architectural tactics",7:3195 - 7:3341,2,arjan
62:71,While  there might be a performance gain of using ForkJoinPool#commonP…,CASSANDRA-10855,"While  there might be a performance gain of using ForkJoinPool#commonPool (default), this was  also a very wise choice. [Druid | http://druid.io/] was recently struck by [JDK-8078490 |  https://bugs.openjdk.java.net/browse/JDK-8078490] where a race in 8u40 - 8u60 causes the  pool to not execute the task.",,"Architectural component behavior and structure
Architectural solution benefits and drawbacks
Architectural tactics
Assumptions",7:3423 - 7:3727,4,arjan
62:72,"With [~blambov]’s work proving the benefts, can we move this forward f…",CASSANDRA-10855,"With [~blambov]’s work proving the benefts, can we move this forward for the remain-  ing caches",,Architectural solution benefits and drawbacks,8:1 - 8:96,1,arjan
62:110,ben.manes,CASSANDRA-10855,ben.manes,,Comment,8:424 - 8:432,1,arjan
62:73,The upgrade is maintenance improvements since 2.2.6 in use.,CASSANDRA-10855,"The upgrade is maintenance improvements since 2.2.6 in use.
",,"Architectural solution benefits and drawbacks
Technology solution",8:521 - 8:581,2,arjan
62:109,ben.manes,CASSANDRA-10855,ben.manes,,Comment,8:1446 - 8:1454,1,arjan
62:74,The test failure might be due to delegating maintenance work (e.g. wri…,CASSANDRA-10855,"The test failure might be due to delegating maintenance work (e.g. writes  triggering an eviction) to an executor. CLHM and Guava amortized this on the calling  threads, whereas Cafeine tries to hide it on ForkJoinPool to minimize user-facing latencies.
",,Motivation of design issue,8:1457 - 8:1711,1,arjan
62:75,By setting Cafeine.executor(Runnable::run),CASSANDRA-10855,By setting Cafeine.executor(Runnable::run),,Technology solution,8:1712 - 8:1753,1,arjan
62:76,"t will behave similar to its predecessors, ideally  set only in tests…",CASSANDRA-10855,"t will behave similar to its predecessors, ideally  set only in tests for predictability.",,Architectural solution benefits and drawbacks,8:1756 - 8:1844,1,arjan
62:77,Alternatively calling cache.cleanUp() prior to inspecting,CASSANDRA-10855,Alternatively calling cache.cleanUp() prior to inspecting,,Architectural component behavior and structure,8:1846 - 8:1902,1,arjan
62:78,is another easy alternative.,CASSANDRA-10855,"is another easy alternative.
",,Architectural solution benefits and drawbacks,8:1905 - 8:1934,1,arjan
62:108,snazy,CASSANDRA-10855,snazy,,Comment,8:2241 - 8:2245,1,arjan
62:79,There are a couple of {{cache.asMap()}} calls,CASSANDRA-10855,There are a couple of {{cache.asMap()}} calls,,Architectural component behavior and structure,9:3 - 9:47,1,arjan
62:80,"Would it be an option to eagerly create the  {{AsMapView}}, {{Values}}…",CASSANDRA-10855,"Would it be an option to eagerly create the  {{AsMapView}}, {{Values}} and {{EntrySet}} instances in {{LocalAsyncLoadingCache}}  to get around the ternaries in {{asMap()}}, {{values()}}, {{entrySet()}} and {{keySet}}?
",,"Architectural component behavior and structure
Architectural solution benefits and drawbacks",9:50 - 9:268,2,arjan
62:81,"Beside these, I’ve got no comments. Pretty straight forward change. Go…",CASSANDRA-10855,"Beside these, I’ve got no comments. Pretty straight forward change. Good work so far!
",,Architectural solution benefits and drawbacks,9:269 - 9:355,1,arjan
62:82,If [~benedict] (IIRC he already worked on Cafeine) says it buys us som…,CASSANDRA-10855,"If [~benedict] (IIRC he already worked on Cafeine) says it buys us something,  I’d be fne omitting the benchmarks.
",,Architectural solution benefits and drawbacks,9:519 - 9:634,1,arjan
62:107,ben.manes,CASSANDRA-10855,ben.manes,,Comment,9:890 - 9:898,1,arjan
62:83,This is good for unit tests to remove asynchronous behavior. My prefer…,CASSANDRA-10855,"This is good for unit tests to remove asynchronous behavior. My preference is to not use it  in production, especially where latencies matter, by not penalizing callers with maintenance  or removal notifcation work.",,Architectural solution benefits and drawbacks,9:1009 - 9:1223,1,arjan
62:84,Instead deferring that to FJP,CASSANDRA-10855,Instead deferring that to FJP ,,Architectural component behavior and structure,9:1225 - 9:1254,1,arjan
62:85,"should help minimize response  times, which I think would be your pref…",CASSANDRA-10855,"should help minimize response  times, which I think would be your preference too. ",,"Architectural solution benefits and drawbacks
Assumptions",9:1255 - 9:1336,2,arjan
62:86,{{LocalAsyncLoadingCache}} isn’t used by Cassandra (a cache that retur…,CASSANDRA-10855,"{{LocalAsyncLoadingCache}} isn’t used by Cassandra (a cache that returns {{Completable-  Future}}. Given the ternaries are null checks to lazily create views, as is common in the  Java Collections, I don’t think its a measurable penalty to keep.
",,"Architectural solution benefits and drawbacks
Assumptions",9:1753 - 9:1999,2,arjan
62:87,For concurrent throughput (JMH) see these [benchmarks|https://github.c…,CASSANDRA-10855,"For concurrent throughput (JMH) see these [benchmarks|https://github.com/ben-manes/cafeine/wiki/Benchmarks  They show a refnements over CLHM, with a primary beneft in write. Since the cache now  supports memoization, the Cassandra APIs might beneft from using",,Architectural solution benefits and drawbacks,9:2122 - 9:2380,1,arjan
62:88,a computation instead  of racy _get-load-put_ calls.,CASSANDRA-10855," a computation instead  of racy _get-load-put_ calls.
",,Architectural component behavior and structure,9:2381 - 9:2435,1,arjan
62:89,For hit rates see these [simulations|https://github.com/ben-manes/cafe…,CASSANDRA-10855,"For hit rates see these [simulations|https://github.com/ben-manes/cafeine/wiki/Efciency].
They show W-TinyLFU improves upon LRU by taking into account frequency.
",,Architectural solution benefits and drawbacks,9:2436 - 9:2599,1,arjan
62:106,snazy,CASSANDRA-10855,snazy,,Comment,9:2704 - 9:2708,1,arjan
62:90,"On an idle system FJP should give a  8latency improvement, if cost-of-…",CASSANDRA-10855," On an idle system FJP should give a  8
latency improvement, if cost-of-task is greater than cost-of-scheduling. On a loaded system  however, handing of work to a separate thread might add a penalty due to scheduling &  context switching. But that is probably a discussion that requires knowledge how Cafeine  works internally. I’m just cautious since I do not like to add more threads than necessary.
",,"Architectural solution benefits and drawbacks
Risks",9:2750 - 10:363,2,arjan
62:105,ben.manes,CASSANDRA-10855,ben.manes,,Comment,10:422 - 10:430,1,arjan
62:91,The penalty is small. In CLHM (and Guava) we didn’t have a system exec…,CASSANDRA-10855," The penalty is small. In CLHM (and Guava) we didn’t have a system executor  to exploit. The same approach is used of amortizing the maintenance work by bufering and  replaying operations, instead of locking to perform them immediately. There is a slightly  higher cost due to hashing for the {{CountMinSketch}} but overall its tiny. Using a direct  executor should be fne.
",,Architectural solution benefits and drawbacks,10:432 - 10:806,1,arjan
62:104,snazy,CASSANDRA-10855,snazy,,Comment,10:1120 - 10:1124,1,arjan
62:92,PR looks good,CASSANDRA-10855,PR looks good,,Architectural solution benefits and drawbacks,10:1127 - 10:1139,1,arjan
62:103,snazy,CASSANDRA-10855,snazy,,Comment,10:1244 - 10:1248,1,arjan
62:93,"Unit tests look good. However, a couple of dtests fail - unfortunately…",CASSANDRA-10855,"Unit tests look good. However, a couple of dtests fail - unfortunately a situation for  which we do not have a unit test.
",,Architectural solution benefits and drawbacks,10:1251 - 10:1373,1,arjan
62:94,Thing is that exception handing in cafeine is diferent now. It manifes…,CASSANDRA-10855,"Thing is that exception handing in cafeine is diferent now. It manifests for example in the  catch-clause in {{org.apache.cassandra.auth.PasswordAuthenticator#authenticate}}. The  loader calls {{queryHashedPassword}}, which throws {{org.apache.cassandra.auth.PasswordAuthenticator.NoSuchC  (extends {{RuntimeException}}). I assume that cafeine just ""passes"" REs and does not wrap  it in an some {{ExecutionException}}.
",,Technology solution,10:1374 - 10:1793,1,arjan
62:102,snazy,CASSANDRA-10855,snazy,,Comment,10:2889 - 10:2893,1,arjan
62:95,"Yes, that’s it. dtests & utests look good now.",CASSANDRA-10855,"Yes, that’s it. dtests & utests look good now.
",,Architectural solution benefits and drawbacks,10:2896 - 10:2943,1,arjan
62:96,I removed that {{No-  SuchCredentialsException}} altogether,CASSANDRA-10855,I removed that {{No-  SuchCredentialsException}} altogether ,,Architectural component behavior and structure,10:3009 - 10:3068,1,arjan
62:97,er necessary (we refactored {{Cassan-  9draException}} to extend {{Run…,CASSANDRA-10855,"er necessary (we refactored {{Cassan-  9
draException}} to extend {{RuntimeException}} just recently - that {{NoSuchCredential-  sException}} is older).
",,Architectural solution benefits and drawbacks,10:3084 - 11:113,1,arjan
62:101,ben.manes,CASSANDRA-10855,ben.manes,,Comment,11:118 - 11:126,1,arjan
62:98,LGTM,CASSANDRA-10855,LGTM,,Architectural solution benefits and drawbacks,11:129 - 11:132,1,arjan
62:100,snazy,CASSANDRA-10855,snazy,,Comment,11:139 - 11:143,1,arjan
62:99,"Alright, utests & dtests look good now.",CASSANDRA-10855," Alright, utests & dtests look good now.
",,Architectural solution benefits and drawbacks,11:145 - 11:186,1,arjan
63:1,Update Jackson version to 2.9.10.1 because there are security issues i…,CASSANDRA-15867,Update Jackson version to 2.9.10.1 because there are security issues in 2.9.5,,"Architectural tactics
Technology solution",3:53 - 3:129,2,arjan
63:8,stefan.miklosovic,CASSANDRA-15867,stefan.miklosovic,,Comment,4:369 - 4:385,1,arjan
63:3,I do not want to make any changes to the codebase of 3.11 unnecessaril…,CASSANDRA-15867,"I do not want to make any changes to the codebase of 3.11 unnecessarilly, what is your  opinion here?",,"Architectural solution benefits and drawbacks
Assumptions",4:515 - 4:615,2,arjan
63:4,Should I invest time to bump it while it is not so trivial?,CASSANDRA-15867,Should I invest time to bump it while it is not so trivial? ,,Architectural component behavior and structure,4:617 - 4:676,1,arjan
63:7,brandon.williams,CASSANDRA-15867,brandon.williams,,Comment,4:751 - 4:766,1,arjan
63:5,"I would say if we fx it in one branch, but another is also vulnerable…",CASSANDRA-15867,"I would say if we fx it in one branch, but another is also vulnerable  for the same reason, we should fx it there too.
",,Architectural design configuration,4:769 - 4:888,1,arjan
63:6,I would take it on a case-by-case basis. I looked into the Jackson vul…,CASSANDRA-15867,"I would take it on a case-by-case basis. I looked into the Jackson vulnerability and it  does seem to be exploitable for us (though I don’t know why users would DoS their database  on purpose, certainly accidents can happen.)",,Architectural design configuration,4:963 - 4:1187,1,arjan
64:1,test case AuditLoggerTest fail on aarch64 platform,CASSANDRA-16384,test case AuditLoggerTest fail on aarch64 platform,,Run-time quality issues,3:53 - 3:102,1,arjan
64:2,"When run ant; ant test on aarch64 platform, AuditLoggerTest failedïĳŇt…",CASSANDRA-16384,"When run ant; ant test on aarch64 platform, AuditLoggerTest failedïĳŇthe output as follows:",,Run-time quality issues,3:122 - 3:212,1,arjan
64:15,RenhaiZhao,CASSANDRA-16384,RenhaiZhao,,Comment,4:1008 - 4:1017,1,arjan
64:3,I think the root cause is : [https://github.com/OpenHFT/Chronicle-Queu…,CASSANDRA-16384,I think the root cause is : [https://github.com/OpenHFT/Chronicle-Queue/issues/528],,"Assumptions
Motivation of design issue",4:1020 - 4:1102,2,arjan
64:4,I will try to upgrade all chronicle jar version to latest stable versi…,CASSANDRA-16384,I will try to upgrade all chronicle jar version to latest stable version,,Technology solution,4:1105 - 4:1176,1,arjan
64:14,mck,CASSANDRA-16384,mck,,Comment,4:1234 - 4:1236,1,arjan
64:5,"No objections [~RenhaiZhao],",CASSANDRA-16384,"No objections [~RenhaiZhao],",,Architectural solution benefits and drawbacks,4:1239 - 4:1266,1,arjan
64:6,an upgrade to the latest chronicle-queue-5.x.x makes  sense here. That…,CASSANDRA-16384,"an upgrade to the latest chronicle-queue-5.x.x makes  sense here. That would be a major upgrade of the dependency so maybe some APIs have  changed. Please make sure to upgrade the chronicle-* dependencies (as found in the corre-  sponding chronicle-bom).
",,"Architectural solution benefits and drawbacks
Technology solution",4:1268 - 4:1523,2,arjan
64:13,mck,CASSANDRA-16384,mck,,Comment,5:465 - 5:467,1,arjan
64:7,CI looks [good|https://ci-cassandra.apache.org/job/Cassandra-devbranch…,CASSANDRA-16384,"CI looks [good|https://ci-cassandra.apache.org/job/Cassandra-devbranch/302/].
",,Architectural solution benefits and drawbacks,5:470 - 5:548,1,arjan
64:12,mck,CASSANDRA-16384,mck,,Comment,6:638 - 6:640,1,arjan
64:8,"FYI, the areas of impact of the major upgrade of chronicle-queue is Au…",CASSANDRA-16384," FYI, the areas of impact of the major upgrade of chronicle-queue is Auditing, FQL  (Full Query Logger), and Diagnostics. It makes sense to upgrade before 4.0 GA.
",,"Architectural design configuration
Architectural solution benefits and drawbacks",6:642 - 6:805,2,arjan
64:9,Major changes from 4 to 5 are described here: https://github.com/OpenH…,CASSANDRA-16384,"Major changes from 4 to 5 are described here: https://github.com/OpenHFT/Chronicle-  Queue#the-changes-from-chronicle-queue-version-4-to-version-5  There’s signifcant changes in the way chronicle-queue version 5 deals with its tailers (they are  now read-only and the indexing are not lazy) and locking model (a separate metadata.cq4t fle  is now used). More importantly, a version 4 Tailer shouldn’t be reading from a version 5 Ap-  pender.",,Technology solution,6:806 - 6:1246,1,arjan
64:10,The last reason breaks our [Beta Release Lifecycle rules|https://cwiki…,CASSANDRA-16384,The last reason breaks our [Beta Release Lifecycle rules|https://cwiki.apache.org/confuence/display/CASSA  if we are to defne the chronicle-queue fles as a project interface (which it is),,Architectural solution benefits and drawbacks,6:1248 - 6:1434,1,arjan
64:11,For this reason  I shall raise the upgrade via the dev ML.,CASSANDRA-16384,For this reason  I shall raise the upgrade via the dev ML.,,Architectural design configuration,6:1437 - 6:1494,1,arjan
65:1,Refactor nodetool,CASSANDRA-6381,Refactor nodetool,,Technical debt,3:52 - 3:68,1,arjan
65:2,We have way too many nodetool commands(more than 40) packed in one Nod…,CASSANDRA-6381,"We have way too many nodetool commands(more than 40) packed in one NodeCmd class. And  we are trying to add more commands.
",,Technical debt,3:88 - 3:211,1,arjan
65:3,https://github.com/airlift/airline could be a good ft to take out each…,CASSANDRA-6381,"https://github.com/airlift/airline could be a good ft to take out each command into sub command  class.
",,"Architectural solution benefits and drawbacks
Technology solution",3:212 - 3:316,2,arjan
65:34,clardeur,CASSANDRA-6381,clardeur,,Comment,3:641 - 3:648,1,arjan
65:4,Rewriting completely the nodetool CLI. * isolation and encapsulation o…,CASSANDRA-6381,"Rewriting completely the nodetool CLI.
* isolation and encapsulation of each commands into a sub-class;  * separation of local and global options;  * auto-documented;",,Architectural design configuration,3:651 - 3:817,1,arjan
65:33,jbellis,CASSANDRA-6381,jbellis,,Comment,4:4 - 4:10,1,arjan
65:6,I don’t see any usages of javax.inject -- is that a dependency of airl…,CASSANDRA-6381,"I don’t see any usages of javax.inject -- is that a dependency of airline?
",,"Assumptions
Technology solution",4:13 - 4:88,2,arjan
65:32,clardeur,CASSANDRA-6381,clardeur,,Comment,4:92 - 4:99,1,arjan
65:5,"Yes, this is airline that need javax.inject.",CASSANDRA-6381,"Yes, this is airline that need javax.inject.
",,Technology solution,4:102 - 4:147,1,arjan
65:31,mishail,CASSANDRA-6381,mishail,,Comment,4:192 - 4:198,1,arjan
65:7,General comment - all the commands share the same structure of {{run()…,CASSANDRA-6381,"General comment - all the commands share the same structure of {{run()}} method:  1 @Override  2 public void run()  3 {  4 try (NodeProbe probe = connect())  5 {  6 <command specific calls>  7 } catch (IOException e)  8 {  9 throw new RuntimeException(""Error while closing JMX connection"", e)  ;  10 }  11 }",,Architectural component behavior and structure,4:1194 - 4:1500,1,arjan
65:8,I believe it can be moved up into the base class ({{NodeToolCmd}}),CASSANDRA-6381,I believe it can be moved up into the base class ({{NodeToolCmd}}),,Architectural component behavior and structure,4:1503 - 4:1568,1,arjan
65:9,so each concrete  command will just need to implement an abstract meth…,CASSANDRA-6381," so each concrete  command will just need to implement an abstract method.
",,Architectural solution benefits and drawbacks,4:1571 - 4:1646,1,arjan
65:30,clardeur,CASSANDRA-6381,clardeur,,Comment,4:1739 - 4:1746,1,arjan
65:10,It’s printed at the end of output to keep the same behavior with or wi…,CASSANDRA-6381,It’s printed at the end of output to keep the same behavior with or without -T option.,,Architectural solution benefits and drawbacks,4:1897 - 4:1982,1,arjan
65:11,The old behavior (csv format) was not really POSIX-like argument conve…,CASSANDRA-6381,"The old behavior (csv format) was not really POSIX-like argument conventions.
",,Architectural solution benefits and drawbacks,4:2101 - 4:2179,1,arjan
65:23,Move into {{NodeToolCmd}} the duplicated code and create the abstract…,CASSANDRA-6381,"Move into {{NodeToolCmd}} the duplicated code and create the abstract method {{ex-  ecute()}} implemented by each specifc command.
",,Architectural component behavior and structure,5:1123 - 5:1254,1,arjan
65:29,mishail,CASSANDRA-6381,mishail,,Comment,6:272 - 6:278,1,arjan
65:12,"One more thing, new implementation doesn’t save ""nodetool.history"" any…",CASSANDRA-6381,"One more thing, new implementation doesn’t save ""nodetool.history"" anymore.
Right?
",,"Architectural design configuration
Assumptions",6:281 - 6:365,2,arjan
65:28,mishail,CASSANDRA-6381,mishail,,Comment,7:52 - 7:58,1,arjan
65:13,"Merci, I’m almost happy :) Just remove unused imports from the top.",CASSANDRA-6381,"Merci, I’m almost happy :) Just remove unused imports from the top.
",,Architectural solution benefits and drawbacks,7:61 - 7:129,1,arjan
65:14,Would it be better to keep only valid commands in the history? Like th…,CASSANDRA-6381,Would it be better to keep only valid commands in the history? Like that  1 Runnable command = parser.parse(args);  2 printHistory(args);  3 command.run();,,Architectural component behavior and structure,7:146 - 7:300,1,arjan
65:27,rcoli,CASSANDRA-6381,rcoli,,Comment,7:1062 - 7:1066,1,arjan
65:15,"tl;dr - confguration variables, when set via JMX/nodetool, do not have…",CASSANDRA-6381,"tl;dr - confguration variables, when set via JMX/nodetool, do not have the same bounds  that they have when set in the conf fle.",,Architectural component behavior and structure,7:1196 - 7:1323,1,arjan
65:16,Ideally both cases would use the same setters and  getters.,CASSANDRA-6381,"Ideally both cases would use the same setters and  getters.
",,"Architectural component behavior and structure
Architectural solution benefits and drawbacks",7:1325 - 7:1385,2,arjan
65:26,jbellis,CASSANDRA-6381,jbellis,,Comment,7:1390 - 7:1396,1,arjan
65:17,That’s orthogonal to refactoring the code.,CASSANDRA-6381,"That’s orthogonal to refactoring the code.
",,Architectural solution benefits and drawbacks,7:1399 - 7:1442,1,arjan
65:25,clardeur,CASSANDRA-6381,clardeur,,Comment,7:1447 - 7:1454,1,arjan
65:18,"I agree, it’s done.",CASSANDRA-6381,"I agree, it’s done.
",,Architectural solution benefits and drawbacks,7:1525 - 7:1545,1,arjan
65:20,I reverted to the old version,CASSANDRA-6381,I reverted to the old version,,Architectural component behavior and structure,8:1 - 8:29,1,arjan
65:21,to not include functional change from a refactoring.,CASSANDRA-6381,to not include functional change from a refactoring.,,Architectural solution benefits and drawbacks,8:31 - 8:82,1,arjan
65:19,"Thanks [~mishail] for your suggestions, it’s better like this. :)",CASSANDRA-6381,"Thanks [~mishail] for your suggestions, it’s better like this. :)",,Architectural solution benefits and drawbacks,8:160 - 8:224,1,arjan
65:24,mishail,CASSANDRA-6381,mishail,,Comment,8:231 - 8:237,1,arjan
65:22,LGTM then,CASSANDRA-6381,LGTM then,,Architectural solution benefits and drawbacks,8:403 - 8:411,1,arjan
74:1,Upgrade Thrift,CASSANDRA-3213,Upgrade Thrift,,Technology solution,3:52 - 3:65,1,arjan
74:41,jfarrell,CASSANDRA-3213,jfarrell,,Comment,3:283 - 3:290,1,arjan
74:2,Upgrades thrift jar and generated code to latest 0.7.0 version,CASSANDRA-3213,Upgrades thrift jar and generated code to latest 0.7.0 version,,Technology solution,3:293 - 3:354,1,arjan
74:40,jbellis,CASSANDRA-3213,jbellis,,Comment,3:360 - 3:366,1,arjan
74:3,Does this fx anything urgent? If not I’d be included to put it in 1.1…,CASSANDRA-3213," Does this fx anything urgent?
If not I’d be included to put it in 1.1 instead of risking 1.0 stability during the freeze.
",,Risks,3:368 - 3:492,1,arjan
74:39,jfarrell,CASSANDRA-3213,jfarrell,,Comment,3:496 - 3:503,1,arjan
74:4,nothing urgent that i’m aware of,CASSANDRA-3213, nothing urgent that i’m aware of,,Architectural solution benefits and drawbacks,3:505 - 3:537,1,arjan
74:38,jbellis,CASSANDRA-3213,jbellis,,Comment,3:543 - 3:549,1,arjan
74:5,How close is 0.8? Should we just skip to that in 1.1?,CASSANDRA-3213,"How close is 0.8? Should we just skip to that in 1.1?
",,"Architectural design configuration
Assumptions",3:552 - 3:606,2,arjan
74:37,jfarrell,CASSANDRA-3213,jfarrell,,Comment,3:610 - 3:617,1,arjan
74:6,"I’m preparing the 0.8.0rc now, we should wait and go with that once it…",CASSANDRA-3213," I’m preparing the 0.8.0rc now, we should wait and go with that once its done",,Architectural design configuration,3:619 - 3:695,1,arjan
74:36,slebresne,CASSANDRA-3213,slebresne,,Comment,3:701 - 3:709,1,arjan
74:7,"Thrift 0.8 is out now. However, I quickly tried updating trunk to it b…",CASSANDRA-3213,"Thrift 0.8 is out now. However, I quickly tried updating trunk to it but there  is a few hiccups. In particular, it has change the access to the trans_ feld of Abstract-  NonBlockingServer.FrameBufer which we use in our custom servers to record the socket in  SocketSessionManagementService.",,Technology solution,3:712 - 3:1002,1,arjan
74:8,I’m far from being a thrift expert but I didn’t see a very  trivial wa…,CASSANDRA-3213,"I’m far from being a thrift expert but I didn’t see a very  trivial way to deal with that.
",,Motivation of design issue,3:1004 - 3:1095,1,arjan
74:9,"Also, probably most of the bulk of our current CustomTHsHaServer can p…",CASSANDRA-3213,"Also, probably most of the bulk of our current CustomTHsHaServer can probably go away  2
since 0.8 includes THRIFT-1167 (though we still want to keep the part that register the  socket).",,"Architectural component behavior and structure
Assumptions",3:1096 - 4:97,2,arjan
74:35,jfarrell,CASSANDRA-3213,jfarrell,,Comment,4:264 - 4:271,1,arjan
74:10,"Jake Luciani and I where talking about this, changing to update to 0.8…",CASSANDRA-3213,"Jake Luciani and I where talking about this, changing to update to 0.8 and remov-  ing custom THsHa and use the default.",,Architectural solution benefits and drawbacks,4:274 - 4:393,1,arjan
74:34,jfarrell,CASSANDRA-3213,jfarrell,,Comment,4:434 - 4:441,1,arjan
74:11,In THRIFT-1167 the TNonblockingTransport in TNonblockingServer.FrameBu…,CASSANDRA-3213,In THRIFT-1167 the TNonblockingTransport in TNonblockingServer.FrameBufer  was moved into AbstractNonblockingServer.FrameBufer and was changed from public to  private.,,Technology solution,4:444 - 4:610,1,arjan
74:12,This causes the transport to not be available for SocketSessionManagem…,CASSANDRA-3213,This causes the transport to not be available for SocketSessionManagementService  as noted above. There is no short term workaround for this. I have everything else ready  for patching but with this issue it will be impossible to use Thrift 0.8.0. ,,Motivation of design issue,4:612 - 4:859,1,arjan
74:33,slebresne,CASSANDRA-3213,slebresne,,Comment,4:1003 - 4:1011,1,arjan
74:13,Is there any chance 0.9 will be released any time soon ? Because other…,CASSANDRA-3213," Is there any chance 0.9 will be released any time soon ? Because otherwise  maybe it’s worth updating to 0.7 for 1.1.
",,Technology solution,4:1013 - 4:1132,1,arjan
74:32,jfarrell,CASSANDRA-3213,jfarrell,,Comment,4:1137 - 4:1144,1,arjan
74:14,0.8 was released about 2 weeks ago and there are no urgent blockers or…,CASSANDRA-3213,0.8 was released about 2 weeks ago and there are no urgent blockers or huge  additions to justify a new rc right now.,,Technology solution,4:1147 - 4:1263,1,arjan
74:15,If you need me to rebase the 0.7 version attached to  this ticket let…,CASSANDRA-3213, If you need me to rebase the 0.7 version attached to  this ticket let me know,,Architectural solution benefits and drawbacks,4:1264 - 4:1341,1,arjan
74:31,jbellis,CASSANDRA-3213,jbellis,,Comment,4:1348 - 4:1354,1,arjan
74:16,Where was the Thrift wire-compatibility change? Was that 0.6 -> 0.7? I…,CASSANDRA-3213,Where was the Thrift wire-compatibility change? Was that 0.6 -> 0.7? If so  maybe we should upgrade to 0.7 for our 1.1 release,,"Assumptions
Technology solution",4:1357 - 4:1482,2,arjan
74:17,so that people can use a modern Thrift  client-side.,CASSANDRA-3213,"so that people can use a modern Thrift  client-side.
",,Architectural solution benefits and drawbacks,4:1484 - 4:1537,1,arjan
74:30,appodictic,CASSANDRA-3213,appodictic,,Comment,4:1542 - 4:1551,1,arjan
74:18,Hive made the jump to 0.7.0 thrift for hive 0.8.0.,CASSANDRA-3213, Hive made the jump to 0.7.0 thrift for hive 0.8.0.,,Other system architectural solutions,4:1553 - 4:1603,1,arjan
74:19,Currently this makes it hard  to initialize an embedded C* process ins…,CASSANDRA-3213,"Currently this makes it hard  to initialize an embedded C* process inside a hive unit test.
",,Technical debt,4:1605 - 4:1697,1,arjan
74:29,jfarrell,CASSANDRA-3213,jfarrell,,Comment,4:1786 - 4:1793,1,arjan
74:20,Hive issue found to be IncompatibleClassChangeError due to compiling a…,CASSANDRA-3213,Hive issue found to be IncompatibleClassChangeError due to compiling against  newer version of thrift and then using version within cassandra at runtime.,,Motivation of design issue,4:1796 - 4:1948,1,arjan
74:28,jfarrell,CASSANDRA-3213,jfarrell,,Comment,4:2730 - 4:2737,1,arjan
74:21,The exclusion of slf4j-log4j12 in the cass build.xml within the thrift…,CASSANDRA-3213,"The exclusion of slf4j-log4j12 in the cass build.xml within the thrift stanza was  due to the thrift initially including this as a dependency in thrift 0.6.1. I fxed this in the  0.7 release so the exclusion will no longer be needed the cass build.xml. slf4j 1.6.1 is a listed  cassandra dependency which should not be getting removed by the listed thrift exclusion.
The contrib item should be using this version of slf4j provided by cassandra",,Architectural solution benefits and drawbacks,4:2740 - 4:3183,1,arjan
74:27,dbrosius@apache.org,CASSANDRA-3213,dbrosius@apache.org,,Comment,5:27 - 5:45,1,arjan
74:22,does THRIFT-1121 make thrift 0.9 important then?,CASSANDRA-3213,"does THRIFT-1121 make thrift 0.9 important then?
",,"Architectural solution benefits and drawbacks
Assumptions
Technology solution",5:48 - 5:97,3,arjan
74:26,jbellis,CASSANDRA-3213,jbellis,,Comment,5:102 - 5:108,1,arjan
74:23,"I could be wrong, but I’m reading THRIFT-1121 as saying that the bug w…",CASSANDRA-3213," I could be wrong, but I’m reading THRIFT-1121 as saying that the bug was fxed  in 0.8 by reverting the patch that caused the regression.
",,Architectural solution benefits and drawbacks,5:110 - 5:248,1,arjan
74:25,jbellis,CASSANDRA-3213,jbellis,,Comment,5:253 - 5:259,1,arjan
74:24,"Oh, right -- we’re on 0.7 right now. So yes, I would say that makes up…",CASSANDRA-3213," Oh, right -- we’re on 0.7 right now. So yes, I would say that makes upgrading to  0.9 more urgent.
",,Architectural solution benefits and drawbacks,5:261 - 5:361,1,arjan
75:1,Upgrade thrift to latest release version (0.9.x),CASSANDRA-3719,Upgrade thrift to latest release version (0.9.x),,Technology solution,3:52 - 3:99,1,arjan
75:2,In Cassandra-3213 thrift was upgraded to thrift 0.7 and not the latest…,CASSANDRA-3719,In Cassandra-3213 thrift was upgraded to thrift 0.7 and not the latest 0.8 release.,,Technical debt,3:119 - 3:201,1,arjan
75:3,This is due to  THRIFT-1167 where the TNonblockingTransport in TNonblo…,CASSANDRA-3719,This is due to  THRIFT-1167 where the TNonblockingTransport in TNonblockingServer.FrameBufer was moved  into AbstractNonblockingServer.FrameBufer and was changed from public to private. This causes  the transport to not be available for SocketSessionManagementService as noted above.,,Technology solution,3:203 - 3:485,1,arjan
75:4,There is  no short term workaround for this. I have everything ready f…,CASSANDRA-3719,"There is  no short term workaround for this.
I have everything ready for patching but with the above mentioned issue it will be impossible  to use Thrift 0.8.0. ",,Motivation of design issue,3:487 - 3:648,1,arjan
75:5,The fx for this is committed (THRIFT-1464) and will be available in th…,CASSANDRA-3719,The fx for this is committed (THRIFT-1464) and will be available in the  next Thrift release 0.9. ,,"Architectural solution benefits and drawbacks
Technology solution",3:649 - 3:746,2,arjan
75:18,jfarrell,CASSANDRA-3719,jfarrell,,Comment,3:1010 - 3:1017,1,arjan
75:6,"Upgrades libthrift to latest 0.9.0 release,",CASSANDRA-3719,"Upgrades libthrift to latest 0.9.0 release,",,Technology solution,3:1020 - 3:1062,1,arjan
75:7,"updates generated code, and now Cus-  tomTHsHaServer extends THsHaServ…",CASSANDRA-3719,"updates generated code, and now Cus-  tomTHsHaServer extends THsHaServer.
",,Architectural component behavior and structure,3:1064 - 3:1138,1,arjan
75:17,tjake,CASSANDRA-3719,tjake,,Comment,3:1142 - 3:1146,1,arjan
75:8,"My only concern about this is the rest of the Apache projects (hadoop,…",CASSANDRA-3719,"My only concern about this is the rest of the Apache projects (hadoop,hive,etc) are  built on 0.7.0",,Risks,3:1149 - 3:1247,1,arjan
75:16,jfarrell,CASSANDRA-3719,jfarrell,,Comment,3:1300 - 3:1307,1,arjan
75:9,"Have started converting over other projects as well, Cassandra and HBa…",CASSANDRA-3719,"Have started converting over other projects as well, Cassandra and HBase where  just the frst projects I did. HBase upgraded to Thrift 0.9.0 in ticket HBASE-7005",,Architectural solution benefits and drawbacks,3:1310 - 3:1470,1,arjan
75:15,dbrosius,CASSANDRA-3719,dbrosius,,Comment,4:165 - 4:172,1,arjan
75:10,just a reminder that this jar version has the fx for https://issues.ap…,CASSANDRA-3719, just a reminder that this jar version has the fx for https://issues.apache.org/jira/browse/THRIFT-  1121,,Technology solution,4:174 - 4:278,1,arjan
75:11,which might be a win.,CASSANDRA-3719,"which might be a win.
",,"Architectural solution benefits and drawbacks
Assumptions",4:281 - 4:303,2,arjan
75:14,jbellis,CASSANDRA-3719,jbellis,,Comment,4:484 - 4:490,1,arjan
75:12,Better performance due to THRIFT-1121,CASSANDRA-3719,Better performance due to THRIFT-1121,,Architectural tactics,4:493 - 4:529,1,arjan
75:13,"compatibility with other projects using  0.9, and a year or two of bug…",CASSANDRA-3719,"compatibility with other projects using  0.9, and a year or two of bug fxes.
",,Architectural solution benefits and drawbacks,4:532 - 4:609,1,arjan
76:2,[patch] fx cli delete key bug,CASSANDRA-4132,[patch] fx cli delete key bug,,Architectural solution benefits and drawbacks,3:52 - 3:80,1,arjan
76:1,upgrading to jline 1.0,CASSANDRA-4132,upgrading to jline 1.0,,Technology solution,3:85 - 3:106,1,arjan
76:3,the delete key currently works like the backspace key which is annoyin…,CASSANDRA-4132,"the delete key currently works like the backspace key which is annoying. upgrading to jline-1.0  fxes this.
",,Run-time quality issues,3:126 - 3:234,1,arjan
76:4,upgrading to jline-1.0,CASSANDRA-4132,upgrading to jline-1.0,,Technology solution,3:199 - 3:220,1,arjan
77:1,add lz4 compression for internode compressio,CASSANDRA-5887,add lz4 compression for internode compressio,,Technology solution,3:52 - 3:95,1,arjan
77:2,Currently when internode compression is turned on it uses snappy.Snapp…,CASSANDRA-5887,Currently when internode compression is turned on it uses snappy.SnappyOutputStream. If  Snappy is not available this will fail.,,Existing system architecture description,3:115 - 3:242,1,arjan
77:3,lz4 compression is vetted for use in Cassandra. Would it make  sense t…,CASSANDRA-5887,lz4 compression is vetted for use in Cassandra. Would it make  sense to use lz4 for internode compression ? ,,"Architectural solution benefits and drawbacks
Assumptions",3:244 - 3:351,2,arjan
77:4,Would a new confg setting internode_compressor be  needed for compatib…,CASSANDRA-5887,"Would a new confg setting internode_compressor be  needed for compatibility ?
",,"Architectural solution benefits and drawbacks
Assumptions",3:352 - 3:430,2,arjan
77:17,jbellis,CASSANDRA-5887,jbellis,,Comment,3:550 - 3:556,1,arjan
77:5,We could omit the option if we make LZ4 only a fallback if Snappy isn’…,CASSANDRA-5887,"We could omit the option if we make LZ4 only a fallback if Snappy isn’t present,",,Architectural design configuration,3:559 - 3:638,1,arjan
77:6,but  it probably makes more sense to,CASSANDRA-5887,but  it probably makes more sense to,,"Architectural solution benefits and drawbacks
Assumptions",3:640 - 3:675,2,arjan
77:7,make LZ4 the new default for the same reasons we switched  to it for s…,CASSANDRA-5887,"make LZ4 the new default for the same reasons we switched  to it for sstable compression, in which case we do want an option",,Architectural design configuration,3:677 - 3:800,1,arjan
77:8,so existing clusters aren’t  screwed as soon as a new node restarts.,CASSANDRA-5887,"so existing clusters aren’t  screwed as soon as a new node restarts.
",,Architectural solution benefits and drawbacks,3:802 - 3:871,1,arjan
77:16,marcuse,CASSANDRA-5887,marcuse,,Comment,3:891 - 3:897,1,arjan
77:9,sounds good to me,CASSANDRA-5887, sounds good to me,,Architectural solution benefits and drawbacks,3:899 - 3:916,1,arjan
77:10,lets make LZ4 the new internode compressor and if connecting to (or ge…,CASSANDRA-5887,"lets make LZ4 the new internode compressor and if connecting to (or getting a connec-  tion from) an old node, we use snappy",,Architectural design configuration,3:919 - 3:1042,1,arjan
77:15,marcuse,CASSANDRA-5887,marcuse,,Comment,3:1048 - 3:1054,1,arjan
77:12,uses lz4 to compress internode trafc,CASSANDRA-5887,uses lz4 to compress internode trafc,,Technology solution,3:1057 - 3:1092,1,arjan
77:13,patch is large since it upgrades the lz4 lib to the latest version. Th…,CASSANDRA-5887,"patch is large since it upgrades the lz4 lib to the latest version. The one shipped only  did ""async fush"" - meaning it didnt actually fush all the data.
",,Architectural solution benefits and drawbacks,4:1 - 4:155,1,arjan
77:14,jbellis,CASSANDRA-5887,jbellis,,Comment,4:159 - 4:165,1,arjan
77:11,+1,CASSANDRA-5887,+1,,Architectural solution benefits and drawbacks,4:168 - 4:169,1,arjan
78:1,Upgrade Apache Thrift to 0.9.1,CASSANDRA-5923,Upgrade Apache Thrift to 0.9.1,,Technology solution,3:52 - 3:81,1,arjan
78:2,Upgrades the Apache Thrift version from 0.9.0 to 0.9.1,CASSANDRA-5923,Upgrades the Apache Thrift version from 0.9.0 to 0.9.1,,Technology solution,3:101 - 3:154,1,arjan
78:3,which include over 190 bug fxes and  additions since the previous rele…,CASSANDRA-5923,which include over 190 bug fxes and  additions since the previous release. ,,Architectural solution benefits and drawbacks,3:156 - 3:230,1,arjan
78:4,This will also upgrade commons-lang from 2.6 to 3.1,CASSANDRA-5923,This will also upgrade commons-lang from 2.6 to 3.1,,Technology solution,3:231 - 3:281,1,arjan
78:5,as it is  a dependency for Thrift.,CASSANDRA-5923,"as it is  a dependency for Thrift.
",,Architectural solution benefits and drawbacks,3:283 - 3:318,1,arjan
78:24,jfarrell,CASSANDRA-5923,jfarrell,,Comment,3:598 - 3:605,1,arjan
78:6,use  an internal only version when the packages are available via pypi…,CASSANDRA-5923,use  an internal only version when the packages are available via pypi.,,Existing system architecture description,3:683 - 3:753,1,arjan
78:7,I would recommend that,CASSANDRA-5923,I would recommend that,,Architectural solution benefits and drawbacks,3:755 - 3:776,1,arjan
78:8,Thrift should be listed as a dependency in setup.py rather than using…,CASSANDRA-5923,Thrift should be listed as a dependency in setup.py rather than using the thrift-python-  internal-only-0.7.0.zip,,Architectural component behavior and structure,3:779 - 3:891,1,arjan
78:9,"unless there are modifcations to the internal only version, which I am…",CASSANDRA-5923,"unless there are modifcations to the internal only version, which I am  unaware of.
",,Architectural solution benefits and drawbacks,3:893 - 3:976,1,arjan
78:23,aleksey,CASSANDRA-5923,aleksey,,Comment,3:981 - 3:987,1,arjan
78:10,There are no modifcations AFAIK. You should just bundle it the same wa…,CASSANDRA-5923,"There are no modifcations AFAIK. You should just bundle it the same way it  is now, but with 0.9.1 instead.",,Architectural component behavior and structure,3:990 - 3:1096,1,arjan
78:11,It’s bundled so that you can start using cqlsh immediately  without in…,CASSANDRA-5923,"It’s bundled so that you can start using cqlsh immediately  without installing anything (that and cql-internal-only).
",,Architectural solution benefits and drawbacks,3:1098 - 3:1216,1,arjan
78:22,carlyeks,CASSANDRA-5923,carlyeks,,Comment,4:4 - 4:11,1,arjan
78:12,+1,CASSANDRA-5923,+1,,Architectural solution benefits and drawbacks,4:14 - 4:15,1,arjan
78:21,carlyeks,CASSANDRA-5923,carlyeks,,Comment,4:315 - 4:322,1,arjan
78:13,I’ve also updated references to o.a.commons.lang to lang3.,CASSANDRA-5923,I’ve also updated references to o.a.commons.lang to lang3.,,Architectural component behavior and structure,4:422 - 4:479,1,arjan
78:14,The only issue I had was that  NotImplementedException has been remove…,CASSANDRA-5923,The only issue I had was that  NotImplementedException has been remove;,,Motivation of design issue,4:481 - 4:551,1,arjan
78:15,I’ve replaced that usage with Unsupported-  OperationException ([relat…,CASSANDRA-5923,"I’ve replaced that usage with Unsupported-  OperationException ([related commons issue|https://issues.apache.org/jira/browse/LANG-  769]).
",,Architectural component behavior and structure,4:553 - 4:692,1,arjan
78:20,aleksey,CASSANDRA-5923,aleksey,,Comment,4:696 - 4:702,1,arjan
78:16,"Nope, you’ve bundled it all wrong - and broke cqlsh.",CASSANDRA-5923,"Nope, you’ve bundled it all wrong - and broke cqlsh.
",,Architectural solution benefits and drawbacks,4:705 - 4:758,1,arjan
78:17,Unzip both the old and the new thrift-internal-only-x.zip and compare…,CASSANDRA-5923,"Unzip both the old and the new thrift-internal-only-x.zip and compare the structure.
",,Architectural component behavior and structure,4:759 - 4:844,1,arjan
78:19,aleksey,CASSANDRA-5923,aleksey,,Comment,4:899 - 4:905,1,arjan
78:18,"+1 and committed, thanks.",CASSANDRA-5923,"+1 and committed, thanks.
",,Architectural solution benefits and drawbacks,4:908 - 4:933,1,arjan
79:1,ant codecoverage no longer works,CASSANDRA-6800,ant codecoverage no longer works,,Run-time quality issues,3:52 - 3:83,1,arjan
79:2,Code coverage does not run currently,CASSANDRA-6800,Code coverage does not run currently,,Run-time quality issues,3:103 - 3:138,1,arjan
79:3,due to cobertura jdk incompatibility,CASSANDRA-6800,due to cobertura jdk incompatibility,,Motivation of design issue,3:140 - 3:175,1,arjan
79:20,jbellis,CASSANDRA-6800,jbellis,,Comment,4:4 - 4:10,1,arjan
79:4,I’m getting a lot of errors even after realclean.,CASSANDRA-6800,I’m getting a lot of errors even after realclean.,,Run-time quality issues,4:13 - 4:61,1,arjan
79:19,appodictic,CASSANDRA-6800,appodictic,,Comment,4:2425 - 4:2434,1,arjan
79:5,"From maven I have used the cobertura  plugin,",CASSANDRA-6800,"From maven I have used the cobertura  plugin,",,Architectural design configuration,4:2475 - 4:2519,1,arjan
79:6,worked great,CASSANDRA-6800,worked great,,Architectural solution benefits and drawbacks,4:2521 - 4:2532,1,arjan
79:7,What a PITA ant is/,CASSANDRA-6800, What a PITA ant is/,,Architectural solution benefits and drawbacks,4:2534 - 4:2553,1,arjan
79:8,Maybe we should switch to maven :),CASSANDRA-6800,Maybe we should switch to maven :),,"Assumptions
Technology solution",4:2555 - 4:2588,2,arjan
79:9,I made it all the way though the process and it build the cobertura.se…,CASSANDRA-6800,I made it all the way though the process and it build the cobertura.ser but ran into some  problem with the report target.,,Run-time quality issues,4:2591 - 4:2712,1,arjan
79:18,jbellis,CASSANDRA-6800,jbellis,,Comment,5:4 - 5:10,1,arjan
79:10,I’ve committed the version change,CASSANDRA-6800,I’ve committed the version change,,Technology solution,5:13 - 5:45,1,arjan
79:11,"since it’s clearly an improvement, but leaving  this open until it act…",CASSANDRA-6800,"since it’s clearly an improvement, but leaving  this open until it actually works. :)",,Architectural solution benefits and drawbacks,5:47 - 5:131,1,arjan
79:17,mishail,CASSANDRA-6800,mishail,,Comment,5:383 - 5:389,1,arjan
79:12,"It’s not a doubling, the 1st line refers to {{""cobertura.classpath""}}.",CASSANDRA-6800,"It’s not a doubling, the 1st line refers to {{""cobertura.classpath""}}.
",,Architectural component behavior and structure,5:392 - 5:463,1,arjan
79:16,mishail,CASSANDRA-6800,mishail,,Comment,5:528 - 5:534,1,arjan
79:13,Worked for me,CASSANDRA-6800,Worked for me,,Architectural solution benefits and drawbacks,5:564 - 5:576,1,arjan
79:15,jbellis,CASSANDRA-6800,jbellis,,Comment,5:583 - 5:589,1,arjan
79:14,Ship it!,CASSANDRA-6800,"Ship it!
",,Architectural solution benefits and drawbacks,5:592 - 5:601,1,arjan
80:4,DirectByteBufer compatible LZ4 methods,CASSANDRA-7039,DirectByteBufer compatible LZ4 methods,,Motivation of design issue,3:52 - 3:89,1,arjan
80:1,"As we move more things of-heap, it’s becoming more and more essential…",CASSANDRA-7039,"As we move more things of-heap, it’s becoming more and more essential to be able to use Direct-  ByteBufer (or native pointers) in various places.",,Motivation of design issue,3:109 - 3:254,1,arjan
80:2,"Unfortunately LZ4 doesn’t currently support  this operation, despite b…",CASSANDRA-7039,"Unfortunately LZ4 doesn’t currently support  this operation, despite being JNI based ",,Technology solution,3:256 - 3:340,1,arjan
80:3,this means we both have to perform unnecessary copies  to de/compress…,CASSANDRA-7039,"this means we both have to perform unnecessary copies  to de/compress data from DBB, but also we can stall GC as any JNI method operating over a  java array using the GetPrimitiveArrayCritical enters a critical section that prevents GC for its  duration. This means STWs will be at least as long any running compression/decompression (and  no GC will happen until they complete, so it’s additive).
",,Run-time quality issues,3:343 - 3:741,1,arjan
80:14,benedict,CASSANDRA-7039,benedict,,Comment,3:1244 - 3:1251,1,arjan
80:5,Scanned the patch and it looks good,CASSANDRA-7039,Scanned the patch and it looks good,,Architectural solution benefits and drawbacks,3:1269 - 3:1303,1,arjan
80:7,(although I would have liked,CASSANDRA-7039,(although I would have liked,,Architectural solution benefits and drawbacks,3:1305 - 3:1332,1,arjan
80:6,"a public method for operating over a direct address, but it looks like…",CASSANDRA-7039,"a public method for operating over a direct address, but it looks like this would have been  difcult to both honour the public Java API, keep the implementation clean and support  32bit pointers on 32bit VMs).
",,Architectural component behavior and structure,3:1335 - 3:1544,1,arjan
80:13,jpountz,CASSANDRA-7039,jpountz,,Comment,4:215 - 4:221,1,arjan
80:8,The new 1.3.0 release now supports (de)compression on top of the ByteB…,CASSANDRA-7039,"The new 1.3.0 release now supports (de)compression on top of the ByteBufer  API.
",,Technology solution,4:224 - 4:305,1,arjan
80:12,blambov,CASSANDRA-7039,blambov,,Comment,4:309 - 4:315,1,arjan
80:9,Attached patch updates the lz4-java library to 1.3.0.,CASSANDRA-7039,"Attached patch updates the lz4-java library to 1.3.0.
",,Technology solution,4:318 - 4:372,1,arjan
80:11,benedict,CASSANDRA-7039,benedict,,Comment,4:376 - 4:383,1,arjan
80:10,Is there much point upgrading without making use of the new API?,CASSANDRA-7039," Is there much point upgrading without making use of the new API?
",,"Architectural solution benefits and drawbacks
Assumptions",4:385 - 4:451,2,arjan
81:1,Upgrade NBHM,CASSANDRA-7128,Upgrade NBHM,,Technology solution,3:52 - 3:63,1,arjan
81:2,Upgrade NBHM to use the Boundary maintained version,CASSANDRA-7128,Upgrade NBHM to use the Boundary maintained version,,Technology solution,3:83 - 3:133,1,arjan
81:23,jbellis,CASSANDRA-7128,jbellis,,Comment,3:219 - 3:225,1,arjan
81:3,great minds think alike :),CASSANDRA-7128,great minds think alike :),,Architectural solution benefits and drawbacks,3:228 - 3:253,1,arjan
81:22,benedict,CASSANDRA-7128,benedict,,Comment,3:259 - 3:266,1,arjan
81:4,"Actually, this points to the fact we should probably update NBHM, sepa…",CASSANDRA-7128,"Actually, this points to the fact we should probably update NBHM, separately:  [https://github.com/boundary/high-scale-lib/commit/a21a81a9293013233784566bc0e5e83f94d6408a]",,Technology solution,3:269 - 3:439,1,arjan
81:21,benedict,CASSANDRA-7128,benedict,,Comment,3:445 - 3:452,1,arjan
81:5,Perhaps we should move to [https://github.com/boundary/high-scale-lib/…,CASSANDRA-7128,"Perhaps we should move to [https://github.com/boundary/high-scale-lib/commits/master]?
",,"Assumptions
Technology solution",3:455 - 3:542,2,arjan
81:6,Seems to be kept more up-to-date.,CASSANDRA-7128,"Seems to be kept more up-to-date.
",,Architectural solution benefits and drawbacks,3:543 - 3:577,1,arjan
81:20,benedict,CASSANDRA-7128,benedict,,Comment,3:854 - 3:861,1,arjan
81:7,+1,CASSANDRA-7128,+1,,Architectural solution benefits and drawbacks,3:864 - 3:865,1,arjan
81:19,dbrosius,CASSANDRA-7128,dbrosius,,Comment,4:4 - 4:11,1,arjan
81:8,This patch converts high-scale-lib.jar to one fetched with a maven gro…,CASSANDRA-7128,This patch converts high-scale-lib.jar to one fetched with a maven groupId of  com.boundary.high-scale-lib,,Architectural component behavior and structure,4:14 - 4:119,1,arjan
81:9,Unfortunately this version of the jar is not available on maven centra…,CASSANDRA-7128,"Unfortunately this version of the jar is not available on maven central, but only on http://maven.boundary.com/artifa  What this means is if people now try to build from the pom it will fail.
try:  ant publish  mvn -f ~/.m2/repository/org/apache/cassandra/cassandra-all/2.1.0-beta2-SNAPSHOT/cassandra-  all-2.1.0-beta2-SNAPSHOT.pom dependency:tree  to see the problem.
",,Architectural solution benefits and drawbacks,4:122 - 4:492,1,arjan
81:10,add this repo to the published pom,CASSANDRA-7128, add this repo to the published pom,,Architectural component behavior and structure,4:522 - 4:556,1,arjan
81:11,have users who want to build from the pom add the url to their setting…,CASSANDRA-7128,have users who want to build from the pom add the url to their settings.xml fle,,Architectural component behavior and structure,4:566 - 4:644,1,arjan
81:12,"The frst one is easier for users, but is discouraged,",CASSANDRA-7128,"The frst one is easier for users, but is discouraged,",,Architectural solution benefits and drawbacks,4:647 - 4:699,1,arjan
81:13,"the second one is more complicated  for users, unless they understand…",CASSANDRA-7128,"the second one is more complicated  for users, unless they understand what’s going on.
",,Architectural component behavior and structure,4:701 - 4:788,1,arjan
81:14,If we do 2) we should at least document somewhere what needs doing.,CASSANDRA-7128,"If we do 2) we should at least document somewhere what needs doing.
",,Architectural component behavior and structure,4:789 - 4:857,1,arjan
81:16,"of course, really ideally is",CASSANDRA-7128,"of course, really ideally is",,Architectural solution benefits and drawbacks,4:925 - 4:952,1,arjan
81:15,get the boundary folks to just publish to maven central  like every ot…,CASSANDRA-7128,"get the boundary folks to just publish to maven central  like every other fool on the planet.
",,Architectural design configuration,4:962 - 4:1056,1,arjan
81:18,tjake,CASSANDRA-7128,tjake,,Comment,5:212 - 5:216,1,arjan
81:17,The artifact is now in maven central.,CASSANDRA-7128,The artifact is now in maven central.,,Architectural design configuration,5:219 - 5:255,1,arjan
82:2,Out-of-Order keys with stress + CQL3,CASSANDRA-7245,Out-of-Order keys with stress + CQL3,,Run-time quality issues,3:52 - 3:87,1,arjan
82:1,We have been generating data (stress with CQL3 prepared) for CASSANDRA…,CASSANDRA-7245,"We have been generating data (stress with CQL3 prepared) for CASSANDRA-4718 and found  following problem almost in every SSTable generated (~200 GB of data and 821 SSTables).
We set up they keys to be 10 bytes in size (default) and population between 1 and 600000000.
Once I ran ’sstablekeys’ on the generated SSTable fles I got following exceptions:",,Run-time quality issues,3:107 - 3:458,1,arjan
82:3,It’s worth to mention that we have got 22 timeout exceptions but numbe…,CASSANDRA-7245,"It’s worth to mention that we have got 22 timeout exceptions but number of out-of-order keys is  much larger than that.
",,Run-time quality issues,4:886 - 4:1006,1,arjan
82:101,tjake,CASSANDRA-7245,tjake,,Comment,5:18 - 5:22,1,arjan
82:4,We were talking on the IRC and we suspect this is caused by CASSANDRA-…,CASSANDRA-7245,We were talking on the IRC and we suspect this is caused by CASSANDRA-6861,,Motivation of design issue,5:25 - 5:98,1,arjan
82:5,We need to push the ref counting of pooled bufers into the mutations i…,CASSANDRA-7245,"We need to push the ref counting of pooled bufers into the mutations in case they live  longer than the request.
",,Architectural design configuration,5:101 - 5:214,1,arjan
82:100,xedin,CASSANDRA-7245,xedin,,Comment,5:218 - 5:222,1,arjan
82:6,Jason told me that they idea was that it could only happen when there…,CASSANDRA-7245,"Jason told me that they idea was that it could only happen when there is an  operation timeout but I’m not sure why almost every of 862 SSTables has such keys, when  we only got total of 22 timeouts and there is no batching or anything, also it’s not obvious  why normal keys are getting sorted out of order too, also if the data is corrupted why the  key is of correct size?...
",,Motivation of design issue,5:225 - 5:604,1,arjan
82:99,tjake,CASSANDRA-7245,tjake,,Comment,5:608 - 5:612,1,arjan
82:7,Well an easy check would be roll back 6861 locally and see if the issu…,CASSANDRA-7245,"Well an easy check would be roll back 6861 locally and see if the issue goes away.
",,Architectural design configuration,5:615 - 5:698,1,arjan
82:98,brandon.williams,CASSANDRA-7245,brandon.williams,,Comment,5:702 - 5:717,1,arjan
82:8,Any chance you’re using HSHA? CASSANDRA-6285 which is still not  yet c…,CASSANDRA-7245,"Any chance you’re using HSHA? CASSANDRA-6285 which is still not  yet committed (I have a reason for that) could be a factor in that case.
",,"Assumptions
Motivation of design issue",5:720 - 5:858,2,arjan
82:97,xedin,CASSANDRA-7245,xedin,,Comment,5:862 - 5:866,1,arjan
82:9,"It’s using native, so no thrift involvement what so ever.",CASSANDRA-7245,"It’s using native, so no thrift involvement what so ever.",,Architectural design configuration,5:889 - 5:945,1,arjan
82:96,xedin,CASSANDRA-7245,xedin,,Comment,5:994 - 5:998,1,arjan
82:10,Can you please generate the same amount of data as you did before  but…,CASSANDRA-7245, Can you please generate the same amount of data as you did before  but with CASSANDRA-6861 reverted,,Architectural design configuration,5:1013 - 5:1112,1,arjan
82:11,so we can test shared bufer + ref counting theory?,CASSANDRA-7245,"so we can test shared bufer + ref counting theory?
",,Architectural solution benefits and drawbacks,5:1114 - 5:1165,1,arjan
82:95,benedict,CASSANDRA-7245,benedict,,Comment,5:1169 - 5:1176,1,arjan
82:12,"Whilst it isn’t conclusive, I have been able to generate the same erro…",CASSANDRA-7245,"Whilst it isn’t conclusive, I have been able to generate the same errors inserting  large data sets with cql3 over native transport, but not over thrift.
",,Run-time quality issues,5:1179 - 5:1333,1,arjan
82:94,jbellis,CASSANDRA-7245,jbellis,,Comment,5:1337 - 5:1343,1,arjan
82:13,Good idea.,CASSANDRA-7245,Good idea.,,Architectural solution benefits and drawbacks,5:1517 - 5:1526,1,arjan
82:14,"(And if it still reproduces w/o 6861, can you check 2.0?)",CASSANDRA-7245,"(And if it still reproduces w/o 6861, can you check 2.0?)",,Technology solution,5:1528 - 5:1584,1,arjan
82:93,jasobrown,CASSANDRA-7245,jasobrown,,Comment,5:1590 - 5:1598,1,arjan
82:16,"Reverted CASSANDRA-6861 as well as CASSANDRA-5663,",CASSANDRA-7245,"Reverted CASSANDRA-6861 as well as CASSANDRA-5663,",,Architectural design configuration,5:1601 - 5:1650,1,arjan
82:15,and was unable  to reproduce the keys out of order bug.,CASSANDRA-7245,and was unable  to reproduce the keys out of order bug.,,Architectural solution benefits and drawbacks,5:1652 - 5:1706,1,arjan
82:92,tjake,CASSANDRA-7245,tjake,,Comment,8:2971 - 8:2975,1,arjan
82:17,I was able to replicate the issue on a physical cluster.,CASSANDRA-7245," I was able to replicate the issue on a physical cluster.
",,Architectural design configuration,8:2977 - 8:3035,1,arjan
82:18,with v2 patch,CASSANDRA-7245,with v2 patch,,Technology solution,8:3036 - 8:3048,1,arjan
82:19,"I no longer see the corruption, but I do see a couple recount errors o…",CASSANDRA-7245,"I no longer see the corruption, but I do see a couple recount errors on the frst  inserts of the frst run.
",,Architectural solution benefits and drawbacks,8:3050 - 8:3157,1,arjan
82:91,jasobrown,CASSANDRA-7245,jasobrown,,Comment,8:3241 - 8:3249,1,arjan
82:20,"well, i see less IllegalReferenceCountExceptions, but still getting th…",CASSANDRA-7245,"well, i see less IllegalReferenceCountExceptions, but still getting the  7
keys out of order exception. I can get the cluster into that state within < 5 minutes using  the same stress command i inserted earlier in this ticket.
",,Architectural solution benefits and drawbacks,8:3261 - 9:153,1,arjan
82:90,benedict,CASSANDRA-7245,benedict,,Comment,9:158 - 9:165,1,arjan
82:21,There’s a race in your patch where a response can come back from anoth…,CASSANDRA-7245,"There’s a race in your patch where a response can come back from another  machine while the expiringmap is timing it out (and writing a hint), causing a ref can be  decremented twice.",,Motivation of design issue,9:168 - 9:350,1,arjan
82:22,Can fx this by only calling the postExpireHook if remove() actually  r…,CASSANDRA-7245,"Can fx this by only calling the postExpireHook if remove() actually  removes the item. It’s a pretty narrow race, though, so not convinced it’s the cause of such  easy reproduction.",,Architectural design configuration,9:352 - 9:532,1,arjan
82:23,Is it also possible Netty is tidying a reference for us if e.g. a conn…,CASSANDRA-7245,"Is it also possible Netty is tidying a reference for us if e.g. a connection gets disconnected?
Should we take a single reference to guard our native-transport-request thread’s participa-  tion in the write operation? Again, not convinced it’s causing these problems, but it’s a  concern for border cases.
",,"Assumptions
Motivation of design issue",9:535 - 9:842,2,arjan
82:24,"FYI, it’s not necessary for sourceFrame to be volatile, as it’s always…",CASSANDRA-7245,"FYI, it’s not necessary for sourceFrame to be volatile, as it’s always guarded by either  an executor service or concurrenthashmap access",,Architectural component behavior and structure,9:843 - 9:979,1,arjan
82:89,xedin,CASSANDRA-7245,xedin,,Comment,9:986 - 9:990,1,arjan
82:25,I still not sure if Netty is a direct cause of this problem and this i…,CASSANDRA-7245,"I still not sure if Netty is a direct cause of this problem and this is why - in  Memtable.put(DecoratedKey, ...) we clone key and cf, after that while Memtable is be-  ing fushed SSTableWriter.beforeAppend(DecoratedKey) does check if the last written key  greater or equals to current key as there are no errors reported on the fush that most luck-  ily leaves us with the situation when corruption (if it is a corruption) is happening after  SSTableWriter.beforeAppend(DecoratedKey) check.",,"Assumptions
Motivation of design issue",9:993 - 9:1483,2,arjan
82:88,benedict,CASSANDRA-7245,benedict,,Comment,9:1490 - 9:1497,1,arjan
82:26,Except that we sort in the Memtable/CLSM (and assert order at fush) by…,CASSANDRA-7245,"Except that we sort in the Memtable/CLSM (and assert order at fush) by Token  which is computed much earlier, whereas we write the raw key only, which could have been  corrupted by the time we copy it.
",,Motivation of design issue,9:1500 - 9:1702,1,arjan
82:87,jasobrown,CASSANDRA-7245,jasobrown,,Comment,9:1707 - 9:1715,1,arjan
82:27,"Just to clarify a few things: Is the sorting within Memtable.put(),  d…",CASSANDRA-7245,"Just to clarify a few things: Is the sorting within Memtable.put(),  due to adding the entry to the ConcurrentSkipListMap?
",,"Architectural design configuration
Assumptions",9:1730 - 9:1853,2,arjan
82:28,"SSTableWriter.beforeAppend(), correct?",CASSANDRA-7245,"SSTableWriter.beforeAppend(), correct?
",,Architectural component behavior and structure,9:1880 - 9:1919,1,arjan
82:29,still SSTableWriter?,CASSANDRA-7245,"still SSTableWriter?
",,Architectural component behavior and structure,9:1959 - 9:1980,1,arjan
82:86,xedin,CASSANDRA-7245,xedin,,Comment,9:2029 - 9:2033,1,arjan
82:30,"Ah, so that’s the piece I’m missing, we check actual bytes if tokens a…",CASSANDRA-7245,"Ah, so that’s the piece I’m missing, we check actual bytes if tokens are equal. ",,Architectural component behavior and structure,9:2036 - 9:2115,1,arjan
82:31,We  are going to do a test when instead of ByteBuf.slice we are always…,CASSANDRA-7245,"We  are going to do a test when instead of ByteBuf.slice we are always going to copy the data to  the byte[],",,Architectural component behavior and structure,9:2116 - 9:2224,1,arjan
82:85,tjake,CASSANDRA-7245,tjake,,Comment,9:2277 - 9:2281,1,arjan
82:32,You can also work around the problem by changing the allocator in CBUt…,CASSANDRA-7245,You can also work around the problem by changing the allocator in CBUtil to  UnpooledByteBufAllocator(false),,Architectural component behavior and structure,9:2284 - 9:2391,1,arjan
82:84,xedin,CASSANDRA-7245,xedin,,Comment,9:2398 - 9:2402,1,arjan
82:33,That’s fne,CASSANDRA-7245,That’s fne ,,Architectural solution benefits and drawbacks,9:2405 - 9:2415,1,arjan
82:34,what we really want to test is if slicing of ByteBuf is what creates a…,CASSANDRA-7245,"what we really want to test is if slicing of ByteBuf is what creates an  issue or is there something else.
",,"Assumptions
Motivation of design issue",9:2416 - 9:2523,2,arjan
82:83,jasobrown,CASSANDRA-7245,jasobrown,,Comment,9:2528 - 9:2536,1,arjan
82:35,I took the 2.1 branch made the following minor change to CBUtil.readVa…,CASSANDRA-7245,I took the 2.1 branch made the following minor change to CBUtil.readValue():,,Architectural component behavior and structure,9:2539 - 9:2614,1,arjan
82:36,"and ran stress again. It has been going for greater than four hours, a…",CASSANDRA-7245,"and ran stress again. It has been going for greater than four hours, and no sign of the  reported corruption (keys out of order exception) on the compaction merge.",,Architectural solution benefits and drawbacks,10:547 - 10:709,1,arjan
82:37,"Thus, I think  it’s reasonable to assume that data corruption is sneak…",CASSANDRA-7245,"Thus, I think  it’s reasonable to assume that data corruption is sneaking in due to the wrapping/reuse of  the netty bufer.
",,"Assumptions
Motivation of design issue",10:711 - 10:835,2,arjan
82:82,xedin,CASSANDRA-7245,xedin,,Comment,10:840 - 10:844,1,arjan
82:38,"Perfect, that’s what I wanted to hear :)",CASSANDRA-7245," Perfect, that’s what I wanted to hear :)",,Architectural solution benefits and drawbacks,10:846 - 10:886,1,arjan
82:81,slebresne,CASSANDRA-7245,slebresne,,Comment,10:893 - 10:901,1,arjan
82:39,"Since it’s time to go ahead with 2.1 RC1, and unless somewhat has a fx…",CASSANDRA-7245,"Since it’s time to go ahead with 2.1 RC1, and unless somewhat has a fx he  is 100% confdent with now, can we commit Jason’s copy changes above (or change the  allocator) for now? We can then take the time to fx this correctly without copy for 2.1.1  (or 2.1.0 fnal, I don’t really mind if we test properly).
",,Architectural design configuration,10:904 - 10:1211,1,arjan
82:80,jasobrown,CASSANDRA-7245,jasobrown,,Comment,10:1217 - 10:1225,1,arjan
82:40,I’m reasonably OK with,CASSANDRA-7245, I’m reasonably OK with,,Architectural solution benefits and drawbacks,10:1227 - 10:1249,1,arjan
82:41,the idea of shipping either my fx or [~tjake]’s pool  suggestion as a…,CASSANDRA-7245,"the idea of shipping either my fx or [~tjake]’s pool  suggestion as a temporary relief.
",,Architectural design configuration,10:1251 - 10:1339,1,arjan
82:79,tjake,CASSANDRA-7245,tjake,,Comment,10:1344 - 10:1348,1,arjan
82:42,Both accomplish the same goal. since you’ve already tested your patch…,CASSANDRA-7245,Both accomplish the same goal. since you’ve already tested your patch [~jasobrown]  let’s go with that (ninja?).,,Architectural solution benefits and drawbacks,10:1351 - 10:1462,1,arjan
82:78,tjake,CASSANDRA-7245,tjake,,Comment,10:1552 - 10:1556,1,arjan
82:43,After much experimentation I’ve found one of the issues here:  Our ver…,CASSANDRA-7245,After much experimentation I’ve found one of the issues here:  Our version of netty throws away bufers once they have been read.,,Run-time quality issues,10:1559 - 10:1686,1,arjan
82:44,This issue was fxed in the  latest netty so bufer with refcounts aren’…,CASSANDRA-7245,This issue was fxed in the  latest netty so bufer with refcounts aren’t cannibalized https://github.com/netty/netty/issues/2327,,"Architectural solution benefits and drawbacks
Technology solution",10:1688 - 10:1814,2,arjan
82:45,I’ve tested a with 4.0.19 release,CASSANDRA-7245,I’ve tested a with 4.0.19 release,,Technology solution,10:1817 - 10:1849,1,arjan
82:46,the token corruption is now gone.,CASSANDRA-7245,"the token corruption is now gone.
",,Architectural solution benefits and drawbacks,10:1855 - 10:1889,1,arjan
82:48,I am however seeing some kind of race condition which I think may be n…,CASSANDRA-7245,I am however seeing some kind of race condition which I think may be netty related as  well.,,"Architectural solution benefits and drawbacks
Assumptions",10:1890 - 10:1981,2,arjan
82:49,It seems like the same Message is being dispatched to multiple threads…,CASSANDRA-7245,It seems like the same Message is being dispatched to multiple threads sometimes,,Technology solution,10:1983 - 10:2062,1,arjan
82:50,causing refcount exceptions.,CASSANDRA-7245,causing refcount exceptions.,,Architectural solution benefits and drawbacks,10:2069 - 10:2096,1,arjan
82:51,I’ve added logging to capture the history when this happens  and I’m t…,CASSANDRA-7245,"I’ve added logging to capture the history when this happens  and I’m trying to track this down.
",,Architectural component behavior and structure,10:2098 - 10:2194,1,arjan
82:77,benedict,CASSANDRA-7245,benedict,,Comment,11:752 - 11:759,1,arjan
82:52,I think there’s a bug if there is a counter write sent to an owning co…,CASSANDRA-7245," I think there’s a bug if there is a counter write sent to an owning coordina-  tor: SP.applyCounterMutationOnCoordinator does not take retain a reference, but it gets  executed asynchronously on the countermutation executor service.
",,"Assumptions
Motivation of design issue",11:761 - 11:995,2,arjan
82:76,tjake,CASSANDRA-7245,tjake,,Comment,11:1000 - 11:1004,1,arjan
82:53,Good catch,CASSANDRA-7245, Good catch,,Motivation of design issue,11:1006 - 11:1016,1,arjan
82:75,benedict,CASSANDRA-7245,benedict,,Comment,11:1229 - 11:1236,1,arjan
82:54,I think the change you made doesn’t actually totally eliminate the bug…,CASSANDRA-7245,"I think the change you made doesn’t actually totally eliminate the bug: since  it extends DroppableRunnable, the fnally block may never be run",,"Assumptions
Motivation of design issue",11:1315 - 11:1456,2,arjan
82:55,In SP.mutate() you can’t release the mutations until after we get the…,CASSANDRA-7245," In SP.mutate() you can’t release the mutations until after we get the all clear from the  replicas, as we may have to use the mutations to write local hints.",,Architectural design configuration,11:1460 - 11:1617,1,arjan
82:56,"It might be nice, however,",CASSANDRA-7245,"It might be nice, however,",,Architectural solution benefits and drawbacks,11:1619 - 11:1644,1,arjan
82:57,to have the response handler release() the reference once we receive e…,CASSANDRA-7245,"to have the response handler release() the reference once we receive enough responses from  our replicas, so that we don’t keep all of the references if we’re just waiting for one mutation",,Architectural design configuration,11:1647 - 11:1834,1,arjan
82:58,Why do we need a ThreadLocal in ClientState to store the sourceFrame.…,CASSANDRA-7245,Why do we need a ThreadLocal in ClientState to store the sourceFrame. Can’t we just  store it directly in a feld in QueryState?,,Architectural component behavior and structure,11:1839 - 11:1965,1,arjan
82:59,"Also, this is of-topic, but I wonder if we shouldn’t replace the NBHM…",CASSANDRA-7245,"Also, this is of-topic, but I wonder if we shouldn’t replace the NBHM in ServerConnec-  tion with a simple array. ",,Architectural component behavior and structure,11:2106 - 11:2219,1,arjan
82:60,"We know the range is < 32K (<.1K for older clients), and each  index i…",CASSANDRA-7245,"We know the range is < 32K (<.1K for older clients), and each  index is accessed by a single thread at any given time, so we’d just need to be able to atom-  ically swap in larger arrays if we wanted dynamic sizing.
",,Architectural solution benefits and drawbacks,11:2220 - 11:2436,1,arjan
82:61,Otherwise LGTM,CASSANDRA-7245,Otherwise LGTM,,Architectural solution benefits and drawbacks,11:2437 - 11:2450,1,arjan
82:74,tjake,CASSANDRA-7245,tjake,,Comment,11:2457 - 11:2461,1,arjan
82:62,"MS.addCallback also retains the mutation, this will be released by eit…",CASSANDRA-7245,"MS.addCallback also retains the mutation, this will be released by either the timeoutRe-  porter, or in the ResponseVerbHander",,Architectural design configuration,11:2627 - 11:2752,1,arjan
82:63,"You are right on the other two points,",CASSANDRA-7245,"You are right on the other two points, ",,Architectural solution benefits and drawbacks,12:1 - 12:39,1,arjan
82:64,I got rid of the ThreadLocal and moved the frame to  QueryState only.,CASSANDRA-7245,I got rid of the ThreadLocal and moved the frame to  QueryState only.,,Architectural design configuration,12:40 - 12:108,1,arjan
82:65,and I fxed the DroppableRunnable,CASSANDRA-7245,and I fxed the DroppableRunnable,,Architectural component behavior and structure,12:110 - 12:141,1,arjan
82:66,so release always gets called.,CASSANDRA-7245,so release always gets called.,,Architectural solution benefits and drawbacks,12:143 - 12:172,1,arjan
82:73,benedict,CASSANDRA-7245,benedict,,Comment,12:195 - 12:202,1,arjan
82:67,"Unfortunately there’s still a race condition there, as these can be re…",CASSANDRA-7245,"Unfortunately there’s still a race condition there, as these can be released by the Expir-  ingMap reaper (or by the responses arriving in the interval) before the exception block runs,  so that they’ve been reallocated by the time we submit them as hints",,Motivation of design issue,12:335 - 12:589,1,arjan
82:72,tjake,CASSANDRA-7245,tjake,,Comment,12:596 - 12:600,1,arjan
82:68,Ok v6 releases the refrence at once at the end of mutate() vs as it pr…,CASSANDRA-7245,Ok v6 releases the refrence at once at the end of mutate() vs as it processes them,,Architectural component behavior and structure,12:603 - 12:684,1,arjan
82:69,to  avoid any raciness,CASSANDRA-7245,to  avoid any raciness,,Architectural solution benefits and drawbacks,12:686 - 12:707,1,arjan
82:71,benedict,CASSANDRA-7245,benedict,,Comment,12:714 - 12:721,1,arjan
82:70,Otherwise LGTM +1,CASSANDRA-7245,Otherwise LGTM +1,,Architectural solution benefits and drawbacks,12:837 - 12:853,1,arjan
83:1,Upgrade netty,CASSANDRA-7761,Upgrade netty,,Technology solution,3:52 - 3:64,1,arjan
83:2,enable epoll event loop,CASSANDRA-7761, enable epoll event loop,,Architectural component behavior and structure,3:69 - 3:92,1,arjan
83:3,Latest netty contains the proper fx for CASSANDRA-7695,CASSANDRA-7761,Latest netty contains the proper fx for CASSANDRA-7695,,Architectural solution benefits and drawbacks,3:112 - 3:165,1,arjan
83:4,plus some of the performance patches  [~benedict] contributed,CASSANDRA-7761,plus some of the performance patches  [~benedict] contributed,,Architectural tactics,3:167 - 3:227,1,arjan
83:5,We should upgrade to this,CASSANDRA-7761,We should upgrade to this,,Technology solution,3:230 - 3:254,1,arjan
84:1,Remove cassandra-cli in Cassandra 3.0,CASSANDRA-7920,Remove cassandra-cli in Cassandra 3.0,,Technology solution,3:52 - 3:88,1,arjan
84:2,"At this point, cassandra-cli has been deprecated for longer than a yea…",CASSANDRA-7920,"At this point, cassandra-cli has been deprecated for longer than a year (since 1.2) with a warning  that it would be removed in 3.0.
There are several tricky bugs and unsupported table options in it, so it’s out of date as well.",,Architectural solution benefits and drawbacks,3:108 - 3:336,1,arjan
84:3,"Even before that, we’ve been urging people to use cqlsh for a while.",CASSANDRA-7920,"Even before that, we’ve been urging people to use cqlsh for a while.
",,"Architectural solution benefits and drawbacks
Technology solution",3:339 - 3:408,2,arjan
84:5,"so to not do that redundant work,",CASSANDRA-7920,"so to not do that redundant work,",,Architectural solution benefits and drawbacks,3:504 - 3:536,1,arjan
84:4,I suggest we kill it early.,CASSANDRA-7920,"I suggest we kill it early.
",,Architectural design configuration,3:538 - 3:566,1,arjan
84:9,jasobrown,CASSANDRA-7920,jasobrown,,Comment,3:737 - 3:745,1,arjan
84:6,+1. woo-hoo!,CASSANDRA-7920," +1. woo-hoo!
",,Architectural solution benefits and drawbacks,3:747 - 3:761,1,arjan
84:8,brandon.williams,CASSANDRA-7920,brandon.williams,,Comment,3:765 - 3:780,1,arjan
84:7,+1,CASSANDRA-7920,+1,,Architectural solution benefits and drawbacks,3:783 - 3:784,1,arjan
85:1,bump metrics-reporter-confg dependency,CASSANDRA-8149,bump metrics-reporter-confg dependency,,Technology solution,3:52 - 3:89,1,arjan
85:2,It would be nice to be able to take advantage of the new reporters ava…,CASSANDRA-8149,It would be nice to be able to take advantage of the new reporters available,,Architectural solution benefits and drawbacks,3:109 - 3:184,1,arjan
85:3,the new reporters available in  metrics-reporter-confg 2.3.1 which is…,CASSANDRA-8149,the new reporters available in  metrics-reporter-confg 2.3.1 which is now available on maven central.,,Technology solution,3:158 - 3:258,1,arjan
85:4,"If my understanding is correct, this only entails bumping the dependen…",CASSANDRA-8149,"If my understanding is correct, this only entails bumping the dependency in build.xml.
",,Architectural component behavior and structure,3:261 - 3:348,1,arjan
85:21,omid,CASSANDRA-8149,omid,,Comment,3:432 - 3:435,1,arjan
85:5,Would be great if,CASSANDRA-8149,Would be great if,,Architectural solution benefits and drawbacks,3:438 - 3:454,1,arjan
85:6,this could also be applied to 2.0 and 2.1 releases.,CASSANDRA-8149,this could also be applied to 2.0 and 2.1 releases.,,Architectural design configuration,3:456 - 3:506,1,arjan
85:7,Prefxing  metrics by hostname/ip/fqdn/etc for Graphite is introduced i…,CASSANDRA-8149,Prefxing  metrics by hostname/ip/fqdn/etc for Graphite is introduced in metrics-reporter-confg-2.2,,Technology solution,3:508 - 3:605,1,arjan
85:8,without it it’s not possible to distinguish between nodes.,CASSANDRA-8149,"without it it’s not possible to distinguish between nodes.
",,Architectural solution benefits and drawbacks,3:612 - 3:671,1,arjan
85:20,omid,CASSANDRA-8149,omid,,Comment,3:675 - 3:678,1,arjan
85:9,"I just added 2.0.12 to ""fx version"",",CASSANDRA-8149,"I just added 2.0.12 to ""fx version"",",,Technology solution,3:681 - 3:716,1,arjan
85:10,not sure if it’s ok to do so after it’s already  been assigned to. But…,CASSANDRA-8149,"not sure if it’s ok to do so after it’s already  been assigned to. But as there is another reason (making Graphite reporter actually useful)  besides ""new reporters"" mentioned in the issue description, thought it may deserve to be  patched to the same branch as it was frst introduced.",,"Architectural solution benefits and drawbacks
Assumptions",3:718 - 3:1002,2,arjan
85:19,brandon.williams,CASSANDRA-8149,brandon.williams,,Comment,3:1008 - 3:1023,1,arjan
85:11,We don’t change dependencies in minor versions.,CASSANDRA-8149,"We don’t change dependencies in minor versions.
",,Architectural solution benefits and drawbacks,3:1026 - 3:1073,1,arjan
85:18,tjake,CASSANDRA-8149,tjake,,Comment,3:1078 - 3:1082,1,arjan
85:12,works fne for me.,CASSANDRA-8149,"works fne for me.
",,Architectural solution benefits and drawbacks,3:1109 - 3:1127,1,arjan
85:17,cburroughs,CASSANDRA-8149,cburroughs,,Comment,4:330 - 4:339,1,arjan
85:13,https://github.com/addthis/metrics-reporter-confg/tree/v3.0.0  Artifac…,CASSANDRA-8149,"https://github.com/addthis/metrics-reporter-confg/tree/v3.0.0  Artifacts are in sonatype’s oss repo and should be on their way to maven central when-  ever they do the next sync.
",,Technology solution,4:342 - 4:521,1,arjan
85:16,cburroughs,CASSANDRA-8149,cburroughs,,Comment,4:554 - 4:563,1,arjan
85:14,metrics-ganglia in v3 depends on gmetric4j which depends on a LGPL pro…,CASSANDRA-8149,metrics-ganglia in v3 depends on gmetric4j which depends on a LGPL project,,Technology solution,4:566 - 4:639,1,arjan
85:15,"I don’t think that afects *this* project directly, but if you were re-…",CASSANDRA-8149,"I don’t think that afects *this* project directly, but if you were re-packaging Cassandra  with reporters included and come across this ticket, that may matter to you.
",,"Assumptions
Motivation of design issue",4:647 - 4:815,2,arjan
86:1,Wrong size of cached prepared statements,CASSANDRA-8231,Wrong size of cached prepared statements,,Run-time quality issues,3:52 - 3:91,1,arjan
86:2,Cassandra counts memory footprint of prepared statements for caching p…,CASSANDRA-8231,Cassandra counts memory footprint of prepared statements for caching purposes,,Existing system architecture description,3:111 - 3:187,1,arjan
86:3,"It seems, that  there is problem with some statements, ie SelectStatem…",CASSANDRA-8231,"It seems, that  there is problem with some statements, ie SelectStatement. Even simple selects is counted as  100KB object, updates, deletes etc have few hundreds or thousands bytes. Result is that cache -  QueryProcessor.preparedStatements - holds just fraction of statements..
I dig a little into the code, and it seems that problem is in jamm in class MemoryMeter. It  seems that if instance contains reference to class, it counts size of whole class too. SelectState-  ment references EnumSet through ResultSet.Metadata and EnumSet holds reference to Enum  class...
",,Run-time quality issues,3:190 - 3:761,1,arjan
86:47,snazy,CASSANDRA-8231,snazy,,Comment,3:946 - 3:950,1,arjan
86:4,Yes - too many objects are measured. 2It’s not just instances of {{Cla…,CASSANDRA-8231,"Yes - too many objects are measured.
2
It’s not just instances of {{Class}}.
Also instances of {{AbstractType}}, reverse comparators of {{AbstractType}}, {{Column-  Defnition}}, {{Function}} - maybe more.
Additionally a single object is measured as often as it is referenced.
I’ve attached {{8231-notes.txt}}that shows the classes that are measured (used a patched  version of jamm).
",,Run-time quality issues,3:953 - 4:349,1,arjan
86:46,snazy,CASSANDRA-8231,snazy,,Comment,4:353 - 4:357,1,arjan
86:5,Attached {{Unsafes.java}} that I’ve written some time ago to calculate…,CASSANDRA-8231,Attached {{Unsafes.java}} that I’ve written some time ago to calculate heap memory  occupied by any object.,,Architectural design configuration,4:360 - 4:466,1,arjan
86:6,"Although it’s a bit over-designed, it solves the problem of calculatin…",CASSANDRA-8231,"Although it’s a bit over-designed, it solves the problem of calculating  the same object instance twice.
",,Architectural solution benefits and drawbacks,4:468 - 4:573,1,arjan
86:7,"In order to solve the issue of taking irrelevant felds into account,",CASSANDRA-8231,"In order to solve the issue of taking irrelevant felds into account,",,Architectural solution benefits and drawbacks,4:574 - 4:641,1,arjan
86:8,I’d propose some annotation  to be added to those felds,CASSANDRA-8231,I’d propose some annotation  to be added to those felds,,Architectural component behavior and structure,4:643 - 4:697,1,arjan
86:9,or to provide a set of classes to exclude from calculation.,CASSANDRA-8231,"or to provide a set of classes to exclude from calculation.
",,Architectural component behavior and structure,4:701 - 4:761,1,arjan
86:45,jbellis,CASSANDRA-8231,jbellis,,Comment,4:765 - 4:771,1,arjan
86:10,JAMM provides something similar with ObjectSizes.,CASSANDRA-8231,"JAMM provides something similar with ObjectSizes.
",,Technology solution,4:774 - 4:824,1,arjan
86:44,blerer,CASSANDRA-8231,blerer,,Comment,4:828 - 4:833,1,arjan
86:11,The enum problem has been solved has part the JAMM issue #17 (Do not c…,CASSANDRA-8231,The enum problem has been solved has part the JAMM issue #17 (Do not count  size of referenced classes). When I use the latest version of JAMM for a query like: {{Select  * from test where id = ?}} the object graph is:,,Architectural solution benefits and drawbacks,4:836 - 4:1053,1,arjan
86:12,The only elements that we should not take into account are the column…,CASSANDRA-8231,"The only elements that we should not take into account are the column types as they are  singletons. Other elements seems fne to me.
",,Architectural component behavior and structure,6:531 - 6:663,1,arjan
86:43,snazy,CASSANDRA-8231,snazy,,Comment,6:668 - 6:672,1,arjan
86:13,+ instances of {{Function}}  + instances of {{AbstractType}},CASSANDRA-8231, + instances of {{Function}}  + instances of {{AbstractType}},,Architectural component behavior and structure,6:674 - 6:734,1,arjan
86:42,blerer,CASSANDRA-8231,blerer,,Comment,6:740 - 6:745,1,arjan
86:14,I added to Jamm 0.2.9 the ability to exclude felds that have the been…,CASSANDRA-8231, I added to Jamm 0.2.9 the ability to exclude felds that have the been annoted  with the Unmetered annotation. ,,"Architectural solution benefits and drawbacks
Technology solution",6:747 - 6:857,2,arjan
86:15,I started to use it but I realizes that what we really want  to exclud…,CASSANDRA-8231,I started to use it but I realizes that what we really want  to exclude is some specifc classes that we consider as Singleton (e.g. the functions ot the  AbstractTypes).,,Architectural solution benefits and drawbacks,6:858 - 6:1026,1,arjan
86:16,Being able to directly annotate a Type like Function,CASSANDRA-8231,Being able to directly annotate a Type like Function,,Architectural component behavior and structure,6:1028 - 6:1079,1,arjan
86:17,is safer as we only  have to annotate the Interface once and it will n…,CASSANDRA-8231,is safer as we only  have to annotate the Interface once and it will not be taken into account by MemoryMeter  no matter in which statement type or part of the statement it is. ,,Architectural solution benefits and drawbacks,6:1081 - 6:1257,1,arjan
86:18,It is also more refactoring  proof.,CASSANDRA-8231,"It is also more refactoring  proof.
",,Architectural tactics,6:1258 - 6:1294,1,arjan
86:41,blerer,CASSANDRA-8231,blerer,,Comment,6:1298 - 6:1303,1,arjan
86:19,This patch replace the jamm version 0.2.8 by the version 0.3.0 which s…,CASSANDRA-8231, This patch replace the jamm version 0.2.8 by the version 0.3.0 which support the  {{Unmetered}} annotation on type.,,"Architectural solution benefits and drawbacks
Technology solution",6:1305 - 6:1420,2,arjan
86:20,The {{ignoreKnownSingleton}} option of {{MemoryMeter}} was already exc…,CASSANDRA-8231,"The {{ignoreKnownSingleton}} option of {{MemoryMeter}} was already excluding {{Class}}  and {{Enum}} instances. So only the {{CFMetadata}}, {{AbstractType}} and {{Func-  tion}} had to be marked with the {{Unmetered}} annotation.
I used the {{enableDebug}} option from {{MemoryMeter}} to verify that the measured  instances were the expected ones.
",,Architectural design configuration,6:1423 - 6:1771,1,arjan
86:40,dbrosius,CASSANDRA-8231,dbrosius,,Comment,6:1871 - 6:1878,1,arjan
86:21,+LGTM,CASSANDRA-8231,+LGTM,,Architectural solution benefits and drawbacks,6:1881 - 6:1885,1,arjan
86:22,i’ll push 0.30 to maven,CASSANDRA-8231,i’ll push 0.30 to maven,,Technology solution,6:1888 - 6:1910,1,arjan
86:39,dbrosius,CASSANDRA-8231,dbrosius,,Comment,6:2099 - 6:2106,1,arjan
86:23,+1,CASSANDRA-8231,+1,,Architectural solution benefits and drawbacks,6:2109 - 6:2110,1,arjan
86:38,rnamboodiri,CASSANDRA-8231,rnamboodiri,,Comment,7:49 - 7:59,1,arjan
86:24,"I see the following from git log ""f02d194 Add missing jamm jar from  C…",CASSANDRA-8231,"I see the following from git log ""f02d194 Add missing jamm jar from  CASSANDRA-8231 commit"" and I think there is a problem associated with the jar fle  checked in. While running some of the tests, I am getting the following error messages",,"Architectural solution benefits and drawbacks
Assumptions",7:62 - 7:299,2,arjan
86:37,slebresne,CASSANDRA-8231,slebresne,,Comment,7:466 - 7:474,1,arjan
86:25,Seems that the jar pushed had some windows end of line in the manifest…,CASSANDRA-8231, Seems that the jar pushed had some windows end of line in the manifest (or  something like that).,,Motivation of design issue,7:476 - 7:573,1,arjan
86:36,rnamboodiri,CASSANDRA-8231,rnamboodiri,,Comment,7:667 - 7:677,1,arjan
86:26,I tried a get latest from the repo and it appears there is no check-in…,CASSANDRA-8231,I tried a get latest from the repo and it appears there is no check-in happened  related to this jar fle.,,Architectural solution benefits and drawbacks,7:680 - 7:784,1,arjan
86:35,rnamboodiri,CASSANDRA-8231,rnamboodiri,,Comment,7:1200 - 7:1210,1,arjan
86:27,Looks like the issue is still persisting even after getting the latest…,CASSANDRA-8231, Looks like the issue is still persisting even after getting the latestâĂę,,Architectural solution benefits and drawbacks,7:1212 - 7:1285,1,arjan
86:34,blerer,CASSANDRA-8231,blerer,,Comment,8:5 - 8:10,1,arjan
86:28,Could you try the following:1) delete the jar2) Dowload the jar from:…,CASSANDRA-8231,Could you try the following:1) delete the jar2) Dowload the jar from: http://search.maven.org/remoteconten  0.3.0.jar and put it in the lib folder  3) tell me if you still have the error,,User requirement,8:13 - 8:198,1,arjan
86:33,rnamboodiri,CASSANDRA-8231,rnamboodiri,,Comment,8:205 - 8:215,1,arjan
86:29,Still the problem persists.,CASSANDRA-8231,Still the problem persists.,,Architectural solution benefits and drawbacks,8:232 - 8:258,1,arjan
86:32,blerer,CASSANDRA-8231,blerer,,Comment,10:19 - 10:24,1,arjan
86:30,If you update your repository everything should work fne now.,CASSANDRA-8231, If you update your repository everything should work fne now. ,,Architectural solution benefits and drawbacks,10:26 - 10:88,1,arjan
86:31,My patch had an  error in the build.xml. [~mshuler] and [~yukim] found…,CASSANDRA-8231,"My patch had an  error in the build.xml. [~mshuler] and [~yukim] found it and fxed it.
",,Motivation of design issue,10:89 - 10:176,1,arjan
87:3,nio MessagingService,CASSANDRA-8457,nio MessagingService,,Technology solution,4:52 - 4:71,1,arjan
87:1,Thread-per-peer (actually two each incoming and outbound) is a big con…,CASSANDRA-8457,"Thread-per-peer (actually two each incoming and outbound) is a big contributor to context switch-  ing, especially for larger clusters",,Existing system architecture description,4:91 - 4:224,1,arjan
87:2,"Let’s look at switching to nio, possibly via Netty.",CASSANDRA-8457,"Let’s look at switching to nio, possibly via Netty.
",,Technology solution,4:227 - 4:279,1,arjan
88:1,Consider upgrade to thrift 0.9.2 (or later),CASSANDRA-8685,Consider upgrade to thrift 0.9.2 (or later),,Technology solution,3:52 - 3:94,1,arjan
88:2,Folks using Astyanax and the like are subject to https://issues.apache…,CASSANDRA-8685,"Folks using Astyanax and the like are subject to https://issues.apache.org/jira/browse/THRIFT-  1457 and may run into heap pressure on the Cassandra side for larger read request, as thrift  doesn’t reset its internal bufer. This can lead to larger TFramedTransport instances will be kept  on the heap.
I’ve seen at least one situation where this has saved around 1Gb of heap space on average.
",,Run-time quality issues,3:114 - 3:508,1,arjan
88:22,tsteinmaurer,CASSANDRA-8685,tsteinmaurer,,Comment,3:724 - 3:735,1,arjan
88:3,As a DataStax customer and currently/still in a Astyanax/Thrift-based…,CASSANDRA-8685,"As a DataStax customer and currently/still in a Astyanax/Thrift-based  scenario, I would like to sincerely ask the Cassandra project to investigate including the  newer library in Cassandra 2.0x already. ",,Architectural design configuration,3:738 - 3:941,1,arjan
88:4,I guess 3.0 is a long-road ahead until it is ready for  production. As…,CASSANDRA-8685,"I guess 3.0 is a long-road ahead until it is ready for  production. As far as I can see is that Cassandra 2.0.11 resp. at least DSE 4.5.3 is using 0.9.1  so an upgrade to 0.9.2 might not be that tricky. I must admit that I haven’t investigated the  code or library dependency changes in 0.9.2, but I can say that a simple drop-in replacement  of 0.9.2 in our DSE 4.5.3 based loadtest environment works without troubles. Attached a  screen of the Cassandra heap improvement in our tests simply by replacing thrift 0.9.1 with  0.9.2.
",,Architectural solution benefits and drawbacks,3:942 - 3:1474,1,arjan
88:5,This is in an environment with 3 of our servers hitting a 6 node EC2 (…,CASSANDRA-8685,"This is in an environment with 3 of our servers hitting a 6 node EC2 (m1.xlarge) based  Cassandra cluster with an Astyanax max connection pool setting of 50 per Cassandra node,  thus max. 150 (3 * 50) connections per Cassandra nodes, where each connection is repre-  sented by a TFramedTransport instance on the Cassandra side which can grow dramatically  depending on the Client/Astyanax single read request size.
",,Run-time quality issues,4:1 - 4:416,1,arjan
88:21,tsteinmaurer,CASSANDRA-8685,tsteinmaurer,,Comment,4:420 - 4:431,1,arjan
88:6,I have also attached a memdump of a single Cassandra node after applyi…,CASSANDRA-8685,"I have also attached a memdump of a single Cassandra node after applying  the 0.9.2 library showing the tiny TFramedTransport instance sizes although larger single  read requests are going on.
",,Architectural solution benefits and drawbacks,4:434 - 4:627,1,arjan
88:20,tjake,CASSANDRA-8685,tjake,,Comment,4:631 - 4:635,1,arjan
88:7,The 2.0 series has been out far too long to upgrade in a dependency li…,CASSANDRA-8685,The 2.0 series has been out far too long to upgrade in a dependency like thrift.,,Architectural solution benefits and drawbacks,4:638 - 4:717,1,arjan
88:8,Can  you drop this in without re-compiling?,CASSANDRA-8685,Can  you drop this in without re-compiling?,,Architectural design configuration,4:719 - 4:761,1,arjan
88:9,If so that might be a viable workaround,CASSANDRA-8685, If so that might be a viable workaround,,Architectural solution benefits and drawbacks,4:762 - 4:801,1,arjan
88:19,tjake,CASSANDRA-8685,tjake,,Comment,4:807 - 4:811,1,arjan
88:10,Since this is a major fx for all Thrift users. I’m ok with putting thi…,CASSANDRA-8685," Since this is a major fx for all Thrift users. I’m ok with putting this into 2.1.
",,Architectural solution benefits and drawbacks,4:813 - 4:896,1,arjan
88:18,jbellis,CASSANDRA-8685,jbellis,,Comment,4:900 - 4:906,1,arjan
88:11,+1 for 2.1,CASSANDRA-8685,+1 for 2.1,,Architectural solution benefits and drawbacks,4:909 - 4:918,1,arjan
88:17,tsteinmaurer,CASSANDRA-8685,tsteinmaurer,,Comment,4:1170 - 4:1181,1,arjan
88:12,Yes. * Stopping Cassandra 2.0.11  * Replacing thrift library 0.9.1 wit…,CASSANDRA-8685,"Yes.
* Stopping Cassandra 2.0.11  * Replacing thrift library 0.9.1 with 0.9.2  * Starting Cassandra 2.0.11",,Architectural design configuration,4:1246 - 4:1352,1,arjan
88:13,Haven’t seen any sign of troubles in the Cassandra log or Astyanax bas…,CASSANDRA-8685,Haven’t seen any sign of troubles in the Cassandra log or Astyanax based log in our ap-  plication,,Architectural solution benefits and drawbacks,4:1355 - 4:1452,1,arjan
88:14,To be honest I had hoped that it will be considered even for 2.0.x pub…,CASSANDRA-8685,To be honest I had hoped that it will be considered even for 2.0.x public.,,"Architectural design configuration
Architectural solution benefits and drawbacks",4:1455 - 4:1528,2,arjan
88:16,philipthompson,CASSANDRA-8685,philipthompson,,Comment,4:1860 - 4:1873,1,arjan
88:15,"+1 for inclusion in 2.1,",CASSANDRA-8685,"+1 for inclusion in 2.1,",,Architectural solution benefits and drawbacks,4:1876 - 4:1899,1,arjan
89:1,row-cache: use preloaded jemalloc w/ Unsafe,CASSANDRA-8714,row-cache: use preloaded jemalloc w/ Unsafe,,Technology solution,3:52 - 3:94,1,arjan
89:2,Using jemalloc via Java’s {{Unsafe}},CASSANDRA-8714,Using jemalloc via Java’s {{Unsafe}},,Technology solution,3:114 - 3:149,1,arjan
89:3,is a better alternative on Linux than using,CASSANDRA-8714,is a better alternative on Linux than using,,Architectural solution benefits and drawbacks,3:151 - 3:193,1,arjan
89:4,jemalloc via JNA.,CASSANDRA-8714,"jemalloc via JNA.
",,Technology solution,3:195 - 3:213,1,arjan
89:78,snazy,CASSANDRA-8714,snazy,,Comment,3:339 - 3:343,1,arjan
89:5,Add patch that does two things:  # modify {{bin/cassandra}} to preload…,CASSANDRA-8714,Add patch that does two things:  # modify {{bin/cassandra}} to preload libjemalloc on Linux and OSX (and set OHC system  property)  # remove {{IAllocator}} abstraction in C* code,,Architectural design configuration,3:346 - 3:523,1,arjan
89:77,benedict,CASSANDRA-8714,benedict,,Comment,3:600 - 3:607,1,arjan
89:6,"I agree with the principle of switching to LD_PRELOAD, but I’m not so…",CASSANDRA-8714,"I agree with the principle of switching to LD_PRELOAD, but I’m not so sure  about switching the default allocator under everyone. We need to do some comprehensive  testing of the implications of that switch.",,Architectural solution benefits and drawbacks,3:610 - 3:816,1,arjan
89:76,snazy,CASSANDRA-8714,snazy,,Comment,4:4 - 4:8,1,arjan
89:7,"It contains measurements on* AMD CPU (6 cores, a bit old, but ok) / Li…",CASSANDRA-8714,"It contains measurements on* AMD CPU (6 cores, a bit old, but ok) / Linux  * Core i7 Ive Bridge (4 cores + HT), latest OS X  * m3.2xlarge (8 cores)  * c3.4xlarge (16 cores)  * c4.8xlarge (36 cores)  Some things to point out:  # jemalloc via JNA library can hit some ""busy deadlock"" that efectively leaves threads hang-  ing (and consuming some CPU - feels like a busy spin lock) - fled [JNA bug #396|https://github.com/twall/jna/issue  # jemalloc via JNA library is the slowest possible method on Linux and OS X  # jemalloc via JNA’s own malloc() + free() methods with jemalloc preloaded is the fastest  possible thing  # Unsafe with jemalloc preloaded is not bad, too",,Architectural solution benefits and drawbacks,4:175 - 4:842,1,arjan
89:75,aweisberg,CASSANDRA-8714,aweisberg,,Comment,4:915 - 4:923,1,arjan
89:8,Something doesn’t sit right with me for the diference between JNA acce…,CASSANDRA-8714, Something doesn’t sit right with me for the diference between JNA accessing  jemalloc via JNI and Unsafe. ,,Architectural solution benefits and drawbacks,4:925 - 4:1031,1,arjan
89:9,Since you are benchmarking access path I think you only need  to alloc…,CASSANDRA-8714,"Since you are benchmarking access path I think you only need  to allocate 1-byte. Make sure to store a value to the location so the page is touched.
",,Architectural design configuration,4:1032 - 4:1180,1,arjan
89:10,If Unsafe is slower I would be comfortable with,CASSANDRA-8714,If Unsafe is slower I would be comfortable with ,,Architectural solution benefits and drawbacks,4:1182 - 4:1229,1,arjan
89:11,JNA to allocate.,CASSANDRA-8714,"JNA to allocate.
",,Technology solution,4:1236 - 4:1252,1,arjan
89:12,"You mention address translation (addr_to_java), but that is just a cas…",CASSANDRA-8714,"You mention address translation (addr_to_java), but that is just a cast to get things to  compile.",,Architectural component behavior and structure,4:1254 - 4:1351,1,arjan
89:13,I followed it through to os.cpp and I don’t see any real extra work.,CASSANDRA-8714,"I followed it through to os.cpp and I don’t see any real extra work.
",,Architectural solution benefits and drawbacks,4:1353 - 4:1422,1,arjan
89:14,It’s quite possible the results are accurate and JNI just ended up bet…,CASSANDRA-8714,"It’s quite possible the results are accurate and JNI just ended up better optimized then  the native function calls in Unsafe. JNI has received a lot of attention.
",,Architectural solution benefits and drawbacks,4:1423 - 4:1587,1,arjan
89:74,snazy,CASSANDRA-8714,snazy,,Comment,4:1591 - 4:1595,1,arjan
89:15,I just wanted to benchmark allocation performance - and not accessing…,CASSANDRA-8714," I just wanted to benchmark allocation performance - and not accessing memory  since that would add a constant overhead to the comparison. Maybe it would also add some  ""negative"" value to the bigger systems (c3/c4).
But this is an artifcial benchmark. ",,Architectural solution benefits and drawbacks,4:1597 - 4:1850,1,arjan
89:16,"To benchmark a ""real scenario"" I’d had to allocate  more memory, keep…",CASSANDRA-8714,"To benchmark a ""real scenario"" I’d had to allocate  more memory, keep memory allocated, use diferent allocation sizes and so on. ",,Architectural design configuration,4:1851 - 4:1979,1,arjan
89:17,IMO that’s  too heavy for a JMH.,CASSANDRA-8714,"IMO that’s  too heavy for a JMH.
",,Architectural solution benefits and drawbacks,4:1980 - 4:2013,1,arjan
89:18,Yea - maybe it’s really the thing that JNI is more optimized.,CASSANDRA-8714,"Yea - maybe it’s really the thing that JNI is more optimized.
",,Architectural solution benefits and drawbacks,4:2014 - 4:2076,1,arjan
89:73,snazy,CASSANDRA-8714,snazy,,Comment,4:2080 - 4:2084,1,arjan
89:20,Ah! I think I found the reason why Unsafe.allocateMemory is slower:,CASSANDRA-8714,Ah! I think I found the reason why Unsafe.allocateMemory is slower:,,"Architectural solution benefits and drawbacks
Assumptions",4:2087 - 4:2153,2,arjan
89:21,It’s in {{os.cpp  os::malloc}}. It uses two stat counters - one for #…,CASSANDRA-8714,It’s in {{os.cpp  os::malloc}}. It uses two stat counters - one for # of allocations and one for # of al-  located bytes.,,Technology solution,4:2155 - 4:2275,1,arjan
89:19,"If these might be interesting, we could prefer Unsafe.allocateMemory o…",CASSANDRA-8714,"If these might be interesting, we could prefer Unsafe.allocateMemory over  Native.malloc.",,Architectural solution benefits and drawbacks,4:2277 - 4:2365,1,arjan
89:72,aweisberg,CASSANDRA-8714,aweisberg,,Comment,4:2371 - 4:2379,1,arjan
89:22,Those stats counters are not compiled in for the release build. There…,CASSANDRA-8714,"Those stats counters are not compiled in for the release build. There is also  padding in the debug build which might make Unsafe slower, but all that stuf probably isn’t  in the release build.
",,Architectural solution benefits and drawbacks,4:2382 - 4:2576,1,arjan
89:71,snazy,CASSANDRA-8714,snazy,,Comment,4:2580 - 4:2584,1,arjan
89:23,Aleksey Shipilev from Oracle provided a detailed answer to the questio…,CASSANDRA-8714,Aleksey Shipilev from Oracle provided a detailed answer to the question - in short:  it’s Unsafe itself. Here http://cr.openjdk.java.net/~shade/scratch/unsafe-allocate.txt and  here http://mail.openjdk.java.net/pipermail/hotspot-dev/2015-February/017089.html,,"Architectural solution benefits and drawbacks
Technology solution",4:2587 - 4:2844,2,arjan
89:70,snazy,CASSANDRA-8714,snazy,,Comment,4:2850 - 4:2854,1,arjan
89:24,Note: similar overhead exists for all other {{Unsafe}} methods like {{…,CASSANDRA-8714," Note: similar overhead exists for all other {{Unsafe}} methods like {{GetLong}} -  JNA {{Native}} has counterparts for some of them.
",,"Architectural solution benefits and drawbacks
Technology solution",4:2856 - 4:2990,2,arjan
89:69,snazy,CASSANDRA-8714,snazy,,Comment,5:103 - 5:107,1,arjan
89:25,In theory it’s true - but intrinsics come into play and make {{Unsafe.…,CASSANDRA-8714," In theory it’s true - but intrinsics come into play and make {{Unsafe.get/put}}  orders of magnitude faster.
",,Architectural tactics,5:109 - 5:219,1,arjan
89:68,snazy,CASSANDRA-8714,snazy,,Comment,5:224 - 5:228,1,arjan
89:26,Regarding the frst point: it wasn’t JNA - it was jemalloc itself. Don’…,CASSANDRA-8714,"Regarding the frst point: it wasn’t JNA - it was jemalloc itself. Don’t really  understand why, but using a self-compiled, recent version of jemalloc (3.6.0) works fne.
",,Architectural solution benefits and drawbacks,5:231 - 5:400,1,arjan
89:67,aweisberg,CASSANDRA-8714,aweisberg,,Comment,5:442 - 5:450,1,arjan
89:27,"OK, so it doesn’t matter which access path you use to get to jemalloc?…",CASSANDRA-8714,"OK, so it doesn’t matter which access path you use to get to jemalloc? Unsafe  vs JNI? They are both JNI if I understood Aleksey?
",,"Assumptions
Technology solution",5:453 - 5:583,2,arjan
89:66,snazy,CASSANDRA-8714,snazy,,Comment,5:588 - 5:592,1,arjan
89:28,Regarding performance: JNA’s Native.malloc() is up to 3x faster than U…,CASSANDRA-8714,"Regarding performance: JNA’s Native.malloc() is up to 3x faster than Unsafe.allocateMemory().
",,Architectural tactics,5:721 - 5:815,1,arjan
89:65,snazy,CASSANDRA-8714,snazy,,Comment,5:820 - 5:824,1,arjan
89:29,Also added new OHC version 0.3.3 that changes default allocation metho…,CASSANDRA-8714,"Also added new OHC version 0.3.3 that changes default allocation method to {{Native.malloc}}.
",,Technology solution,5:1048 - 5:1142,1,arjan
89:64,aweisberg,CASSANDRA-8714,aweisberg,,Comment,5:1318 - 5:1326,1,arjan
89:30,I suspect that the change to MemoryUtil.getByteBufer could be slower.,CASSANDRA-8714,I suspect that the change to MemoryUtil.getByteBufer could be slower.,,"Architectural solution benefits and drawbacks
Assumptions",5:1329 - 5:1397,2,arjan
89:31,The  JNA implementation requires a JNI call which I suspect then uses…,CASSANDRA-8714,"The  JNA implementation requires a JNI call which I suspect then uses the JNI call newDirect-  ByteBufer. The Java implementation is all intrinsics and plain Java.
",,"Assumptions
Technology solution",5:1399 - 5:1563,2,arjan
89:32,Conceptually I get  it and it looks as reasonable a way as any to fnd…,CASSANDRA-8714,"Conceptually I get  it and it looks as reasonable a way as any to fnd where jemalloc is hiding.
",,Architectural solution benefits and drawbacks,5:1895 - 5:1991,1,arjan
89:33,I am +1 conditional on:,CASSANDRA-8714,I am +1 conditional on:,,Architectural solution benefits and drawbacks,5:1992 - 5:2014,1,arjan
89:63,snazy,CASSANDRA-8714,snazy,,Comment,6:876 - 6:880,1,arjan
89:34,good catch with the JNI roundtrip. JMH result are pretty obvious: 16…,CASSANDRA-8714,"good catch with the JNI roundtrip. JMH result are pretty obvious: 16  ops/Âţs for {{Native.getByteBufer}}, 12000 ops/Âţs for the {{Unsafe}} variant. I’ll revert  that thing.
",,Architectural solution benefits and drawbacks,6:896 - 6:1070,1,arjan
89:62,snazy,CASSANDRA-8714,snazy,,Comment,6:1075 - 6:1079,1,arjan
89:35,Unfortunately there’s nothing like {{LD_PRELOAD}} on Win. Although the…,CASSANDRA-8714,"Unfortunately there’s nothing like {{LD_PRELOAD}} on Win. Although there are [some  approaches how to do it|https://en.wikipedia.org/wiki/DLL_injection], none of them really  convinces me.
",,Architectural solution benefits and drawbacks,6:1392 - 6:1581,1,arjan
89:61,JoshuaMcKenzie,CASSANDRA-8714,JoshuaMcKenzie,,Comment,6:1586 - 6:1599,1,arjan
89:36,Yeah - the lack of respectable LD_PRELOAD alternative means we’ll  lik…,CASSANDRA-8714,Yeah - the lack of respectable LD_PRELOAD alternative means we’ll  likely sit tight on this efort for a bit. ,,Motivation of design issue,6:1602 - 6:1710,1,arjan
89:37,I compiled jemalloc-win32 and ran their benchmarks,CASSANDRA-8714,I compiled jemalloc-win32 and ran their benchmarks,,Technology solution,6:1711 - 6:1760,1,arjan
89:38,"it’s reported numbers are considerably faster (82+%), but I haven’t du…",CASSANDRA-8714," it’s reported numbers are considerably faster (82+%), but I haven’t dug into what  their benchmarks are actually measuring w/regards to contention and sampling, etc.",,Architectural solution benefits and drawbacks,6:1766 - 6:1931,1,arjan
89:60,aweisberg,CASSANDRA-8714,aweisberg,,Comment,6:2069 - 6:2077,1,arjan
89:39,I am +1 with one comment.,CASSANDRA-8714,"I am +1 with one comment.
",,Architectural solution benefits and drawbacks,6:2080 - 6:2106,1,arjan
89:40,"Thinking on the change to MemoryUtil.setBytes, you switched to getting…",CASSANDRA-8714,"Thinking on the change to MemoryUtil.setBytes, you switched to getting the address by  casting to an interface and then invoking vs accessing the feld by ofset. ",,Architectural component behavior and structure,6:2107 - 6:2267,1,arjan
89:41,setBytes might  loop over a fair number of bytes so startup overhead i…,CASSANDRA-8714,"setBytes might  loop over a fair number of bytes so startup overhead is not as important, but it could also  be used to copy just a few so startup time will matter there.
",,Architectural solution benefits and drawbacks,6:2268 - 6:2439,1,arjan
89:42,If the JVM can fgure out that the ByteBufer in play there is always th…,CASSANDRA-8714,"If the JVM can fgure out that the ByteBufer in play there is always the same kind (or  maybe the method is always the same one) it will de-virtualize and inline, ",,"Architectural design configuration
Architectural solution benefits and drawbacks",6:2440 - 6:2601,2,arjan
89:43,but testing for  that is beyond me. [~benedict] might know what will h…,CASSANDRA-8714,"but testing for  that is beyond me. [~benedict] might know what will happen.
",,Architectural solution benefits and drawbacks,6:2602 - 6:2679,1,arjan
89:59,snazy,CASSANDRA-8714,snazy,,Comment,7:245 - 7:249,1,arjan
89:44,"I mean, if jemalloc-win32 via JNA  is faster than the âĂİstockâĂİ mall…",CASSANDRA-8714,"I mean, if jemalloc-win32 via JNA  is faster than the âĂİstockâĂİ malloc, it’s a reasonable option.
",,Architectural solution benefits and drawbacks,7:509 - 7:609,1,arjan
89:58,snazy,CASSANDRA-8714,snazy,,Comment,7:614 - 7:618,1,arjan
89:45,Just changed that in order to remove an unsafe call. In the end it sho…,CASSANDRA-8714,"Just changed that in order to remove an unsafe call. In the end it shouldn’t make any  diference since both access the same thing (esp. after hotspot did its job).
",,"Architectural component behavior and structure
Architectural solution benefits and drawbacks",7:656 - 7:820,2,arjan
89:57,aweisberg,CASSANDRA-8714,aweisberg,,Comment,7:825 - 7:833,1,arjan
89:46,I’m not brave enough to assume it’s going to be able to fgure out that…,CASSANDRA-8714," I’m not brave enough to assume it’s going to be able to fgure out that  in all cases at that call site there will only be DirectByteBufers. That particular line will  only ever be invoked with DirectByteBufers, but the surrounding method will have both so  I don’t know what information the compiler is going to have to deduce that.
You could run with print inlining and a single call site for setBytes and pass in randomly a  direct/non-direct bufer and see if it is inlined.
",,Architectural design configuration,7:844 - 7:1323,1,arjan
89:56,snazy,CASSANDRA-8714,snazy,,Comment,7:1328 - 7:1332,1,arjan
89:47,Hm - the micro bench itself tells that neither approach has any beneft…,CASSANDRA-8714,"Hm - the micro bench itself tells that neither approach has any beneft.
",,Architectural solution benefits and drawbacks,7:1335 - 7:1406,1,arjan
89:55,aweisberg,CASSANDRA-8714,aweisberg,,Comment,7:2722 - 7:2730,1,arjan
89:48,Looking at the micro benchmark it isn’t measuring the right thing.,CASSANDRA-8714,Looking at the micro benchmark it isn’t measuring the right thing.,,Architectural solution benefits and drawbacks,7:2733 - 7:2798,1,arjan
89:49,The same  call site has to potentially contain direct and non-direct b…,CASSANDRA-8714,"The same  call site has to potentially contain direct and non-direct bufers. The JVM also does JVM  6
wide class hierarchy analysis, but I don’t know what it does for call site specifc analysis.
There are actually several potential direct and non-direct byte bufer classes. Take a look at  the type hierarchy for ByteBufer it’s pretty long.
",,Architectural design configuration,7:2800 - 8:241,1,arjan
89:50,This would only be a factor for very small copies Say 4-16 bytes or si…,CASSANDRA-8714,"This would only be a factor for very small copies Say 4-16 bytes or similar. Say when  serializing variable length felds that can be very small. You would end up calling this which  is basically a memcpy equivalent, and that is where the overhead of starting the memcpy  matters.
",,Architectural solution benefits and drawbacks,8:242 - 8:522,1,arjan
89:54,aweisberg,CASSANDRA-8714,aweisberg,,Comment,8:527 - 8:535,1,arjan
89:51,"I should add, you can use the compiler control annotation to prevent i…",CASSANDRA-8714," I should add, you can use the compiler control annotation to prevent inlining  and then you would get a sense of the diference even if there were multiple call sites. I am  +1 either way. I don’t think it’s worth fussing over.
",,Architectural solution benefits and drawbacks,8:537 - 8:765,1,arjan
89:53,snazy,CASSANDRA-8714,snazy,,Comment,8:770 - 8:774,1,arjan
89:52,I tried it anyway - just to know the results. Mixed workloads are a bi…,CASSANDRA-8714,I tried it anyway - just to know the results. Mixed workloads are a bit slower - hard  at the edge of measurement error ;),,Architectural solution benefits and drawbacks,8:777 - 8:898,1,arjan
90:1,Upgrade snappy library,CASSANDRA-9063,Upgrade snappy library,,Technology solution,3:52 - 3:73,1,arjan
90:2,We should investigate upgrading the bundled snappy library for 3.0.,CASSANDRA-9063,We should investigate upgrading the bundled snappy library for 3.0.,,Technology solution,3:93 - 3:159,1,arjan
90:3,"According to a user report in  CASSANDRA-6663, version 1.1.1.7 should…",CASSANDRA-9063," According to a user report in  CASSANDRA-6663, version 1.1.1.7 should fx a segfault when running Cassandra on a Raspberry  Pi.
",,Architectural solution benefits and drawbacks,3:160 - 3:288,1,arjan
90:5,thobbs,CASSANDRA-9063,thobbs,,Comment,3:428 - 3:433,1,arjan
90:4,+1,CASSANDRA-9063,+1,,Architectural solution benefits and drawbacks,3:436 - 3:437,1,arjan
91:1,remove cobertura from build fle,CASSANDRA-10704,remove cobertura from build fle,,Technology solution,3:53 - 3:83,1,arjan
91:2,"Since the project has adopted Jacoco,",CASSANDRA-10704,"Since the project has adopted Jacoco,",,Existing system architecture description,3:103 - 3:139,1,arjan
91:3,"I don’t believe the cobertura tasks are in use any longer,  and it’s n…",CASSANDRA-10704,"I don’t believe the cobertura tasks are in use any longer,  and it’s not certain if they still function. I don’t think there’s any beneft from trying to keep both  coverage tools working, and also have the impression that cobertura development has slowed (or  been slow to support new versions of java).",,Architectural solution benefits and drawbacks,3:141 - 3:443,1,arjan
91:4,"Jacoco’s other advantage is it’s simpler usage (via a  java agent), as…",CASSANDRA-10704,"Jacoco’s other advantage is it’s simpler usage (via a  java agent), as compared to cobertura’s ofine code instrumentation requiring more complexity.
",,Architectural solution benefits and drawbacks,3:445 - 3:594,1,arjan
91:6,aweisberg,CASSANDRA-10704,aweisberg,,Comment,4:167 - 4:175,1,arjan
91:5,+1 looks good to me.,CASSANDRA-10704,"+1 looks good to me.
",,Architectural solution benefits and drawbacks,4:178 - 4:199,1,arjan
92:1,Upgrade netty to >= 4.0.34,CASSANDRA-11096,Upgrade netty to >= 4.0.34,,Technology solution,3:53 - 3:78,1,arjan
92:2,"Amongst other things, the native protocol will not bind ipv6 easily (s…",CASSANDRA-11096,"Amongst other things, the native protocol will not bind ipv6 easily (see CASSANDRA-11047)  until we upgrade.",,Architectural solution benefits and drawbacks,3:98 - 3:205,1,arjan
92:8,blerer,CASSANDRA-11096,blerer,,Comment,3:291 - 3:296,1,arjan
92:3,The upgrade does not seems to have introduced any problem.,CASSANDRA-11096,"The upgrade does not seems to have introduced any problem.
",,Architectural solution benefits and drawbacks,3:570 - 3:629,1,arjan
92:7,jasobrown,CASSANDRA-11096,jasobrown,,Comment,3:677 - 3:685,1,arjan
92:4,I’m also planning on using the latest netty 4.0.x jar for CASSANDRA-84…,CASSANDRA-11096,"I’m also planning on using the latest netty 4.0.x jar for CASSANDRA-8457  (I’m currently using 4.0.34, as well). I haven’t found any problems in internode testing,  thus far, so I’m a +1",,Architectural solution benefits and drawbacks,3:688 - 3:873,1,arjan
92:6,aleksey,CASSANDRA-11096,aleksey,,Comment,3:1006 - 3:1012,1,arjan
92:5,+1,CASSANDRA-11096,+1,,Architectural solution benefits and drawbacks,3:1015 - 3:1016,1,arjan
93:1,Update metrics-reporter dependencies,CASSANDRA-12089,Update metrics-reporter dependencies,,Technology solution,3:53 - 3:88,1,arjan
93:2,Proposal to update the metrics-reporter jars.,CASSANDRA-12089,"Proposal to update the metrics-reporter jars.
",,Technology solution,3:108 - 3:154,1,arjan
93:3,Upcoming versions (>=3.0.2) of [metrics-reporter-confg|https://github.…,CASSANDRA-12089,"Upcoming versions (>=3.0.2) of [metrics-reporter-confg|https://github.com/addthis/metrics-reporter-  confg] should support prometheus and maybe also riemann (in v3).
",,"Architectural solution benefits and drawbacks
Technology solution",3:155 - 3:321,2,arjan
93:4,reporter-confg 3.0.2+ can also be used in 2.1.,CASSANDRA-12089,reporter-confg 3.0.2+ can also be used in 2.1.,,Architectural design configuration,3:455 - 3:500,1,arjan
93:5,Therefore it would be nice to have also update the  jars in 2.1.,CASSANDRA-12089,"Therefore it would be nice to have also update the  jars in 2.1.
",,Architectural solution benefits and drawbacks,3:502 - 3:567,1,arjan
93:12,mmatloka@gmail.com,CASSANDRA-12089,mmatloka@gmail.com,,Comment,3:655 - 3:672,1,arjan
93:6,Patch with metrics-reporter-upgrade to 3.0.2 (includes zabbix  and inf…,CASSANDRA-12089,Patch with metrics-reporter-upgrade to 3.0.2 (includes zabbix  and infuxdb support).,,Technology solution,3:675 - 3:758,1,arjan
93:7,"Patch is based on 3.8 since I am not sure if it is ""allowed"" to upgrad…",CASSANDRA-12089,"Patch is based on 3.8 since I am not sure if it is ""allowed"" to upgrade  dependencies in minor versions for 2.1 and 2.2 ?
",,"Architectural design configuration
Architectural solution benefits and drawbacks",3:760 - 3:882,2,arjan
93:11,tjake,CASSANDRA-12089,tjake,,Comment,4:4 - 4:8,1,arjan
93:8,We can’t change dependencies in stable releases but we can add this to…,CASSANDRA-12089,"We can’t change dependencies in stable releases but we can add this to  3.10. You can manually change the jars in your version and it should work. I would like to  wait though till the prometheus reporter is released (it was just committed yesterday).
",,Architectural design configuration,4:23 - 4:275,1,arjan
93:10,mmatloka@gmail.com,CASSANDRA-12089,mmatloka@gmail.com,,Comment,4:279 - 4:296,1,arjan
93:9,New patch with metrics-reporter-confg 3.0.3 release including  both za…,CASSANDRA-12089,"New patch with metrics-reporter-confg 3.0.3 release including  both zabbix, infuxdb and prometheus.
",,Technology solution,4:299 - 4:399,1,arjan
94:1,Failed to load Java8 implementation ohc-core-j8,CASSANDRA-12133,Failed to load Java8 implementation ohc-core-j8,,Run-time quality issues,3:53 - 3:99,1,arjan
94:2,After enabling row cache in cassandra.yaml by setting row_cache_size_i…,CASSANDRA-12133,"After enabling row cache in cassandra.yaml by setting row_cache_size_in_mb, I receive this  warning in system.log during startup:",,Run-time quality issues,3:119 - 3:247,1,arjan
94:11,snazy,CASSANDRA-12133,snazy,,Comment,3:496 - 3:500,1,arjan
94:3,you can safely ignore this message (see [OHC issue|https://github.com/…,CASSANDRA-12133,"you can safely ignore this message (see [OHC issue|https://github.com/snazy/ohc/issues/17]).
It’s fxed in OHC 0.4.4 (not sure why I forgot to submit a patch for that until now)..
",,"Architectural solution benefits and drawbacks
Technology solution",3:515 - 3:695,2,arjan
94:4,"Using this ticket to upgrade OHC - but not in 3.0.x as it’s just an ""a…",CASSANDRA-12133,"Using this ticket to upgrade OHC - but not in 3.0.x as it’s just an ""annoying"" message.
",,"Architectural solution benefits and drawbacks
Technology solution",3:696 - 3:784,2,arjan
94:10,tjake,CASSANDRA-12133,tjake,,Comment,4:4 - 4:8,1,arjan
94:5,Seems fne but there are some odd testall failures in there. Can you ve…,CASSANDRA-12133," Seems fne but there are some odd testall failures in there. Can you verify/rerun  them?
",,Architectural solution benefits and drawbacks,4:10 - 4:99,1,arjan
94:9,snazy,CASSANDRA-12133,snazy,,Comment,4:103 - 4:107,1,arjan
94:6,"Yup, rebased + scheduled CI again. Looks fne now.",CASSANDRA-12133,"Yup, rebased + scheduled CI again. Looks fne now.
",,Architectural solution benefits and drawbacks,4:110 - 4:160,1,arjan
94:8,tjake,CASSANDRA-12133,tjake,,Comment,4:164 - 4:168,1,arjan
94:7,+1,CASSANDRA-12133,+1,,Architectural solution benefits and drawbacks,4:171 - 4:172,1,arjan
95:1,Update jmh-core/jmh-generator-annprocess to quell RELEASE_6 warnings,CASSANDRA-12536,Update jmh-core/jmh-generator-annprocess to quell RELEASE_6 warnings,,"Architectural solution benefits and drawbacks
Technology solution",3:53 - 3:120,2,arjan
95:2,Current build emits,CASSANDRA-12536,Current build emits,,Run-time quality issues,3:140 - 3:158,1,arjan
95:3,Updating to 1.13 clears this warning,CASSANDRA-12536,Updating to 1.13 clears this warning,,Architectural solution benefits and drawbacks,3:463 - 3:498,1,arjan
95:5,brandon.williams,CASSANDRA-12536,brandon.williams,,Comment,3:582 - 3:597,1,arjan
95:4,+1,CASSANDRA-12536,+1,,Architectural solution benefits and drawbacks,3:600 - 3:601,1,arjan
96:1,Support InfuxDb metrics reporter confg,CASSANDRA-12790,Support InfuxDb metrics reporter confg,,Technology solution,3:53 - 3:90,1,arjan
96:2,InfuxDb is a great tool for storing metrics. The main advantage over g…,CASSANDRA-12790,"InfuxDb is a great tool for storing metrics. The main advantage over graphite protocol is its tag  mechanism that allows host info to be excluded from metric name.
",,"Architectural solution benefits and drawbacks
Technology solution",3:110 - 3:274,2,arjan
96:3,I managed to send metrics into InfuxDb by putting {{metrics-infuxdb-1.…,CASSANDRA-12790,I managed to send metrics into InfuxDb by putting {{metrics-infuxdb-1.1.7.jar}} into {{lib}}  folder and replacing these dependencies jar:,,Architectural design configuration,3:275 - 3:412,1,arjan
96:4,Although it seems that dropwizard team is working on ofcial [package f…,CASSANDRA-12790,"Although it seems that dropwizard team is working on ofcial [package for InfuxDb|https://github.com/dropwizard/metri  development], it would be great it those libs are available in default distribution",,Architectural solution benefits and drawbacks,3:593 - 3:793,1,arjan
96:5,by upgrading  {{commons-codec}} and {{metrics}} dependencies.,CASSANDRA-12790, by upgrading  {{commons-codec}} and {{metrics}} dependencies.,,Architectural solution benefits and drawbacks,3:794 - 3:855,1,arjan
96:28,blerer,CASSANDRA-12790,blerer,,Comment,3:1091 - 3:1096,1,arjan
96:6,"As it is an improvement, it can only be done in 3.X (next release bein…",CASSANDRA-12790,"As it is an improvement, it can only be done in 3.X (next release being 3.10).",,Architectural design configuration,3:1099 - 3:1176,1,arjan
96:7,I  checked that branch and the reporter confg dependencies have alread…,CASSANDRA-12790,"I  checked that branch and the reporter confg dependencies have already been upgraded to  2
the version you need.
",,Existing system architecture description,3:1178 - 4:23,1,arjan
96:27,achmadns,CASSANDRA-12790,achmadns,,Comment,4:84 - 4:91,1,arjan
96:8,It is required by {{metrics-infuxdb-1.1.7.jar}}.,CASSANDRA-12790,It is required by {{metrics-infuxdb-1.1.7.jar}}.,,Contextual constraints,4:94 - 4:141,1,arjan
96:9,I tested by inserting some  record and did SELECT query. It is fne so…,CASSANDRA-12790,I tested by inserting some  record and did SELECT query. It is fne so far. ,,Architectural solution benefits and drawbacks,4:143 - 4:217,1,arjan
96:10,Currently we need ver 3.0.X to main-  tain compatibility against [Spar…,CASSANDRA-12790,Currently we need ver 3.0.X to main-  tain compatibility against [Spark-Cassandra Connector|https://github.com/datastax/spark-  cassandra-connector/],,"Architectural design configuration
Architectural solution benefits and drawbacks",4:218 - 4:366,2,arjan
96:26,blerer,CASSANDRA-12790,blerer,,Comment,4:372 - 4:377,1,arjan
96:11,I understand your problem but then you have to do it on your side. {{3…,CASSANDRA-12790,"I understand your problem but then you have to do it on your side. {{3.0.X}} is a bug  fx branch.
",,Architectural solution benefits and drawbacks,4:474 - 4:572,1,arjan
96:12,I will look into upgrading {{common-codec}} into {{3.X}}.,CASSANDRA-12790,"I will look into upgrading {{common-codec}} into {{3.X}}.
",,"Architectural design configuration
Technology solution",4:573 - 4:631,2,arjan
96:25,achmadns,CASSANDRA-12790,achmadns,,Comment,4:635 - 4:642,1,arjan
96:13,I understand the versioning policy. But I expect nothing breaks in the…,CASSANDRA-12790," I understand the versioning policy.
But I expect nothing breaks in the [tests|http://cassandra.apache.org/doc/latest/development/testing.html#dtests]  when I did change the dependencies as I did. Is my assumption correct? Thank you.
",,"Architectural solution benefits and drawbacks
Assumptions",4:644 - 4:879,2,arjan
96:24,blerer,CASSANDRA-12790,blerer,,Comment,4:883 - 4:888,1,arjan
96:14,"What I can do for you, next week, is to run the tests on the {{3.0.X}}…",CASSANDRA-12790,"What I can do for you, next week, is to run the tests on the {{3.0.X}} version with  the upgraded jars.",,Architectural design configuration,4:891 - 4:993,1,arjan
96:15,At least you will know if there are some obvious problems. Nevertheles…,CASSANDRA-12790,"At least you will know if there are some obvious problems. Nevertheless,  it does not means that you will be fully safe. We try to cover as much things as we can on  our tests but they are not 100% bullet proof.
",,Architectural solution benefits and drawbacks,4:995 - 4:1206,1,arjan
96:23,carlyeks,CASSANDRA-12790,carlyeks,,Comment,4:1236 - 4:1243,1,arjan
96:16,The update to metrics-reporter 3.0.3 has already been committed to 3.1…,CASSANDRA-12790,"The update to metrics-reporter 3.0.3 has already been committed to 3.10.
",,Existing system architecture description,4:1246 - 4:1319,1,arjan
96:22,blerer,CASSANDRA-12790,blerer,,Comment,4:1323 - 4:1328,1,arjan
96:17,it seems that {{commons-codec}} also need to be upgraded.,CASSANDRA-12790,"it seems that {{commons-codec}} also need to be upgraded.
",,Technology solution,4:1343 - 4:1401,1,arjan
96:21,blerer,CASSANDRA-12790,blerer,,Comment,4:1405 - 4:1410,1,arjan
96:18,The patch upgrade the commons-codec jar to {{1.9}},CASSANDRA-12790,The patch upgrade the commons-codec jar to {{1.9}},,Technology solution,4:1628 - 4:1677,1,arjan
96:20,aleksey,CASSANDRA-12790,aleksey,,Comment,4:2015 - 4:2021,1,arjan
96:19,+1,CASSANDRA-12790, +1,,Architectural solution benefits and drawbacks,4:2023 - 4:2025,1,arjan
97:1,update arline dependecy to 0.7,CASSANDRA-12994,update arline dependecy to 0.7,,Technology solution,3:53 - 3:82,1,arjan
97:2,"We want to include Cassandra into Fedora, and there are some tweaks to…",CASSANDRA-12994,"We want to include Cassandra into Fedora, and there are some tweaks to cassandra sources we  need to do. The io.airlift:airline dependency is one of those tweak we gotta do. Cassandra depends  on arline 0.6, but In Fedora we have the latest upstream version 0.7. It was released quite time  ago on Nov 6 2014. ",,Motivation of design issue,3:102 - 3:411,1,arjan
97:3,I attached a patch updating cassandra sources to depend on the newest…,CASSANDRA-12994,"I attached a patch updating cassandra sources to depend on the newest airline  sources. The only actual changes are in the imports. Please consider updating.
",,Technology solution,3:412 - 3:570,1,arjan
98:1,Upgrade netty to 4.0.44 to fx memory leak with client encryption,CASSANDRA-13114,Upgrade netty to 4.0.44 to fx memory leak with client encryption,,"Architectural solution benefits and drawbacks
Technology solution",3:53 - 3:116,2,arjan
98:2,https://issues.apache.org/jira/browse/CASSANDRA-12032 updated netty fo…,CASSANDRA-13114,"https://issues.apache.org/jira/browse/CASSANDRA-12032 updated netty for Cassandra 3.8, but  this wasn’t backported. Netty 4.0.23, which ships with Cassandra 3.0.x, has some serious bugs  around memory handling for SSL connections.
",,Run-time quality issues,3:136 - 3:367,1,arjan
98:3,"It would be nice if both were updated to 4.0.42, a version released th…",CASSANDRA-13114,"It would be nice if both were updated to 4.0.42, a version released this year.
",,"Architectural solution benefits and drawbacks
Technology solution",3:368 - 3:447,2,arjan
98:4,"4.0.23 makes it impossible for me to run SSL, because nodes run out of…",CASSANDRA-13114,"4.0.23 makes it impossible for me to run SSL, because nodes run out of memory every ~30 minutes.
This was fxed in 4.0.27.
",,Architectural solution benefits and drawbacks,3:448 - 3:571,1,arjan
98:51,spod,CASSANDRA-13114,spod,,Comment,3:710 - 3:713,1,arjan
98:5,Netty 4.0.23 has been introduced in CASSANDRA-7761 and is used since 2…,CASSANDRA-13114,"Netty 4.0.23 has been introduced in CASSANDRA-7761 and is used since 2.1.1. Look-  ing at the [4.0.27 release notes|http://netty.io/news/2015/04/02/4-0-27-Final.html] I assume  that [#3567|https://github.com/netty/netty/issues/3567] fxes the memory issue you’re re-  ferring to? If I read the ticket correctly, the bug does not manifest in 4.0.23, but only after  updating to 4.0.25/26. Can you link the actual issue that makes you believe 4.0.23 is afected  in case there’s something I’m missing here?",,Motivation of design issue,3:716 - 3:1217,1,arjan
98:50,tvdw,CASSANDRA-13114,tvdw,,Comment,3:1223 - 3:1226,1,arjan
98:6,"Sorry, the actual fxes are in 4.0.24 (http://netty.io/news/2014/10/29/…",CASSANDRA-13114,"Sorry, the actual fxes are in 4.0.24 (http://netty.io/news/2014/10/29/4-0-24-Final.html  / https://github.com/netty/netty/pull/3058 / https://github.com/netty/netty/issues/3057).
",,"Architectural solution benefits and drawbacks
Technology solution",3:1229 - 3:1408,2,arjan
98:49,snazy,CASSANDRA-13114,snazy,,Comment,4:432 - 4:436,1,arjan
98:7,"No objections regarding a _minor_ netty upgrade, if that solves real S…",CASSANDRA-13114,"No objections regarding a _minor_ netty upgrade, if that solves real SSL issues /  an existing bug.",,Architectural solution benefits and drawbacks,4:439 - 4:537,1,arjan
98:8,I’d just be very careful with dependency changes since 4.0.37 introduc…,CASSANDRA-13114,"I’d just be very careful with dependency changes since 4.0.37 introduced a  couple of issues.
",,"Risks
Technology solution",4:539 - 4:633,2,arjan
98:9,Would setting {{-XX:MaxDirectMemorySize=SomeBigValue}} help in this ca…,CASSANDRA-13114,"Would setting {{-XX:MaxDirectMemorySize=SomeBigValue}} help in this case?
",,"Architectural component behavior and structure
Assumptions",4:634 - 4:708,2,arjan
98:10,"However, I do object introducing the new stuf from CASSANDRA-12032 in…",CASSANDRA-13114,"However, I do object introducing the new stuf from CASSANDRA-12032 in 2.2 or 3.0, be-  cause it is a new thing, which is disabled by default in 3.x.
",,Architectural solution benefits and drawbacks,4:709 - 4:857,1,arjan
98:48,tvdw,CASSANDRA-13114,tvdw,,Comment,4:862 - 4:865,1,arjan
98:11,"4.0.39 has been tested pretty well with 3.x by now, so it should be re…",CASSANDRA-13114," 4.0.39 has been tested pretty well with 3.x by now, so it should be relatively safe  (much safer than, say, 3.0.36, which not only hasn’t been tested, but also won’t get the  attention that 3.0.39 would get if it is used by both 3.0 and 3.x).",,Architectural solution benefits and drawbacks,4:867 - 4:1109,1,arjan
98:12,Defnitely don’t pick 4.1!,CASSANDRA-13114,"Defnitely don’t pick 4.1!
",,"Architectural solution benefits and drawbacks
Technology solution",4:1111 - 4:1137,2,arjan
98:13,As for setting MaxDirectMemorySize: it was set to 20GB when I fled thi…,CASSANDRA-13114,As for setting MaxDirectMemorySize: it was set to 20GB when I fled this ticket. No  luck :),,Architectural solution benefits and drawbacks,4:1138 - 4:1228,1,arjan
98:14,"Side-note: CASSANDRA-13126 is a related issue, on clusters with SSL en…",CASSANDRA-13114,"Side-note: CASSANDRA-13126 is a related issue, on clusters with SSL enabled even non  SSL clients may be impacted due to this netty issue.
",,Run-time quality issues,4:1231 - 4:1370,1,arjan
98:47,norman,CASSANDRA-13114,norman,,Comment,4:3175 - 4:3180,1,arjan
98:15,nope just upgrade to 4.0.43. FTW ;),CASSANDRA-13114, nope just upgrade to 4.0.43. FTW ;) ,,"Architectural solution benefits and drawbacks
Technology solution",4:3202 - 4:3238,2,arjan
98:16,That said we will  release 4.0.44.Final end of this week or next week…,CASSANDRA-13114,"That said we will  release 4.0.44.Final end of this week or next week latest.
",,Technology solution,4:3239 - 4:3317,1,arjan
98:46,norman,CASSANDRA-13114,norman,,Comment,5:796 - 5:801,1,arjan
98:17,FYI netty 4.0.44.Final was released earlier today. http://netty.io/new…,CASSANDRA-13114,FYI netty 4.0.44.Final was released earlier today. http://netty.io/news/2017/01/30  0-44-Final-4-1-8-Final.html,,Technology solution,5:824 - 5:934,1,arjan
98:45,spod,CASSANDRA-13114,spod,,Comment,5:941 - 5:944,1,arjan
98:18,Updated the patch to 4.0.44 and latest CI results already refect the v…,CASSANDRA-13114,"Updated the patch to 4.0.44 and latest CI results already refect the version change.
",,Technology solution,5:947 - 5:1032,1,arjan
98:44,jjordan,CASSANDRA-13114,jjordan,,Comment,5:1076 - 5:1082,1,arjan
98:19,You probably want to run some QUORUM stress smoke tests,CASSANDRA-13114, You probably want to run some QUORUM stress smoke tests,,Architectural design configuration,5:1084 - 5:1139,1,arjan
98:20,to make sure there  are no regressions there.,CASSANDRA-13114," to make sure there  are no regressions there.
",,Architectural solution benefits and drawbacks,5:1140 - 5:1187,1,arjan
98:43,snazy,CASSANDRA-13114,snazy,,Comment,5:1192 - 5:1196,1,arjan
98:21,"I can, but would need some time. EDIT: [~jjordan]’s suggestion makes s…",CASSANDRA-13114,"I can, but would need some time.
EDIT: [~jjordan]’s suggestion makes sense. We already had an issue with a regression in  Netty - just want to prevent a second upgrade-revert-upgrade-ticket ;)",,Architectural solution benefits and drawbacks,5:1199 - 5:1391,1,arjan
98:42,snazy,CASSANDRA-13114,snazy,,Comment,6:271 - 6:275,1,arjan
98:22,can you explain the code change in {{Message}}? It looks  like it does…,CASSANDRA-13114,"can you explain the code change in {{Message}}? It looks  like it doesn’t change anything.
",,"Architectural solution benefits and drawbacks
Assumptions",6:298 - 6:389,2,arjan
98:41,spod,CASSANDRA-13114,spod,,Comment,6:394 - 6:397,1,arjan
98:23,Any exceptions caught by Netty will be logged by {{UnexpectedChannelEx…,CASSANDRA-13114,"Any exceptions caught by Netty will be logged by {{UnexpectedChannelException-  Handler}}. Before the changes to {{Message}}, this would only happen when the channel  would still be open. ",,Architectural design configuration,6:400 - 6:587,1,arjan
98:24,In Netty 4.0.23 this seems to be the case,CASSANDRA-13114,In Netty 4.0.23 this seems to be the case,,"Assumptions
Technology solution",6:588 - 6:628,2,arjan
98:25,"in 4.0.44 the channel is  now closed (at least for handshake errors, w…",CASSANDRA-13114,"in 4.0.44 the channel is  now closed (at least for handshake errors, which makes sense) when {{exceptionCaught}} is  called.",,Technology solution,6:631 - 6:754,1,arjan
98:26,"What the patch does is simply to log the exception in both cases, whil…",CASSANDRA-13114,"What the patch does is simply to log the exception in both cases, while leaving the er-  ror reply sending case as it was (keep sending reply only in case channel is still open). I’ve no-  ticed the changed behaviour through a dtest",,Architectural design configuration,6:756 - 6:987,1,arjan
98:40,snazy,CASSANDRA-13114,snazy,,Comment,6:1592 - 6:1596,1,arjan
98:27,Ah - logging takes place in the {{apply}} method,CASSANDRA-13114,Ah - logging takes place in the {{apply}} method,,Architectural design configuration,6:1599 - 6:1646,1,arjan
98:28,"OK, makes sense.",CASSANDRA-13114,"OK, makes sense.
",,Architectural solution benefits and drawbacks,6:1649 - 6:1665,1,arjan
98:39,tvdw,CASSANDRA-13114,tvdw,,Comment,6:1671 - 6:1674,1,arjan
98:29,I’ve deployed [~mshuler]’s snapshot build to most nodes in the cluster…,CASSANDRA-13114," I’ve deployed [~mshuler]’s snapshot build to most nodes in the cluster that previ-  ously experienced this issue, and re-enabled TLS on a few hundred clients. The nodes still  on 3.0.10 quickly showed memory issues, while the nodes on 3.0.11-SNAPSHOT were happy.
So I upgraded the remaining nodes and enabled TLS on another ~50000 clients, many many  more than I originally needed to cause problems.
Nothing broke.
So basically I can confrm that this patch fxes the problem, and at least for my test cases  (one involves fairly heavy use of QUORUM reads and writes) doesn’t appear to introduce  new ones. I wouldn’t take that over good dtests/utests, but it’s a useful data point to have.
",,Architectural solution benefits and drawbacks,6:1676 - 6:2369,1,arjan
98:38,snazy,CASSANDRA-13114,snazy,,Comment,6:2551 - 6:2555,1,arjan
98:30,Patch LGTM,CASSANDRA-13114,Patch LGTM,,Architectural solution benefits and drawbacks,6:2558 - 6:2567,1,arjan
98:37,spod,CASSANDRA-13114,spod,,Comment,6:2712 - 6:2715,1,arjan
98:31,"I don’t think this is critical enough for 2.1, as you have to have lar…",CASSANDRA-13114," I don’t think this is critical enough for 2.1, as you have to have large enough direct  allocations through netty that will exhaust the memory between regular CMS runs. So  5
you don’t necessarily have to run into this problem and there’s an easy workaround by not  enabling disableexplicitgc (as described in CASSANDRA-13126) or by simply replacing the  netty jar with a new version.",,"Architectural design configuration
Architectural solution benefits and drawbacks
Assumptions",6:2717 - 7:209,3,arjan
98:32,But 2.2 and 3.0 - why not? Both are supported and it should  be possib…,CASSANDRA-13114,"But 2.2 and 3.0 - why not? Both are supported and it should  be possible to do a library updated there.
",,"Architectural design configuration
Architectural solution benefits and drawbacks",7:210 - 7:314,2,arjan
98:36,jjirsa,CASSANDRA-13114,jjirsa,,Comment,7:426 - 7:431,1,arjan
98:34,Was this dire enough to go into 2.1 ? Seems like a pretty high bar for…,CASSANDRA-13114,"Was this dire enough to go into 2.1 ? Seems like a pretty high bar for a .17 release.
",,Architectural solution benefits and drawbacks,7:434 - 7:520,1,arjan
98:35,snazy,CASSANDRA-13114,snazy,,Comment,7:525 - 7:529,1,arjan
98:33,"Well, the new netty version _should_ not hurt. But if you run into thi…",CASSANDRA-13114,"Well, the new netty version _should_ not hurt. But if you run into this SSL/netty  issue, it hurts a lot.
",,Architectural solution benefits and drawbacks,7:532 - 7:638,1,arjan
99:1,Upgrade the snappy-java version to 1.1.2.x,CASSANDRA-13336,Upgrade the snappy-java version to 1.1.2.x,,Technology solution,3:53 - 3:94,1,arjan
99:2,Snappy-java added support for AArch64 since version 1.1.2.x.(https://g…,CASSANDRA-13336,"Snappy-java added support for AArch64 since version 1.1.2.x.(https://github.com/xerial/snappy-  java/pull/135).
",,"Architectural solution benefits and drawbacks
Technology solution",3:114 - 3:226,2,arjan
99:17,yuqilinaro,CASSANDRA-13336,yuqilinaro,,Comment,3:310 - 3:319,1,arjan
99:3,We are trying to enable Cassandra on AArch64 and found that Snappy Com…,CASSANDRA-13336,We are trying to enable Cassandra on AArch64 and found that Snappy Com-  press Library version 1.1.1.7 which was released in 2014 and has no aarch64 support.,,Motivation of design issue,3:322 - 3:478,1,arjan
99:4,But  it added support for AArch64 on the version 1.1.2.x.(https://gith…,CASSANDRA-13336,"But  it added support for AArch64 on the version 1.1.2.x.(https://github.com/xerial/snappy-  java/pull/135).
So ""snappy-java-1.1.1.7.jar"" in ""https://github.com/apache/cassandra/tree/trunk/lib"" is needed  to upgrade to 1.1.2.x.
",,"Architectural solution benefits and drawbacks
Technology solution",3:479 - 3:708,2,arjan
99:5,"And the dependency in ""build.xml"" is also needed to update to 1.1.2.x.…",CASSANDRA-13336,"And the dependency in ""build.xml"" is also needed to update to 1.1.2.x.
( <dependency groupId=""org.xerial.snappy"" artifactId=""snappy-java"" version=""1.1.1.7""/>)",,Architectural component behavior and structure,3:709 - 3:867,1,arjan
99:16,jjirsa,CASSANDRA-13336,jjirsa,,Comment,3:873 - 3:878,1,arjan
99:6,"I’ll push this for CI, but again, AArch64 isn’t currently a supported…",CASSANDRA-13336,"I’ll push this for CI, but again, AArch64 isn’t currently a supported platform, and a  best-efort is no guarantee that it’ll continue working.
",,Architectural solution benefits and drawbacks,3:881 - 3:1024,1,arjan
99:7,"Targeting 4.0, this sort of disruption doesn’t belong in 3.0.x with x…",CASSANDRA-13336,"Targeting 4.0, this sort of disruption doesn’t belong in 3.0.x with x >= 13.",,"Architectural design configuration
Architectural solution benefits and drawbacks",3:1118 - 3:1193,2,arjan
99:15,snazy,CASSANDRA-13336,snazy,,Comment,4:259 - 4:263,1,arjan
99:8,No strong objection to update snappy-java in trunk.,CASSANDRA-13336,"No strong objection to update snappy-java in trunk.
",,Architectural solution benefits and drawbacks,4:266 - 4:318,1,arjan
99:9,"However, it should be noted in NEWS.txt",CASSANDRA-13336,"However, it should be noted in NEWS.txt",,Architectural component behavior and structure,4:319 - 4:357,1,arjan
99:10,to make Linux distro maintainers should be aware  of this change. Some…,CASSANDRA-13336,"to make Linux distro maintainers should be aware  of this change. Some distros run into [issues linking the native libraries|https://github.com/xerial/snappy-  java/issues/150].
",,Architectural solution benefits and drawbacks,4:359 - 4:537,1,arjan
99:14,jasobrown,CASSANDRA-13336,jasobrown,,Comment,4:541 - 4:549,1,arjan
99:11,"If you update the snappy-java license in {{lib/licenses}}, I am +1",CASSANDRA-13336,"If you update the snappy-java license in {{lib/licenses}}, I am +1",,"Architectural component behavior and structure
Architectural solution benefits and drawbacks",4:562 - 4:627,2,arjan
99:13,jasobrown,CASSANDRA-13336,jasobrown,,Comment,4:892 - 4:900,1,arjan
99:12,"A belated +1 for all,",CASSANDRA-13336,"A belated +1 for all,",,Architectural solution benefits and drawbacks,4:903 - 4:923,1,arjan
100:1,Upgrade metrics to 3.1.5,CASSANDRA-13648,Upgrade metrics to 3.1.5,,Technology solution,3:53 - 3:76,1,arjan
100:2,GH PR #123 indicates that metrics 3.1.5 will fx a reconnect bug:  http…,CASSANDRA-13648,GH PR #123 indicates that metrics 3.1.5 will fx a reconnect bug:  https://github.com/apache/cassandra/pull/123,,"Architectural solution benefits and drawbacks
Technology solution",3:96 - 3:205,2,arjan
100:14,spod,CASSANDRA-13648,spod,,Comment,3:616 - 3:619,1,arjan
100:3,Patch is missing the actual jar fles in lib. The build.xml dependencie…,CASSANDRA-13648,"Patch is missing the actual jar fles in lib. The build.xml dependencies are just for  creating the project pom, if I remember correctly.
",,Architectural solution benefits and drawbacks,3:622 - 3:759,1,arjan
100:13,jjirsa,CASSANDRA-13648,jjirsa,,Comment,3:763 - 3:768,1,arjan
100:4,Thanks [~spodxx@gmail.com] - just rebased and force pushed with new me…,CASSANDRA-13648,"Thanks [~spodxx@gmail.com] - just rebased and force pushed with new metrics-core,  metrics-jvm, and metrics-logback jars (3.1.5)",,Technology solution,3:771 - 3:898,1,arjan
100:12,spod,CASSANDRA-13648,spod,,Comment,4:196 - 4:199,1,arjan
100:5,I also think you missed to move the corresponding lib/license fles.,CASSANDRA-13648,"I also think you missed to move the corresponding lib/license fles.
",,Architectural design configuration,4:237 - 4:305,1,arjan
100:6,Did you omit the CHANGES.txt update intentionally?,CASSANDRA-13648,"Did you omit the CHANGES.txt update intentionally?
",,"Architectural component behavior and structure
Assumptions",4:306 - 4:357,2,arjan
100:11,jjirsa,CASSANDRA-13648,jjirsa,,Comment,4:361 - 4:366,1,arjan
100:7,CHANGES was intentionally omitted because it always conficts,CASSANDRA-13648,CHANGES was intentionally omitted because it always conficts,,Architectural solution benefits and drawbacks,4:369 - 4:428,1,arjan
100:8,"The licenses  weren’t intentional. Changed that, kicked of new run her…",CASSANDRA-13648,"The licenses  weren’t intentional. Changed that, kicked of new run here.
",,Architectural solution benefits and drawbacks,4:431 - 4:504,1,arjan
100:10,spod,CASSANDRA-13648,spod,,Comment,4:669 - 4:672,1,arjan
100:9,Patch looks good.,CASSANDRA-13648,"Patch looks good.
",,Architectural solution benefits and drawbacks,4:675 - 4:693,1,arjan
101:1,Upgrade JMH version to 1.19,CASSANDRA-13727,Upgrade JMH version to 1.19,,Technology solution,3:53 - 3:79,1,arjan
101:2,"I think we should upgrade it to 1.19, fxes:  http://hg.openjdk.java.ne…",CASSANDRA-13727,"I think we should upgrade it to 1.19, fxes:  http://hg.openjdk.java.net/code-tools/jmh",,"Architectural solution benefits and drawbacks
Assumptions
Technology solution",3:182 - 3:267,3,arjan
101:4,jasobrown,CASSANDRA-13727,jasobrown,,Comment,3:560 - 3:568,1,arjan
101:3,+1.,CASSANDRA-13727,+1.,,Architectural solution benefits and drawbacks,3:571 - 3:573,1,arjan
102:1,CVE-2017-5929 Security vulnerability and redefne default log rotation…,CASSANDRA-14183,CVE-2017-5929 Security vulnerability and redefne default log rotation policy,,Run-time quality issues,3:53 - 3:128,1,arjan
102:2,"Cassandra 3.11.1 is patched with logback 1.1.3, which contains the sec…",CASSANDRA-14183,"Cassandra 3.11.1 is patched with logback 1.1.3, which contains the security vulnerability described  here. [https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-5929]",,Run-time quality issues,3:148 - 3:316,1,arjan
102:3,Also update to logback allows a simple date and size rotation policy,CASSANDRA-14183,Also update to logback allows a simple date and size rotation policy,,Technology solution,3:319 - 3:386,1,arjan
102:4,allows a simple date and size rotation policy to  replace the default…,CASSANDRA-14183," allows a simple date and size rotation policy to  replace the default fxed policy, which is broken by design.
",,Architectural solution benefits and drawbacks,3:341 - 3:452,1,arjan
102:21,tveronezi,CASSANDRA-14183,tveronezi,,Comment,3:587 - 3:595,1,arjan
102:5,A simple library upgrade is the fx tofx the CVE.,CASSANDRA-14183,"A simple library upgrade is the fx tofx the CVE.
",,"Architectural solution benefits and drawbacks
Technology solution",3:598 - 3:647,2,arjan
102:20,mshuler,CASSANDRA-14183,mshuler,,Comment,3:651 - 3:657,1,arjan
102:6,"As discussed on the dev@ list and IRC, I have experienced third-party…",CASSANDRA-14183,"As discussed on the dev@ list and IRC, I have experienced third-party applica-  tion failure upon updating to logback-1.2.3, so I am not keen on updating the jar in stable  branches without due diligence on test updates and user notifcation.
",,"Architectural design configuration
Architectural solution benefits and drawbacks",3:660 - 3:902,2,arjan
102:7,I’m fne with,CASSANDRA-14183,I’m fne with,,Architectural solution benefits and drawbacks,3:903 - 3:914,1,arjan
102:8,committing an update to trunk.,CASSANDRA-14183,"committing an update to trunk.
",,Architectural design configuration,3:916 - 3:947,1,arjan
102:9,"Dropping in a new jar is not all that’s needed for a complete fx, sinc…",CASSANDRA-14183,"Dropping in a new jar is not all that’s needed for a complete fx, since we break unit tests.
I attached a git patch on trunk that was created for the purpose of fxing log rotation, but  it does not build properly, at the moment. It has the cql3 test changes needed, as well as  2
some notes on obsoleted api changes in logback since 1.1.3.
",,Motivation of design issue,3:948 - 4:61,1,arjan
102:19,aweisberg,CASSANDRA-14183,aweisberg,,Comment,4:178 - 4:186,1,arjan
102:11,NEWS.txt update for 2.1.21 to be merged forward,CASSANDRA-14183,NEWS.txt update for 2.1.21 to be merged forward,,Architectural design configuration,4:371 - 4:417,1,arjan
102:18,jasobrown,CASSANDRA-14183,jasobrown,,Comment,4:523 - 4:531,1,arjan
102:10,I’m +1 on the NEWS.txt changes.,CASSANDRA-14183," I’m +1 on the NEWS.txt changes.
",,Architectural solution benefits and drawbacks,4:533 - 4:566,1,arjan
102:17,aweisberg,CASSANDRA-14183,aweisberg,,Comment,4:570 - 4:578,1,arjan
102:12,+1 on Michael’s patch.,CASSANDRA-14183,"+1 on Michael’s patch.
",,Architectural solution benefits and drawbacks,4:581 - 4:604,1,arjan
102:16,mshuler,CASSANDRA-14183,mshuler,,Comment,4:875 - 4:881,1,arjan
102:13,I committed the license fle renames for trunk,CASSANDRA-14183,I committed the license fle renames for trunk,,Architectural design configuration,4:884 - 4:928,1,arjan
102:15,aweisberg,CASSANDRA-14183,aweisberg,,Comment,4:989 - 4:997,1,arjan
102:14,Thanks for catching that.,CASSANDRA-14183,"Thanks for catching that.
",,Architectural solution benefits and drawbacks,4:1000 - 4:1026,1,arjan
103:1,Update Netty version to 4.1.50 because there are security issues in 4.…,CASSANDRA-15868,Update Netty version to 4.1.50 because there are security issues in 4.1.37,,"Architectural solution benefits and drawbacks
Technology solution",3:53 - 3:126,2,arjan
103:2,there are security issues in 4.1.37,CASSANDRA-15868, there are security issues in 4.1.37,,Run-time quality issues,3:91 - 3:126,1,arjan
103:24,mattsplat,CASSANDRA-15868,mattsplat,,Comment,3:383 - 3:391,1,arjan
103:3,Note also that 4.1.50 contains aarch64 native libraries for improved p…,CASSANDRA-15868, Note also that 4.1.50 contains aarch64 native libraries for improved performance  on ARM processors.,,Architectural solution benefits and drawbacks,3:393 - 3:493,1,arjan
103:23,aleksey,CASSANDRA-15868,aleksey,,Comment,3:619 - 3:625,1,arjan
103:4,Could you please update the bundled jar (in lib/) too?,CASSANDRA-15868,Could you please update the bundled jar (in lib/) too?,,Architectural design configuration,3:632 - 3:685,1,arjan
103:22,mattsplat,CASSANDRA-15868,mattsplat,,Comment,3:699 - 3:707,1,arjan
103:5,"looks like you’ve already added the JAR for 4.1.50, only  change would…",CASSANDRA-15868," looks like you’ve already added the JAR for 4.1.50, only  change would be to remove 4.1.37.
",,Architectural design configuration,3:731 - 3:824,1,arjan
103:21,mattsplat,CASSANDRA-15868,mattsplat,,Comment,3:925 - 3:933,1,arjan
103:6,"Also, would it be out of scope for this issue to update Cassandra 4 fr…",CASSANDRA-15868,"Also, would it be out of scope for this issue to update Cassandra 4 from netty-  tcnative-boringssl-static 2.0.25 to 2.0.31?",,Technology solution,3:936 - 3:1059,1,arjan
103:7,This latest version also includes native libraries  for Arm processors…,CASSANDRA-15868,"This latest version also includes native libraries  for Arm processors.
",,Architectural solution benefits and drawbacks,3:1061 - 3:1133,1,arjan
103:20,aleksey,CASSANDRA-15868,aleksey,,Comment,4:4 - 4:10,1,arjan
103:8,Do you typically accept these type of dependency updates?,CASSANDRA-15868,Do you typically accept these type of dependency updates?,,Architectural design configuration,4:70 - 4:126,1,arjan
103:9,https://issues.apache.org/jira/browse/CASSANDRA-  14473 suggests you d…,CASSANDRA-15868,"https://issues.apache.org/jira/browse/CASSANDRA-  14473 suggests you do not, though there are legitimate vulnerabilities in this case.
",,Architectural solution benefits and drawbacks,4:128 - 4:263,1,arjan
103:10,Is the minor version bump concerning to anyone? We have heard Netty ma…,CASSANDRA-15868,"Is the minor version bump concerning to anyone? We have heard Netty may not guar-  antee API compatibility across minor versions.
",,Architectural solution benefits and drawbacks,4:264 - 4:394,1,arjan
103:11,I’m hesitant to,CASSANDRA-15868,I’m hesitant to,,Architectural solution benefits and drawbacks,4:516 - 4:530,1,arjan
103:12,"make a 4.0 -> 4.1 upgrade here for the 3.11 branch,",CASSANDRA-15868,"make a 4.0 -> 4.1 upgrade here for the 3.11 branch,",,Architectural design configuration,4:532 - 4:582,1,arjan
103:13,"as 4.1 is known to  not be fully compatible with 4.0, and we’d have to…",CASSANDRA-15868,"as 4.1 is known to  not be fully compatible with 4.0, and we’d have to do quite a bit of testing to safely upgrade  the dependency.
",,Architectural solution benefits and drawbacks,4:584 - 4:716,1,arjan
103:14,"I’ll commit the 4.0 branch version right now,",CASSANDRA-15868,"I’ll commit the 4.0 branch version right now,",,Architectural design configuration,4:793 - 4:837,1,arjan
103:15,but hold of,CASSANDRA-15868,but hold of ,,Architectural solution benefits and drawbacks,4:839 - 4:850,1,arjan
103:16,upgrade the 3.11 branch,CASSANDRA-15868,upgrade the 3.11 branch,,Architectural design configuration,4:851 - 4:873,1,arjan
103:17,"The bar  for that would be higher, though we’ve never explicitly defne…",CASSANDRA-15868,"The bar  for that would be higher, though we’ve never explicitly defned it.
",,Architectural solution benefits and drawbacks,4:876 - 4:952,1,arjan
103:19,mattsplat,CASSANDRA-15868,mattsplat,,Comment,4:1068 - 4:1076,1,arjan
103:18,Understandable,CASSANDRA-15868,Understandable,,Architectural solution benefits and drawbacks,4:1306 - 4:1319,1,arjan
104:1,Upgrade to snakeyaml >= 1.26 version,CASSANDRA-16150,Upgrade to snakeyaml >= 1.26 version,,Technology solution,3:53 - 3:88,1,arjan
104:2,for CVE-2017-18640 fx,CASSANDRA-16150, for CVE-2017-18640 fx,,Architectural solution benefits and drawbacks,3:89 - 3:110,1,arjan
104:3,There have been critical level CVE (CVE-2017-18640) discovered in snak…,CASSANDRA-16150,There have been critical level CVE (CVE-2017-18640) discovered in snakeyaml version earlier to  1.26. ,,Run-time quality issues,3:130 - 3:231,1,arjan
104:4,This has been patched into snakeyaml version 1.26.,CASSANDRA-16150," This has been patched into snakeyaml version 1.26.
",,Architectural solution benefits and drawbacks,3:231 - 3:283,1,arjan
104:5,This card is expected to upgrade the snakeyaml version to 1.26.,CASSANDRA-16150,"This card is expected to upgrade the snakeyaml version to 1.26.
",,Technology solution,3:346 - 3:410,1,arjan
104:22,e.dimitrova,CASSANDRA-16150,e.dimitrova,,Comment,4:239 - 4:249,1,arjan
104:6,]I think you reverted a snakeyaml upgrade patch from another  ticket r…,CASSANDRA-16150,]I think you reverted a snakeyaml upgrade patch from another  ticket recently?,,"Assumptions
Technology solution",4:262 - 4:339,2,arjan
104:7,"Just decided to mention it as, as far as I remember, the update there…",CASSANDRA-16150,"Just decided to mention it as, as far as I remember, the update there led to ClassCas-  tExceptions.
",,Architectural solution benefits and drawbacks,4:342 - 4:443,1,arjan
104:21,dcapwell,CASSANDRA-16150,dcapwell,,Comment,4:658 - 4:665,1,arjan
104:8,just upgraded to 1.23 for a harry patch and he fxed a bug caused  afte…,CASSANDRA-16150," just upgraded to 1.23 for a harry patch and he fxed a bug caused  after the merge; trunk is currently 1.23.
",,"Architectural solution benefits and drawbacks
Technology solution",4:768 - 4:877,2,arjan
104:9,Fixed in commit,CASSANDRA-16150,Fixed in commit,,Architectural solution benefits and drawbacks,4:984 - 4:998,1,arjan
104:20,brandon.williams,CASSANDRA-16150,brandon.williams,,Comment,5:740 - 5:755,1,arjan
104:10,"If we’re doing this, 1.27 is now out.",CASSANDRA-16150,"If we’re doing this, 1.27 is now out.
",,Technology solution,5:758 - 5:796,1,arjan
104:19,dcapwell,CASSANDRA-16150,dcapwell,,Comment,5:1149 - 5:1156,1,arjan
104:11,"tests look mostly clean, so I am +1",CASSANDRA-16150," tests look mostly clean, so I am +1",,Architectural solution benefits and drawbacks,5:1158 - 5:1193,1,arjan
104:12,I am ok with,CASSANDRA-16150,I am ok with,,Architectural solution benefits and drawbacks,5:1196 - 5:1207,1,arjan
104:13,1.27 or 1.26,CASSANDRA-16150,1.27 or 1.26,,Technology solution,5:1209 - 5:1220,1,arjan
104:18,ifesdjeen,CASSANDRA-16150,ifesdjeen,,Comment,5:1345 - 5:1353,1,arjan
104:14,"+1 to update to 1.26,",CASSANDRA-16150,"+1 to update to 1.26,",,Architectural solution benefits and drawbacks,5:1356 - 5:1376,1,arjan
104:15,since so far I couldn’t fnd a released version of jackson-  dataformat…,CASSANDRA-16150,"since so far I couldn’t fnd a released version of jackson-  dataformat-yaml that we depend on in Harry that has 1.27 yaml.
",,Architectural solution benefits and drawbacks,5:1378 - 5:1501,1,arjan
104:17,brandon.williams,CASSANDRA-16150,brandon.williams,,Comment,5:1661 - 5:1676,1,arjan
104:16,"Nope, go for it.",CASSANDRA-16150," Nope, go for it.
",,Architectural solution benefits and drawbacks,5:1678 - 5:1695,1,arjan
105:1,Cassandra version above 3.11.0 failing for ARM64,CASSANDRA-16212,Cassandra version above 3.11.0 failing for ARM64,,Run-time quality issues,3:53 - 3:100,1,arjan
105:2,Cassandra versions above 3.11.0 are failing on ARM64 platform with bel…,CASSANDRA-16212,Cassandra versions above 3.11.0 are failing on ARM64 platform with below issue:,,Run-time quality issues,3:120 - 3:198,1,arjan
105:34,odidev,CASSANDRA-16212,odidev,,Comment,3:493 - 3:498,1,arjan
105:3,I am working on adding ARM64 support to âĂŸzipkinâĂŹ. Zipkin uses the…,CASSANDRA-16212,"I am working on adding ARM64 support to âĂŸzipkinâĂŹ. Zipkin uses the âĂŸzipkin-  cassandraâĂŹ docker image in their build. But the image is available only for AMD64  platform.
âĂŸZipkin-cassandraâĂŹ is built from a Dockerfle which downloads and uses Cassandra.
I have checked that Cassandra has included AArch64 support from version 3.11.X and above,  and cassandra docker images are also available for ARM64 platform <[https://hub.docker.com/_/cassandra?tab=ta  For generating zipkin-cassandra docker images for ARM64, I have used cassandra version  2
3.11.0, and the image has been built fne. But if I use cassandra version above 3.11.0, say  3.11.8, then docker build fails with the below error after starting the server with âĂĲbin/-  cassandra -fâĂİ command:",,Run-time quality issues,3:510 - 4:210,1,arjan
105:4,The build environment is based on the docker image *âĂŸalpine:3.12âĂŹ*…,CASSANDRA-16212,"The build environment is based on the docker image *âĂŸalpine:3.12âĂŹ*, with *C.UTF-8*  locale and *openjdk-8*. Here is the Dockerfle for building âĂŸzipkin-cassandraâĂŹ docker  image <[https://github.com/openzipkin/zipkin/blob/2.21.5/docker/storage/cassandra/Dockerfle]>  and please fnd the Dockerfle here for the base image used in zipkin-cassandra dockerfle  <[https://github.com/openzipkin/docker-java/blob/1.8.0_252-b09/Dockerfle]>.
There is a limitation in project âĂŸzipkinâĂŹ, that the source code supports Cassandra ver-  sion 3.11.3 and above. But if I use any other version other than 3.11.0, I get the above error  that *ld-linux-aarch64.so.1* fle is missing. Another constraint is to use an âĂŸalpineâĂŹ  environment only, as building âĂŸzipkin-cassandraâĂŹ docker image involves installation  script fle, which has an alpine based coding format.
For the resolution, I followed below JIRAs raised for similar issues in 3.11.X series:  # https://issues.apache.org/jira/browse/CASSANDRA-13072  # https://issues.apache.org/jira/browse/CASSANDRA-13791  Accordingly, I have tried removing the jna-4.2.2 jar fle from /lib and downloaded jna-4.4.0  jar; but this has not solved the problem.
Also, I have downloaded âĂŸ*ld-linux-aarch64.so.1*âĂŹ from here <[https://ughe.github.io/data/2018/ld-  linux-aarch64.so.1]> and placed it at /lib/, but facing the same issue.
",,Run-time quality issues,5:535 - 5:1911,1,arjan
105:5,Zipkin requires a cassandra version greater than v3.11.3 but it seems…,CASSANDRA-16212,"Zipkin requires a cassandra version greater than v3.11.3 but it seems cassandra versions  greater than v3.11.0 does not support ARM64 platform. It will be helpful if we have ARM64  support in current versions or please provide me with some pointers on the above issue so  4
that I can add the same.
",,Motivation of design issue,5:1912 - 6:26,1,arjan
105:33,adriancole,CASSANDRA-16212,adriancole,,Comment,6:30 - 6:39,1,arjan
105:6,"The crash looks like it is happening here, which is also present in tr…",CASSANDRA-16212,"The crash looks like it is happening here, which is also present in trunk (cas-  sandra 4)",,Motivation of design issue,6:42 - 6:131,1,arjan
105:32,adriancole,CASSANDRA-16212,adriancole,,Comment,6:569 - 6:578,1,arjan
105:7,"Locally, upgrading cassandra’s 3.11.9’s jna",CASSANDRA-16212,"Locally, upgrading cassandra’s 3.11.9’s jna",,Technology solution,6:581 - 6:623,1,arjan
105:8,avoided the crash,CASSANDRA-16212,avoided the crash,,Architectural solution benefits and drawbacks,6:625 - 6:641,1,arjan
105:31,adriancole,CASSANDRA-16212,adriancole,,Comment,6:822 - 6:831,1,arjan
105:9,this fxes it in Zipkin as our integration tests now pass with arm runn…,CASSANDRA-16212,this fxes it in Zipkin as our integration tests now pass with arm running AWS  Graviton2,,Architectural solution benefits and drawbacks,6:834 - 6:921,1,arjan
105:30,mck,CASSANDRA-16212,mck,,Comment,6:958 - 6:960,1,arjan
105:10,Upgrading the JNA library,CASSANDRA-16212,Upgrading the JNA library ,,Technology solution,6:963 - 6:988,1,arjan
105:11,can cause problems with installations on diferent plat-  forms because…,CASSANDRA-16212,"can cause problems with installations on diferent plat-  forms because of its dependency on glibc. Past [discussions|https://issues.apache.org/jira/browse/CASSANDRA-  13072] on this land on not upgrading the dependency in patch versions. Furthermore the  project does not support non-x84/64 architectures, see [this discussion|https://issues.apache.org/jira/browse/CASSA  13326?focusedCommentId=15924074&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-  tabpanel#comment-15924074], we just don’t have the test infrastructure coverage.
5
The fx version for this then is only 4.0.
",,Architectural solution benefits and drawbacks,6:989 - 7:43,1,arjan
105:12,For older versions and installations the recommended workaround is dow…,CASSANDRA-16212,"For older versions and installations the recommended workaround is downloading the 5.6.0  JNA jar and placing it into the classpath ({{lib/}}), removing {{jna-4.2.2.jar}} in the pro-  cess.
",,Architectural design configuration,7:395 - 7:585,1,arjan
105:29,blerer,CASSANDRA-16212,blerer,,Comment,7:643 - 7:648,1,arjan
105:13,We already burned our fnger with that. +100 to not repeat that experie…,CASSANDRA-16212,"We already burned our fnger with that. +100 to not repeat that experience and only  upgrade JNA in 4.0.
",,Architectural solution benefits and drawbacks,7:749 - 7:853,1,arjan
105:14,"Regarding the patch, it seems that you forgot to update the license fl…",CASSANDRA-16212,"Regarding the patch, it seems that you forgot to update the license fle.
",,Architectural component behavior and structure,7:861 - 7:934,1,arjan
105:28,mck,CASSANDRA-16212,mck,,Comment,7:938 - 7:940,1,arjan
105:15,Corrected!,CASSANDRA-16212,"Corrected!
",,Architectural solution benefits and drawbacks,7:1021 - 7:1032,1,arjan
105:27,blerer,CASSANDRA-16212,blerer,,Comment,7:1036 - 7:1041,1,arjan
105:16,+1 on my side if everything looks good on CI.,CASSANDRA-16212,"+1 on my side if everything looks good on CI.
",,Architectural solution benefits and drawbacks,7:1044 - 7:1090,1,arjan
105:26,mck,CASSANDRA-16212,mck,,Comment,7:1095 - 7:1097,1,arjan
105:17,"JNA’s usages in C* are:  - in MemoryUtil.java: malloc and free,  - in…",CASSANDRA-16212,"JNA’s usages in C* are:  - in MemoryUtil.java: malloc and free,  - in implementations of NativeLibraryWrapper.java: register c, mlockall, munlockall, fc-  ntl, posix_fadvise, open, fsync, close, strerror, getpid,  - in WindowsTimer.java: register winmm.dll (though windows support is getting dropped  in 4.0).
",,Existing system architecture description,7:1100 - 7:1410,1,arjan
105:25,jolynch,CASSANDRA-16212,jolynch,,Comment,8:519 - 8:525,1,arjan
105:18,"I think the best time for a major JNA bump is before GA of 4.0, so +1…",CASSANDRA-16212,"I think the best time for a major JNA bump is before GA of 4.0, so +1 to mck’s  proposed patch (bump in 4.0, provide workaround in previous versions of upgrading the  library yourself).",,"Architectural solution benefits and drawbacks
Assumptions",8:528 - 8:712,2,arjan
105:24,mck,CASSANDRA-16212,mck,,Comment,8:1219 - 8:1221,1,arjan
105:19,This will mean that Cassandra 4.0 will not work on distributions with…,CASSANDRA-16212,"This will mean that Cassandra 4.0 will not work on distributions with <=glibc-2.6.
For example the following distributions will no longer be supported  - Centos 5 (and earlier), (EOL was 2017-03-31),  - Debian 4 Etch (and earlier), (EOL was 2010-02-15)  - Ubuntu 7.10 Gutsy Gibbon (and earlier), (EOL was 2009-04-18)",,Architectural solution benefits and drawbacks,8:1224 - 8:1540,1,arjan
105:23,adriancole,CASSANDRA-16212,adriancole,,Comment,8:1547 - 8:1556,1,arjan
105:20,what an excellent and well reasoned discussion + action plan. keep up…,CASSANDRA-16212,"what an excellent and well reasoned discussion + action plan. keep up the  good work!
",,Architectural solution benefits and drawbacks,8:1559 - 8:1645,1,arjan
105:22,dcapwell,CASSANDRA-16212,dcapwell,,Comment,14:284 - 14:291,1,arjan
105:21,"If meatspace runs out, we do normally see this in the logs as we don’t…",CASSANDRA-16212," If meatspace runs out, we do normally see this in the logs as we don’t kill the  JVM when this happens. Yet, the tests pass on jdk 11, where the main diference is how  meatspace works (not capped due to jvm bug).
",,Existing system architecture description,14:293 - 14:507,1,arjan
106:1,Cannot run tests on Java 11 with coverage analysis,CASSANDRA-16365,Cannot run tests on Java 11 with coverage analysis,,Technical debt,3:53 - 3:102,1,arjan
106:2,"When running tests with coverage analysis on Java 11, we get the probl…",CASSANDRA-16365,"When running tests with coverage analysis on Java 11, we get the problem as follows:",,Technical debt,3:122 - 3:205,1,arjan
106:3,It is caused by too old Jacoco which does seem to work well with Java…,CASSANDRA-16365,It is caused by too old Jacoco which does seem to work well with Java 11. ,,Motivation of design issue,3:1860 - 3:1933,1,arjan
106:4,Upgrading Jacoco  to the newest version 0.8.6 fxes the problem,CASSANDRA-16365,Upgrading Jacoco  to the newest version 0.8.6 fxes the problem,,"Architectural solution benefits and drawbacks
Technology solution",3:1934 - 3:1995,2,arjan
106:8,mck,CASSANDRA-16365,mck,,Comment,4:152 - 4:154,1,arjan
106:5,I’ve tested this locally and it looks good,CASSANDRA-16365,I’ve tested this locally and it looks good,,Architectural solution benefits and drawbacks,4:157 - 4:198,1,arjan
106:7,jlewandowski,CASSANDRA-16365,jlewandowski,,Comment,4:1324 - 4:1335,1,arjan
106:6,"Unfortunately, those tests are failing because Byteman fails to instal…",CASSANDRA-16365,"Unfortunately, those tests are failing because Byteman fails to install its  injections. It seem like Byteman is completely unusable with this new Jacoco version and  3
Java 11. It works fne with Java 8 though. When I run with verbose logging, Byteman  reported some problems regarding to ASM version which seemed to me dumb.
",,Technical debt,4:1338 - 5:157,1,arjan
107:1,Upgrade to Jackson Databind 2.9.10.8 or later,CASSANDRA-16462,Upgrade to Jackson Databind 2.9.10.8 or later,,Technology solution,3:53 - 3:97,1,arjan
107:2,fx high vulnerabilities,CASSANDRA-16462, fx high vulnerabilities,,Architectural solution benefits and drawbacks,3:98 - 3:121,1,arjan
107:3,There are 22 high CVEs,CASSANDRA-16462,There are 22 high CVEs,,Run-time quality issues,3:141 - 3:162,1,arjan
107:5,adelapena,CASSANDRA-16462,adelapena,,Comment,4:683 - 4:691,1,arjan
107:4,"Changes look good to me, +1",CASSANDRA-16462," Changes look good to me, +1",,Architectural solution benefits and drawbacks,4:693 - 4:720,1,arjan
108:2,jfex NPE (StateSetEnumerator.reset(âĂę)) on arm64 and jdk11,CASSANDRA-16576,jfex NPE (StateSetEnumerator.reset(âĂę)) on arm64 and jdk11,,Run-time quality issues,3:53 - 3:111,1,arjan
108:1,NPE thrown from ‘ant generate-jfex-java‘ on jdk11 and arm64.,CASSANDRA-16576,"NPE thrown from ‘ant generate-jfex-java‘ on jdk11 and arm64.
",,Run-time quality issues,3:131 - 3:192,1,arjan
108:9,mck,CASSANDRA-16576,mck,,Comment,4:229 - 4:231,1,arjan
108:3,An upgrade to jfex 1.8.2,CASSANDRA-16576,An upgrade to jfex 1.8.2 ,,Technology solution,4:234 - 4:258,1,arjan
108:4,appears to have fxed the issue,CASSANDRA-16576,appears to have fxed the issue,,Architectural solution benefits and drawbacks,4:259 - 4:288,1,arjan
108:5,In trunk it was failing ~20-30% of the time.,CASSANDRA-16576,"In trunk it was failing ~20-30% of the time.
",,Run-time quality issues,4:292 - 4:337,1,arjan
108:6,This [patch|https://github.com/apache/cassandra/compare/trunk...thelas…,CASSANDRA-16576,This [patch|https://github.com/apache/cassandra/compare/trunk...thelastpickle:mck/16576/trunk]  was run 30 times in a loop without any failure here:,,Architectural solution benefits and drawbacks,4:338 - 4:485,1,arjan
108:8,brandon.williams,CASSANDRA-16576,brandon.williams,,Comment,4:734 - 4:749,1,arjan
108:7,+1,CASSANDRA-16576,+1,,Architectural solution benefits and drawbacks,4:752 - 4:753,1,arjan